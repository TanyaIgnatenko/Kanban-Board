{"version":3,"sources":["drag-drop/internal/DragDropContext.js","constants.js","drag-drop/DragDropManager.js","drag-drop/useDraggable.js","ducks/board/action-types.js","ducks/board/actions.js","helpers/moveTo.js","components/Card/Card.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","helpers/scrollbar.js","drag-drop/useDroppableList.js","helpers/binaryLastIndexOf.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","DRAGGABLE_TYPE","CARD","LIST","MOVEMENT","BOTTOM","TOP","RIGHT","LEFT","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","droppable","_this","id","_ref","dragHandle","draggable","Object","objectWithoutProperties","handle","current","onPointerDown","event","clientX","clientY","grabDraggable","objectSpread","grabPosition","x","y","stopPropagation","addEventListener","removeEventListener","_ref2","context","type","node","renderElement","onRelease","draggedObjectRect","getBoundingClientRect","geometry","width","height","grabShift","left","top","position","movement","dndContext","manageDroppables","setState","document","moveDraggable","releaseDraggable","movementX","movementY","newPosition","push","scrollIfOutOfClient","currentDraggedObject","currentHoveredDroppable","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","style","visibility","element","elementFromPoint","closest","acceptedTypes","includes","parentNode","console","warn","setDraggedObjectRef","draggedObjectNode","scrollbarContainer","this","props","mainScrollbarContainer","clientWidth","scrollBy","innerHeight","clientLeft","clientTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","react_default","a","createElement","Fragment","clientPosition","draggedObjectRef","internal_DragDropContext","Provider","value","Component","useDraggable","useContext","useEffect","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","moveTo","concat","Card","content","setCardRef","moveCardToList","className","cardRef","useRef","ref","classNames","_ref3","index","defaultProps","mapDispatchToProps","cardId","destinationListId","indexInList","connect","AddComponent","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","_useState","useState","_useState2","slicedToArray","isCreationMode","setCreationMode","_useState3","_useState4","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","handleOpen","addComponentId","seed","uniqueId","_","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","onClick","autoFocus","placeholder","onChange","SCROLLBAR_DIRECTION","HORIZONTAL","VERTICAL","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","formListItems","items","itemToIgnoreId","listItems","map","item","data","filter","splice","enrichWithPlaceholder","useDroppableList","listType","scrollStep","scrollOffset","placeholderIndex","setPlaceholderIndex","placeholderGeometry","setPlaceholderGeometry","_useState5","_useState6","isHoveredByDraggable","setIsHoveredByDraggable","itemsRefs","listBodyRef","scrollToStartPosition","scrollToEndPosition","scrollbarDirection","listHasScrollbar","scrollWidth","scrollHeight","clientHeight","hasScrollbar","isHorizontal","listBodyRect","right","bottom","draggableCenter","placeholderIdx","array","predicate","leftIdx","rightIdx","length","middleIdx","Math","floor","binaryLastIndexOf","itemRect","extra","scrollListIfNeeded","scrollLeft","scrollTop","_useDroppable","_useContext","droppableClassName","useDroppable","setItemRefAt","idx","CardList","name","cards","addCard","setListRef","moveList","_useDroppableList","dragHandleNode","listNode","Boolean","components_Card_Card","assign","key","components_AddComponent_AddComponent","bind","_ITEM_TYPE$REGULAR_IT","defineProperty","destinationBoardId","newListIdx","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","useMemo","backgroundSize","useBoardStyle","text","components_CardList_CardList","fetchBoard","rest","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","modifiedLists","found","find","dstList","lastListIdx","findIndex","movedList","toConsumableArray","updatedLists","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.d187e569.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nconst MOVEMENT = {\r\n  BOTTOM: 'BOTTOM',\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  LEFT: 'LEFT',\r\n};\r\n\r\nexport { DRAGGABLE_TYPE, MOVEMENT };\r\n","import React from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\nimport { MOVEMENT } from '../constants';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {};\r\n  };\r\n\r\n  registerDraggable = ({ dragHandle, ...draggable }) => {\r\n    const handle = dragHandle.current;\r\n\r\n    const onPointerDown = event => {\r\n      const { clientX, clientY } = event;\r\n\r\n      this.grabDraggable({\r\n        grabPosition: {\r\n          x: clientX,\r\n          y: clientY,\r\n        },\r\n        handle,\r\n        ...draggable,\r\n      });\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    handle.addEventListener('mousedown', onPointerDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('mousedown', onPointerDown);\r\n    };\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabPosition,\r\n    context,\r\n    type,\r\n    node,\r\n    handle,\r\n    renderElement,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = node.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderElement,\r\n      handle,\r\n      onRelease,\r\n      geometry: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n        grabShift: {\r\n          x: draggedObjectRect.left - grabPosition.x,\r\n          y: draggedObjectRect.top - grabPosition.y,\r\n        },\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n      movement: [],\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('mousemove', this.moveDraggable);\r\n        document.addEventListener('mouseup', this.releaseDraggable);\r\n      },\r\n    );\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { movementX, movementY } = event;\r\n    const { geometry } = this.draggedObject;\r\n\r\n    const newPosition = {\r\n      x: clientX + geometry.grabShift.x,\r\n      y: clientY + geometry.grabShift.y,\r\n    };\r\n    this.draggedObject.position = newPosition;\r\n\r\n    const movement = [];\r\n    if (movementX) {\r\n      movement.push(movementX > 0 ? MOVEMENT.RIGHT : MOVEMENT.LEFT);\r\n    }\r\n    if (movementY) {\r\n      movement.push(movementY > 0 ? MOVEMENT.BOTTOM : MOVEMENT.TOP);\r\n    }\r\n    this.draggedObject.movement = movement;\r\n\r\n    this.scrollIfOutOfClient({ x: clientX, y: clientY });\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n  };\r\n\r\n  scrollIfOutOfClient(position) {\r\n    const {\r\n      mainScrollbarContainer: { current: scrollbarContainer },\r\n    } = this.props;\r\n\r\n    if (position.x >= scrollbarContainer.clientWidth - 50) {\r\n      scrollbarContainer.scrollBy(10, 0);\r\n    }\r\n\r\n    if (position.y >= scrollbarContainer.innerHeight - 50) {\r\n      scrollbarContainer.scrollBy(0, 20);\r\n    }\r\n\r\n    if (position.x <= scrollbarContainer.clientLeft - 50) {\r\n      scrollbarContainer.scrollBy(-20, 0);\r\n    }\r\n\r\n    if (position.y <= scrollbarContainer.clientTop - 50) {\r\n      scrollbarContainer.scrollBy(0, -20);\r\n    }\r\n  }\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('mousemove', this.moveDraggable);\r\n    document.removeEventListener('mouseup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, geometry } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + geometry.width / 2,\r\n      y: position.y + geometry.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'hidden';\r\n    }\r\n    let element = document.elementFromPoint(position.x, position.y);\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'visible';\r\n    }\r\n\r\n    while (element) {\r\n      const droppable = element.closest('.droppable');\r\n\r\n      if (!droppable) return null;\r\n\r\n      if (!this.droppables[droppable.id]) {\r\n        console.warn('Unregistered droppable with id:', droppable.id);\r\n\r\n        element = droppable.parentNode;\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        this.droppables[droppable.id].acceptedTypes.includes(\r\n          this.draggedObject.type,\r\n        )\r\n      ) {\r\n        return this.droppables[droppable.id];\r\n      }\r\n\r\n      element = droppable.parentNode;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderElement({\r\n            clientPosition: draggedObjectPosition,\r\n            draggedObjectRef: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropManager;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable(draggable) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable(draggable);\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    draggable.context,\r\n    draggable.type,\r\n    draggable.node,\r\n    draggable.dragHandle,\r\n    draggable.renderElement,\r\n    draggable.onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, newListIdx) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    newListIdx,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    node: cardRef,\r\n    dragHandle: cardRef,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        ref={draggedObjectRef}\r\n        className={classNames('card', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <h4 className='card-content'>{content}</h4>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <li id={id} ref={setRefs} className={classNames('card', className)}>\r\n      <h4 className='card-content'>{content}</h4>\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n}) {\r\n  const [isCreationMode, setCreationMode] = useState(false);\r\n\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    setCreationMode(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    if (!content) return;\r\n\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const textarea = useRef(null);\r\n  const handleOpen = useCallback(() => {\r\n    setCreationMode(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    setCreationMode(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    if (isCreationMode) {\r\n      formRef.current.scrollIntoView();\r\n    }\r\n  }, [isCreationMode]);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n    >\r\n      <button\r\n        className={classNames('open-form-btn', isCreationMode && 'hidden')}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        ref={node => (formRef.current = node)}\r\n        className={classNames(\r\n          'form',\r\n          formClassName,\r\n          !isCreationMode && 'hidden',\r\n        )}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='form-controls'>\r\n          <button className='add-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button className='close-btn' onClick={handleClose} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  formClassName: '',\r\n  className: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const uniqueId = useRef(null);\r\n  useEffect(() => {\r\n    uniqueId.current = _.uniqueId(seed);\r\n  }, [seed]);\r\n  return uniqueId.current;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('pointerdown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('pointerdown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","const SCROLLBAR_DIRECTION = {\r\n  HORIZONTAL: 0,\r\n  VERTICAL: 1,\r\n};\r\n\r\nfunction hasScrollbar(element, scrollbarDirection) {\r\n  return scrollbarDirection === SCROLLBAR_DIRECTION.HORIZONTAL\r\n    ? element.scrollWidth > element.clientWidth\r\n    : element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nexport { hasScrollbar, SCROLLBAR_DIRECTION };\r\n","import { useEffect, useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { binaryLastIndexOf } from '../helpers/binaryLastIndexOf';\r\nimport { hasScrollbar, SCROLLBAR_DIRECTION } from '../helpers/scrollbar';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction formListItems(items, itemToIgnoreId, placeholder) {\r\n  let listItems = items\r\n    ? items.map(item => ({\r\n        type: ITEM_TYPE.REGULAR_ITEM,\r\n        data: item,\r\n      }))\r\n    : [];\r\n\r\n  const shouldIgnoreItem = itemToIgnoreId !== null;\r\n  if (shouldIgnoreItem) {\r\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\r\n  }\r\n\r\n  const shouldShowPlaceholder = placeholder.index !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems = enrichWithPlaceholder(listItems, placeholder);\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction enrichWithPlaceholder(listItems, placeholder) {\r\n  listItems.splice(placeholder.index, 0, {\r\n    type: ITEM_TYPE.PLACEHOLDER,\r\n    index: placeholder.index,\r\n    geometry: placeholder.geometry,\r\n  });\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({\r\n  id,\r\n  acceptedTypes,\r\n  listType,\r\n  items,\r\n  scrollStep,\r\n  scrollOffset,\r\n}) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n  const [isHoveredByDraggable, setIsHoveredByDraggable] = useState(false);\r\n\r\n  const context = useRef({ id, index: null });\r\n  const itemsRefs = useRef([]);\r\n  const listBodyRef = useRef(null);\r\n\r\n  const scrollToStartPosition = useRef(null);\r\n  const scrollToEndPosition = useRef(null);\r\n\r\n  const scrollbarDirection =\r\n    listType === LIST_TYPE.HORIZONTAL\r\n      ? SCROLLBAR_DIRECTION.HORIZONTAL\r\n      : SCROLLBAR_DIRECTION.VERTICAL;\r\n\r\n  const listHasScrollbar = useRef(false);\r\n\r\n  useEffect(() => {\r\n    listHasScrollbar.current =\r\n      listBodyRef.current &&\r\n      hasScrollbar(listBodyRef.current, scrollbarDirection);\r\n\r\n    if (!listHasScrollbar.current) return;\r\n\r\n    const isHorizontal = listType === LIST_TYPE.HORIZONTAL;\r\n    const listBodyRect =\r\n      listBodyRef.current && listBodyRef.current.getBoundingClientRect();\r\n\r\n    scrollToStartPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.left + scrollOffset\r\n      : listBodyRect && listBodyRect.top + scrollOffset;\r\n    scrollToEndPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.right - scrollOffset\r\n      : listBodyRect && listBodyRect.bottom - scrollOffset;\r\n  }, [listHasScrollbar]);\r\n\r\n  const setItemRefAt = (item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemsRefs.current[idx] = item;\r\n  };\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setIsHoveredByDraggable(true);\r\n    setPlaceholderGeometry({\r\n      width: draggable.geometry.width,\r\n      height: draggable.geometry.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.geometry.width / 2,\r\n        y: draggable.position.y + draggable.geometry.height / 2,\r\n      };\r\n\r\n      let placeholderIdx = binaryLastIndexOf(itemsRefs.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n        switch (listType) {\r\n          case LIST_TYPE.HORIZONTAL: {\r\n            let extra = 0;\r\n            if (itemRect.width > draggable.geometry.width) {\r\n              extra = itemRect.width - draggable.geometry.width;\r\n            }\r\n            return itemRect.left + extra < draggableCenter.x;\r\n          }\r\n          case LIST_TYPE.VERTICAL: {\r\n            let extra = 0;\r\n            if (itemRect.height > draggable.geometry.height) {\r\n              extra = itemRect.height - draggable.geometry.height;\r\n            }\r\n            return itemRect.top + extra < draggableCenter.y;\r\n          }\r\n          default: {\r\n            console.error('Uknown list type:', listType);\r\n          }\r\n        }\r\n      });\r\n\r\n      if (listHasScrollbar.current) {\r\n        scrollListIfNeeded(draggableCenter);\r\n      }\r\n\r\n      placeholderIdx = placeholderIdx !== null ? placeholderIdx : 0;\r\n\r\n      context.current.index = placeholderIdx;\r\n      setPlaceholderIndex(placeholderIdx);\r\n    },\r\n    [placeholderIndex, placeholderGeometry, listType, listHasScrollbar],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setIsHoveredByDraggable(false);\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    context.current.index = null;\r\n  }, []);\r\n\r\n  const scrollListIfNeeded = useCallback(\r\n    draggableCenter => {\r\n      switch (listType) {\r\n        case LIST_TYPE.HORIZONTAL: {\r\n          if (draggableCenter.x <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollLeft -= scrollStep;\r\n          } else if (draggableCenter.x >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollLeft += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n        case LIST_TYPE.VERTICAL: {\r\n          if (draggableCenter.y <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollTop -= scrollStep;\r\n          } else if (draggableCenter.y >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollTop += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    [\r\n      listType,\r\n      listBodyRef,\r\n      scrollStep,\r\n      scrollToStartPosition,\r\n      scrollToEndPosition,\r\n    ],\r\n  );\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: context.current,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  const placeholder = {\r\n    index: placeholderIndex,\r\n    geometry: placeholderGeometry,\r\n  };\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  const listItems = formListItems(items, itemToIgnoreId, placeholder);\r\n\r\n  return {\r\n    listItems,\r\n    setItemRefAt,\r\n    listBodyRef,\r\n    droppableClassName,\r\n    isHoveredByDraggable,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","function binaryLastIndexOf(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      leftIdx = middleIdx + 1;\r\n    } else {\r\n      rightIdx = middleIdx - 1;\r\n    }\r\n  }\r\n\r\n  return rightIdx !== -1 ? rightIdx : null;\r\n}\r\n\r\nexport { binaryLastIndexOf };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable(droppable) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable(droppable);\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    droppable.id,\r\n    droppable.context,\r\n    droppable.node,\r\n    droppable.acceptedTypes,\r\n    droppable.onDraggableEnter,\r\n    droppable.onDraggableHover,\r\n    droppable.onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: 'droppable',\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const {\r\n    listBodyRef,\r\n    setItemRefAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedTypes: [DRAGGABLE_TYPE.CARD],\r\n    items: cards,\r\n    scrollStep: 20,\r\n    scrollOffset: 30,\r\n  });\r\n\r\n  const dragHandleNode = useRef(null);\r\n  const listNode = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    node: listNode,\r\n    dragHandle: dragHandleNode,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        id={id}\r\n        ref={draggedObjectRef}\r\n        className={classNames('card-list', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <header>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {Boolean(listItems.length) && (\r\n          <ul className='list-cards'>\r\n            {listItems.map((item, idx) => (\r\n              <Card\r\n                key={item.data.id}\r\n                {...item.data}\r\n                className='list-card'\r\n                setCardRef={node => setItemRefAt(node, idx)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <footer>\r\n          <AddComponent\r\n            className='add-card-btn'\r\n            openCreationFormBtnText='Добавить ещё одну карточку'\r\n            placeholderFormText='Введите название карточки'\r\n            submitFormBtnText='Добавить карточку'\r\n            onAdd={addCard.bind(null, id)}\r\n          />\r\n        </footer>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listNode.current = node;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card-list', droppableClassName, className)}\r\n    >\r\n      <header ref={dragHandleNode}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {Boolean(listItems.length) && (\r\n        <ul className='list-cards' ref={listBodyRef}>\r\n          {listItems.map(\r\n            (item, idx) =>\r\n              ({\r\n                [ITEM_TYPE.REGULAR_ITEM]: (\r\n                  <Card\r\n                    key={item.data && item.data.id}\r\n                    {...item.data}\r\n                    className='list-card'\r\n                    setCardRef={node => setItemRefAt(node, idx)}\r\n                  />\r\n                ),\r\n                [ITEM_TYPE.PLACEHOLDER]: (\r\n                  <li\r\n                    key='placeholder'\r\n                    ref={node => setItemRefAt(node, idx)}\r\n                    className='placeholder list-card'\r\n                    style={{\r\n                      width: item.geometry && item.geometry.width,\r\n                      height: item.geometry && item.geometry.height,\r\n                    }}\r\n                  />\r\n                ),\r\n              }[item.type]),\r\n          )}\r\n        </ul>\r\n      )}\r\n      <footer>\r\n        <AddComponent\r\n          className='add-card-btn'\r\n          openCreationFormBtnText='Добавить ещё одну карточку'\r\n          placeholderFormText='Введите название карточки'\r\n          submitFormBtnText='Добавить карточку'\r\n          onAdd={addCard.bind(null, id)}\r\n        />\r\n      </footer>\r\n    </li>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, name, lists, addList, scrollbarContainer }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const {\r\n    setItemRefAt,\r\n    listBodyRef,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedTypes: [DRAGGABLE_TYPE.LIST],\r\n    items: lists,\r\n    scrollOffset: 100,\r\n    scrollStep: 50,\r\n  });\r\n\r\n  const setRefs = node => {\r\n    scrollbarContainer.current = node;\r\n    listBodyRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n    >\r\n      <h1 className='board-title' style={{ color: name.color }}>\r\n        {name.text}\r\n      </h1>\r\n      <ul ref={setRefs} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <CardList\r\n                  key={item.data && item.data.id}\r\n                  className='board-list'\r\n                  setListRef={node => setItemRefAt(node, idx)}\r\n                  {...item.data}\r\n                />\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <div\r\n                  key='placeholder'\r\n                  ref={node => setItemRefAt(node, idx)}\r\n                  className='placeholder board-list'\r\n                  style={{\r\n                    width: item.geometry && item.geometry.width,\r\n                    height: item.geometry && item.geometry.height,\r\n                  }}\r\n                />\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import React, { useRef } from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  const mainScrollbarContainer = useRef(null);\n  return (\n    <DragDropManager mainScrollbarContainer={mainScrollbarContainer}>\n      <BoardContainer id={0} scrollbarContainer={mainScrollbarContainer} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          id: action.board.id,\r\n          name: action.board.name,\r\n          lists: action.board.lists,\r\n          background: action.board.background,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const modifiedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = modifiedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, newListIdx } = action;\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Board destination id does not match current board id');\r\n      }\r\n\r\n      const lastListIdx = state.board.lists.findIndex(\r\n        list => list.id === listId,\r\n      );\r\n      if (newListIdx === lastListIdx) {\r\n        return state;\r\n      }\r\n\r\n      const movedList = state.board.lists[lastListIdx];\r\n      const modifiedLists = [...state.board.lists];\r\n\r\n      modifiedLists.splice(lastListIdx, 1);\r\n      modifiedLists.splice(newListIdx, 0, movedList);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === action.listId\r\n          ? {\r\n              ...list,\r\n              cards: [...list.cards, action.card],\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, action.list],\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: {\r\n    text: 'Проект «Канбан Доска»',\r\n    color: 'white',\r\n  },\r\n  background: {\r\n    type: 'img',\r\n    color: 'rgba(252,223,161,0.91)',\r\n    url:\r\n      'https://cdn.dribbble.com/users/58661/screenshots/1818073/csc_pattern.png',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать реалистичную анимацию захвата карточки\\n' +\r\n            '( в зависимости от места захвата поворачивать карточку на разный угол, ' +\r\n            'при падении карточки плавно анимировать её разворот в исходное положение и изменение размера плейсхолдера :))\\n',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность редактировать карточки / колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность удалять карточки / колонки',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать функцию перемещения доступной и на мобильных устройствах',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'По правому клику не инициировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'После проста клика не инцииировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выделять плейсхолдер для перетаскиваемой колонки цветом',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Гибкая drag drop system',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Позволить droppable объекту иметь несколько accepted draggable types',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Устранить мельтешение карточки с мешьшим по размеру плейсхолдером',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Позволить перетаскиваемому объекту сдвигать скроллбар',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Устранить text overflow проблему',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'При открытии формы создания новой карточки передвигать её в зону видимости',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import _ from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const card = {\r\n    id: _.uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const list = {\r\n    id: _.uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list };\r\n}","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}