{"version":3,"sources":["drag-drop/internal/DragDropContext.js","helpers/scrollbar.js","constants.js","helpers/math.js","helpers/grabAt.js","drag-drop/DragDropManager.js","helpers/visibility.js","helpers/inside.js","helpers/moveTo.js","components/Card/CardAvatar.js","drag-drop/useDraggable.js","ducks/board/action-types.js","ducks/board/actions.js","components/Card/Card.js","components/CardList/CardListAvatar.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","drag-drop/useScrollable.js","drag-drop/useDroppableList.js","helpers/binaryLastIndexOf.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","hooks/uncontrollable.js","hooks/scrollByShift.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","registerScrollable","hasVerticalScrollbar","element","scrollHeight","clientHeight","hasHorizontalScrollbar","scrollWidth","clientWidth","DRAGGABLE_TYPE","CARD","LIST","MOVEMENT","BOTTOM","TOP","RIGHT","LEFT","MOUSE_BUTTON","MIDDLE","distance","point1","point2","Math","sqrt","pow","x","y","grabAt","grabPoint","dimensions","a","b","c","center","width","height","distanceToCenter","diff","angle","sign","acos","transformOrigin","concat","transform","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","scrollables","scrollable","_this","id","droppable","_ref","dragHandleRef","draggable","Object","objectWithoutProperties","handle","current","onPointerDown","event","which","grabPosition","clientX","clientY","draggedObjectRect","ref","getBoundingClientRect","grabShift","left","top","bindedStartDragIfMove","startDragIfMove","objectSpread","document","addEventListener","resetPreparationToDrag","stopPropagation","removeEventListener","newX","newY","abs","grabDraggable","_ref2","context","type","renderAvatar","onGrab","onMove","onRelease","position","movement","dndContext","manageDroppables","setState","moveDraggable","releaseDraggable","movementX","movementY","currentDraggedObject","currentHoveredDroppable","newPosition","push","scrollIfNedeed","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","node","style","visibility","hideElement","elementFromPoint","showElement","closest","acceptedTypes","includes","parentNode","console","warn","setDraggedObjectRef","draggedObjectNode","cursorPosition","_this2","this","values","forEach","scrollStep","scrollPointOffset","scrolledByTypes","scrollableNode","point","elementRect","right","bottom","inside","clientLeft","scrollLeft","clientTop","scrollTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","props","react_default","createElement","Fragment","clientPosition","internal_DragDropContext","Provider","value","Component","moveTo","CardAvatar","content","cardAvatarRef","className","_useState","useState","_useState2","slicedToArray","rotationStyle","setRotationStyle","useEffect","setTimeout","classNames","assign","defaultProps","useDraggable","_ref$onGrab","_ref$onMove","_ref$onRelease","useContext","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","Card","setCardRef","moveCardToList","cardRef","useRef","Card_CardAvatar","_ref3","placeholderIndex","tabIndex","mapDispatchToProps","cardId","destinationListId","indexInList","connect","CardListAvatar","name","cardListAvatarRef","scrollableRef","listItems","setItemRefAt","addCardComponent","isCardFormOpened","Boolean","length","map","item","idx","key","data","components_Card_Card","AddComponent","isFormOpened","onFormOpenedChange","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","trim","handleOpen","addComponentId","seed","setUniqueId","uniqueId","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","hidden","onClick","autoFocus","placeholder","onChange","aria-label","useScrollable","_ref$scrollPointOffse","_ref$scrollStep","_ref$scrolledByTypes","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","HORIZONTAL","VERTICAL","makeListItems","items","itemToIgnoreId","filter","splice","enrichWithPlaceholder","useDroppableList","listType","setPlaceholderIndex","_useState3","_useState4","placeholderGeometry","setPlaceholderGeometry","_useState5","_useState6","isHoveredByDraggable","setIsHoveredByDraggable","contextRef","itemsRef","draggableCenter","placeholderIdx","array","predicate","leftIdx","rightIdx","middleIdx","floor","binaryLastIndexOf","itemRect","extra","_useDroppable","_useContext","droppableClassName","useDroppable","CardList","cards","addCard","setListRef","moveList","useMemo","_useDroppableList","listRef","setIsCardFormOpened","components_AddComponent_AddComponent","bind","CardList_CardListAvatar","_ITEM_TYPE$REGULAR_IT","defineProperty","destinationBoardId","newListIdx","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","backgroundSize","useBoardStyle","addComponentUncontrollableProps","propName","changeHandlerName","defaultValue","reduce","setValue","onScrollablePointerDown","scroll","finishScroll","useScrollByShift","text","components_CardList_CardList","fetchBoard","rest","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","updatedLists","found","find","dstList","lastListIdx","findIndex","listToMove","toConsumableArray","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.9aefd856.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n  registerScrollable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","function hasVerticalScrollbar(element) {\r\n  return element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nfunction hasHorizontalScrollbar(element) {\r\n  return element.scrollWidth > element.clientWidth;\r\n}\r\n\r\nfunction findNearestVerticalScrollbar(position) {\r\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\r\n  while (elementFromPosition) {\r\n    if (hasVerticalScrollbar(elementFromPosition)) {\r\n      return elementFromPosition;\r\n    }\r\n    elementFromPosition = elementFromPosition.parentNode;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction findNearestHorizontalScrollbar(position) {\r\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\r\n  while (elementFromPosition) {\r\n    if (hasHorizontalScrollbar(elementFromPosition)) {\r\n      return elementFromPosition;\r\n    }\r\n    elementFromPosition = elementFromPosition.parentNode;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport {\r\n  hasVerticalScrollbar,\r\n  hasHorizontalScrollbar,\r\n  findNearestVerticalScrollbar,\r\n  findNearestHorizontalScrollbar,\r\n};\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nconst MOVEMENT = {\r\n  BOTTOM: 'BOTTOM',\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  LEFT: 'LEFT',\r\n};\r\n\r\nconst MOUSE_BUTTON = {\r\n  LEFT: 1,\r\n  MIDDLE: 2,\r\n  RIGHT: 3,\r\n};\r\n\r\nexport { DRAGGABLE_TYPE, MOVEMENT, MOUSE_BUTTON };\r\n","function distance(point1, point2) {\r\n  return Math.sqrt((point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2);\r\n}\r\n\r\n/**\r\n * return angle which is opposite to c\r\n */\r\nfunction findTriangleAngle(a, b, c) {\r\n  return Math.acos((a * a + b * b - c * c) / (2 * a * b));\r\n}\r\n\r\nexport { distance, findTriangleAngle };\r\n","import { distance, findTriangleAngle } from './math';\r\n\r\nfunction grabAt(grabPoint, dimensions) {\r\n  const center = { x: dimensions.width / 2, y: dimensions.height / 2 };\r\n\r\n  const distanceToCenter = distance(grabPoint, center);\r\n  const desiredCenterPosition = {\r\n    x: grabPoint.x,\r\n    y: grabPoint.y + distanceToCenter,\r\n  };\r\n  const diff = distance(center, desiredCenterPosition);\r\n\r\n  const sign = Math.sign(center.x - grabPoint.x);\r\n\r\n  const angle =\r\n    sign * findTriangleAngle(distanceToCenter, distanceToCenter, diff);\r\n\r\n  return {\r\n    transformOrigin: `${(grabPoint.x / dimensions.width) *\r\n      100}% ${(grabPoint.y / dimensions.height) * 100}%`,\r\n    transform: `rotate(${angle}rad)`,\r\n  };\r\n}\r\n\r\nexport { grabAt };\r\n","import React, { useEffect, useState } from 'react';\r\nimport memoize from 'memoize-one';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nimport {\r\n  hasHorizontalScrollbar,\r\n  hasVerticalScrollbar,\r\n} from '../helpers/scrollbar';\r\n\r\nimport { hideElement, showElement } from '../helpers/visibility';\r\nimport { MOUSE_BUTTON, MOVEMENT } from '../constants';\r\nimport { inside } from '../helpers/inside';\r\nimport { grabAt } from '../helpers/grabAt';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n  scrollables = {};\r\n\r\n  registerScrollable = scrollable => {\r\n    this.scrollables[scrollable.id] = scrollable;\r\n    return () => {\r\n      delete this.scrollables[scrollable.id];\r\n    };\r\n  };\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {\r\n      delete this.droppables[droppable.id];\r\n    };\r\n  };\r\n\r\n  registerDraggable = ({ dragHandleRef, ...draggable }) => {\r\n    const handle = dragHandleRef.current;\r\n\r\n    const onPointerDown = event => {\r\n      const { which: mouseButton } = event;\r\n      if (mouseButton !== MOUSE_BUTTON.LEFT) return;\r\n\r\n      const { clientX, clientY } = event;\r\n      const grabPosition = {\r\n        x: clientX,\r\n        y: clientY,\r\n      };\r\n      const draggedObjectRect = draggable.ref.current.getBoundingClientRect();\r\n      const grabShift = {\r\n        x: grabPosition.x - draggedObjectRect.left,\r\n        y: grabPosition.y - draggedObjectRect.top,\r\n      };\r\n\r\n      this.bindedStartDragIfMove = event =>\r\n        this.startDragIfMove(\r\n          { handle, ...draggable },\r\n          grabPosition,\r\n          grabShift,\r\n          event,\r\n        );\r\n\r\n      document.addEventListener('pointermove', this.bindedStartDragIfMove);\r\n      document.addEventListener('pointerup', this.resetPreparationToDrag);\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    handle.addEventListener('pointerdown', onPointerDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('pointerdown', onPointerDown);\r\n    };\r\n  };\r\n\r\n  startDragIfMove = (draggable, grabPosition, grabShift, event) => {\r\n    const { clientX: newX, clientY: newY } = event;\r\n\r\n    if (\r\n      Math.abs(newX - grabPosition.x) > 2 ||\r\n      Math.abs(newY - grabPosition.y) > 2\r\n    ) {\r\n      document.removeEventListener('pointermove', this.bindedStartDragIfMove);\r\n      document.removeEventListener('pointerup', this.resetPreparationToDrag);\r\n\r\n      this.grabDraggable({\r\n        grabShift,\r\n        ...draggable,\r\n      });\r\n    }\r\n  };\r\n\r\n  resetPreparationToDrag = () => {\r\n    document.removeEventListener('pointermove', this.bindedStartDragIfMove);\r\n    document.removeEventListener('pointerup', this.resetPreparationToDrag);\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabShift,\r\n    context,\r\n    type,\r\n    ref,\r\n    handle,\r\n    renderAvatar,\r\n    onGrab,\r\n    onMove,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = ref.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderAvatar,\r\n      handle,\r\n      onGrab,\r\n      onMove,\r\n      onRelease,\r\n      grabShift,\r\n      dimensions: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n      movement: [],\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('pointermove', this.moveDraggable);\r\n        document.addEventListener('pointerup', this.releaseDraggable);\r\n      },\r\n    );\r\n\r\n    this.draggedObject.onGrab();\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n    registerScrollable: this.registerScrollable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { movementX, movementY } = event;\r\n    const { grabShift } = this.draggedObject;\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    const newPosition = {\r\n      x: clientX - grabShift.x,\r\n      y: clientY - grabShift.y,\r\n    };\r\n    currentDraggedObject.position = newPosition;\r\n\r\n    const movement = [];\r\n    if (movementX) {\r\n      movement.push(movementX > 0 ? MOVEMENT.RIGHT : MOVEMENT.LEFT);\r\n    }\r\n    if (movementY) {\r\n      movement.push(movementY > 0 ? MOVEMENT.BOTTOM : MOVEMENT.TOP);\r\n    }\r\n    currentDraggedObject.movement = movement;\r\n\r\n    this.scrollIfNedeed({ x: clientX, y: clientY });\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n\r\n    currentDraggedObject.onMove({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n  };\r\n\r\n  scrollIfNedeed(cursorPosition) {\r\n    Object.values(this.scrollables).forEach(scrollable => {\r\n      const {\r\n        scrollStep,\r\n        scrollPointOffset,\r\n        scrolledByTypes,\r\n        ref: { current: scrollableNode },\r\n      } = scrollable;\r\n\r\n      if (!scrollableNode) return;\r\n\r\n      if (!scrolledByTypes.includes(this.draggedObject.type)) return;\r\n\r\n      if (!inside(cursorPosition, scrollableNode)) return;\r\n\r\n      if (hasHorizontalScrollbar(scrollableNode)) {\r\n        if (cursorPosition.x <= scrollableNode.clientLeft + scrollPointOffset) {\r\n          scrollableNode.scrollLeft -= scrollStep;\r\n        } else if (\r\n          cursorPosition.x >=\r\n          scrollableNode.clientWidth - scrollPointOffset\r\n        ) {\r\n          scrollableNode.scrollLeft += scrollStep;\r\n        }\r\n      }\r\n      if (hasVerticalScrollbar(scrollableNode)) {\r\n        if (cursorPosition.y <= scrollableNode.clientTop + scrollPointOffset) {\r\n          scrollableNode.scrollTop -= scrollStep;\r\n        } else if (\r\n          cursorPosition.y >=\r\n          scrollableNode.clientWidth - scrollPointOffset\r\n        ) {\r\n          scrollableNode.scrollTop += scrollStep;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('pointermove', this.moveDraggable);\r\n    document.removeEventListener('pointerup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, dimensions } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + dimensions.width / 2,\r\n      y: position.y + dimensions.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    hideElement(draggedNode);\r\n    let element = document.elementFromPoint(position.x, position.y);\r\n    showElement(draggedNode);\r\n\r\n    while (element) {\r\n      const droppable = element.closest('.droppable');\r\n\r\n      if (!droppable) return null;\r\n\r\n      if (!this.droppables[droppable.id]) {\r\n        console.warn('Unregistered droppable with id:', droppable.id);\r\n\r\n        element = droppable.parentNode;\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        this.droppables[droppable.id].acceptedTypes.includes(\r\n          this.draggedObject.type,\r\n        )\r\n      ) {\r\n        return droppable;\r\n      }\r\n\r\n      element = droppable.parentNode;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderAvatar({\r\n            clientPosition: draggedObjectPosition,\r\n            grabPoint: draggedObject.grabShift,\r\n            dimensions: draggedObject.dimensions,\r\n            ref: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDragDropManager.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default DragDropManager;\r\n","function hideElement(element) {\r\n  if (element) {\r\n    element.style.visibility = 'hidden';\r\n  }\r\n}\r\n\r\nfunction showElement(element) {\r\n  if (element) {\r\n    element.style.visibility = 'visible';\r\n  }\r\n}\r\n\r\nexport { hideElement, showElement };\r\n","function inside(point, element) {\r\n  const elementRect = element.getBoundingClientRect();\r\n  return (\r\n    point.x >= elementRect.left &&\r\n    point.x <= elementRect.right &&\r\n    point.y >= elementRect.top &&\r\n    point.y <= elementRect.bottom\r\n  );\r\n}\r\n\r\nexport { inside };\r\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { moveTo } from '../../helpers/moveTo';\r\nimport PropTypes from 'prop-types';\r\nimport { grabAt } from '../../helpers/grabAt';\r\n\r\nfunction CardAvatar({\r\n  id,\r\n  content,\r\n  cardAvatarRef,\r\n  className,\r\n  grabPoint,\r\n  dimensions,\r\n  clientPosition,\r\n}) {\r\n  const [rotationStyle, setRotationStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    const rotationStyle = grabAt(grabPoint, dimensions);\r\n    setTimeout(() => {\r\n      setRotationStyle(rotationStyle);\r\n    }, 2);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={cardAvatarRef}\r\n      className={classNames('card', 'dragged', className)}\r\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\r\n    >\r\n      <h4 className='card-content'>{content}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nCardAvatar.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  cardAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  clientPosition: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  grabPoint: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  dimensions: PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCardAvatar.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default CardAvatar;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable({\r\n  ref,\r\n  type,\r\n  context,\r\n  dragHandleRef,\r\n  renderAvatar,\r\n  onGrab = () => {},\r\n  onMove = () => {},\r\n  onRelease = () => {},\r\n}) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable({\r\n      ref,\r\n      type,\r\n      context,\r\n      dragHandleRef,\r\n      renderAvatar,\r\n      onGrab,\r\n      onMove,\r\n      onRelease,\r\n    });\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    ref,\r\n    type,\r\n    context,\r\n    dragHandleRef,\r\n    renderAvatar,\r\n    onGrab,\r\n    onMove,\r\n    onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, newListIdx) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    newListIdx,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport CardAvatar from './CardAvatar';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    ref: cardRef,\r\n    dragHandleRef: cardRef,\r\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\r\n      <CardAvatar\r\n        id={id}\r\n        cardAvatarRef={ref}\r\n        content={content}\r\n        className={className}\r\n        grabPoint={grabPoint}\r\n        dimensions={dimensions}\r\n        clientPosition={clientPosition}\r\n      />\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.placeholderIndex,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card', className)}\r\n      tabIndex={0}\r\n    >\r\n      <h4 className='card-content'>{content}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card } from '../Card';\r\nimport { moveTo } from '../../helpers/moveTo';\r\nimport { grabAt } from '../../helpers/grabAt';\r\n\r\nfunction CardListAvatar({\r\n  id,\r\n  name,\r\n  cardListAvatarRef,\r\n  dragHandleRef,\r\n  scrollableRef,\r\n  listItems,\r\n  setItemRefAt,\r\n  addCardComponent,\r\n  isCardFormOpened,\r\n  grabPoint,\r\n  dimensions,\r\n  clientPosition,\r\n  className,\r\n}) {\r\n  const [rotationStyle, setRotationStyle] = useState({});\r\n  useEffect(() => {\r\n    const rotationStyle = grabAt(grabPoint, dimensions);\r\n    setTimeout(() => {\r\n      setRotationStyle(rotationStyle);\r\n    }, 2);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={cardListAvatarRef}\r\n      className={classNames('card-list', 'dragged', className)}\r\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\r\n    >\r\n      <header ref={dragHandleRef}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {(Boolean(listItems.length) || isCardFormOpened) && (\r\n        <ul ref={scrollableRef} className='list-cards'>\r\n          {listItems.map((item, idx) => (\r\n            <li key={item.data.id}>\r\n              <Card\r\n                {...item.data}\r\n                setCardRef={node => setItemRefAt(node, idx)}\r\n                className='list-card'\r\n              />\r\n            </li>\r\n          ))}\r\n          {isCardFormOpened && addCardComponent}\r\n        </ul>\r\n      )}\r\n      <footer>{!isCardFormOpened && addCardComponent}</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nCardListAvatar.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  cardListAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  dragHandleRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  scrollableRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  listItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      data: PropTypes.shape({\r\n        id: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n          .isRequired,\r\n        content: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n      type: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  setItemRefAt: PropTypes.func.isRequired,\r\n  addCardComponent: PropTypes.element.isRequired,\r\n  isCardFormOpened: PropTypes.bool.isRequired,\r\n  clientPosition: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  grabPoint: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  dimensions: PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCardListAvatar.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default CardListAvatar;\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  isFormOpened,\r\n  onFormOpenedChange,\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n  style,\r\n}) {\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    onFormOpenedChange(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    if (!content.trim()) return;\r\n\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    onFormOpenedChange(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    onFormOpenedChange(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    if (isFormOpened) {\r\n      formRef.current.scrollIntoView(false);\r\n    }\r\n  }, [isFormOpened]);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n      style={style}\r\n    >\r\n      <button\r\n        className={classNames('open-form-btn', {\r\n          hidden: isFormOpened,\r\n        })}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        ref={node => (formRef.current = node)}\r\n        className={classNames('form', formClassName, {\r\n          hidden: !isFormOpened,\r\n        })}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='form-controls'>\r\n          <button className='add-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button\r\n            aria-label='close'\r\n            className='close-btn'\r\n            onClick={handleClose}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  isFormOpened: PropTypes.bool,\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  onFormOpenedChange: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  isFormOpened: null,\r\n  className: '',\r\n  formClassName: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useState, useEffect } from 'react';\r\nimport { uniqueId } from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const [id, setUniqueId] = useState(null);\r\n  useEffect(() => {\r\n    setUniqueId(uniqueId(seed));\r\n  }, [seed]);\r\n  return id;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('pointerdown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('pointerdown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","import { useEffect, useRef, useContext } from 'react';\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useScrollable({\r\n  id,\r\n  scrollPointOffset = 0,\r\n  scrollStep = 10,\r\n  scrolledByTypes = [],\r\n}) {\r\n  const scrollableRef = useRef(null);\r\n\r\n  const { registerScrollable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterScrollable = registerScrollable({\r\n      id,\r\n      ref: scrollableRef,\r\n      scrolledByTypes,\r\n      scrollPointOffset,\r\n      scrollStep,\r\n    });\r\n\r\n    return unregisterScrollable;\r\n  }, [id, scrollStep, scrollPointOffset, scrolledByTypes]);\r\n\r\n  return scrollableRef;\r\n}\r\n\r\nexport { useScrollable };\r\n","import { useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { binaryLastIndexOf } from '../helpers/binaryLastIndexOf';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction makeListItems(items, itemToIgnoreId, placeholder) {\r\n  let listItems = items\r\n    ? items.map(item => ({\r\n        type: ITEM_TYPE.REGULAR_ITEM,\r\n        data: item,\r\n      }))\r\n    : [];\r\n\r\n  const shouldIgnoreItem = itemToIgnoreId !== null;\r\n  if (shouldIgnoreItem) {\r\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\r\n  }\r\n\r\n  const shouldShowPlaceholder = placeholder.placeholderIndex !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems = enrichWithPlaceholder(listItems, placeholder);\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction enrichWithPlaceholder(listItems, placeholder) {\r\n  listItems.splice(placeholder.placeholderIndex, 0, {\r\n    type: ITEM_TYPE.PLACEHOLDER,\r\n    placeholderIndex: placeholder.placeholderIndex,\r\n    dimensions: placeholder.dimensions,\r\n  });\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({ id, acceptedTypes, listType, items }) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n  const [isHoveredByDraggable, setIsHoveredByDraggable] = useState(false);\r\n\r\n  const contextRef = useRef({ id, placeholderIndex: null });\r\n  const itemsRef = useRef([]);\r\n\r\n  const setItemRefAt = (item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemsRef.current[idx] = item;\r\n  };\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setIsHoveredByDraggable(true);\r\n    setPlaceholderGeometry({\r\n      width: draggable.dimensions.width,\r\n      height: draggable.dimensions.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.dimensions.width / 2,\r\n        y: draggable.position.y + draggable.dimensions.height / 2,\r\n      };\r\n\r\n      let placeholderIdx = binaryLastIndexOf(itemsRef.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n\r\n        switch (listType) {\r\n          case LIST_TYPE.HORIZONTAL: {\r\n            let extra = 0;\r\n            if (itemRect.width > draggable.dimensions.width) {\r\n              // to avoid swap of placeholder and bigger card back and forth\r\n              extra = itemRect.width - draggable.dimensions.width;\r\n            }\r\n            return itemRect.left + extra < draggableCenter.x;\r\n          }\r\n          case LIST_TYPE.VERTICAL: {\r\n            let extra = 0;\r\n            if (itemRect.height > draggable.dimensions.height) {\r\n              // to avoid swap of placeholder and bigger card back and forth\r\n              extra = itemRect.height - draggable.dimensions.height;\r\n            }\r\n            return itemRect.top + extra < draggableCenter.y;\r\n          }\r\n          default: {\r\n            console.error('Unknown list type:', listType);\r\n          }\r\n        }\r\n      });\r\n\r\n      placeholderIdx = placeholderIdx !== null ? placeholderIdx : 0;\r\n\r\n      contextRef.current.placeholderIndex = placeholderIdx;\r\n      setPlaceholderIndex(placeholderIdx);\r\n    },\r\n    [placeholderIndex, listType],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setIsHoveredByDraggable(false);\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    contextRef.current.placeholderIndex = null;\r\n  }, []);\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: contextRef.current,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  const placeholder = {\r\n    placeholderIndex,\r\n    dimensions: placeholderGeometry,\r\n  };\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  const listItems = makeListItems(items, itemToIgnoreId, placeholder);\r\n\r\n\r\n\r\n  return {\r\n    listItems,\r\n    setItemRefAt,\r\n    droppableClassName,\r\n    isHoveredByDraggable,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","function binaryLastIndexOf(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      leftIdx = middleIdx + 1;\r\n    } else {\r\n      rightIdx = middleIdx - 1;\r\n    }\r\n  }\r\n\r\n  return rightIdx !== -1 ? rightIdx : null;\r\n}\r\n\r\nexport { binaryLastIndexOf };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable({\r\n  id,\r\n  context,\r\n  acceptedTypes,\r\n  onDraggableEnter,\r\n  onDraggableHover,\r\n  onDraggableLeave,\r\n}) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable({\r\n      id,\r\n      context,\r\n      acceptedTypes,\r\n      onDraggableEnter,\r\n      onDraggableHover,\r\n      onDraggableLeave,\r\n    });\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    id,\r\n    context,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: 'droppable',\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useState, useRef, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport CardListAvatar from './CardListAvatar';\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useScrollable } from '../../drag-drop/useScrollable';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.CARD], []);\r\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedTypes,\r\n    items: cards,\r\n  });\r\n\r\n  const scrolledByTypes = useMemo(() => [DRAGGABLE_TYPE.CARD]);\r\n  const scrollableRef = useScrollable({\r\n    id,\r\n    scrolledByTypes,\r\n    scrollPointOffset: 60,\r\n    scrollStep: 20,\r\n  });\r\n\r\n  const dragHandleRef = useRef(null);\r\n  const listRef = useRef(null);\r\n\r\n  const [isCardFormOpened, setIsCardFormOpened] = useState(false);\r\n\r\n  const addCardComponent = (\r\n    <AddComponent\r\n      isFormOpened={isCardFormOpened}\r\n      formClassName='card-form'\r\n      openCreationFormBtnText='Добавить ещё одну карточку'\r\n      placeholderFormText='Введите название карточки'\r\n      submitFormBtnText='Добавить карточку'\r\n      onFormOpenedChange={value => setIsCardFormOpened(value)}\r\n      onAdd={addCard.bind(null, id)}\r\n    />\r\n  );\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    ref: listRef,\r\n    dragHandleRef,\r\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\r\n      <CardListAvatar\r\n        id={id}\r\n        name={name}\r\n        cardListAvatarRef={ref}\r\n        dragHandleRef={dragHandleRef}\r\n        scrollableRef={scrollableRef}\r\n        listItems={listItems}\r\n        setItemRefAt={setItemRefAt}\r\n        addCardComponent={addCardComponent}\r\n        isCardFormOpened={isCardFormOpened}\r\n        grabPoint={grabPoint}\r\n        dimensions={dimensions}\r\n        clientPosition={clientPosition}\r\n        className={className}\r\n      />\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.placeholderIndex,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div id={id} className={classNames(droppableClassName, className)}>\r\n      <div id={id} ref={setRefs} className='card-list' tabIndex={0}>\r\n        <header ref={dragHandleRef}>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {(Boolean(listItems.length) || isCardFormOpened) && (\r\n          <ul ref={scrollableRef} className='list-cards'>\r\n            {listItems.map(\r\n              (item, idx) =>\r\n                ({\r\n                  [ITEM_TYPE.REGULAR_ITEM]: (\r\n                    <li key={item.data && item.data.id}>\r\n                      <Card\r\n                        {...item.data}\r\n                        className='list-card'\r\n                        setCardRef={node => setItemRefAt(node, idx)}\r\n                      />\r\n                    </li>\r\n                  ),\r\n                  [ITEM_TYPE.PLACEHOLDER]: (\r\n                    <li key='placeholder'>\r\n                      <div\r\n                        ref={node => setItemRefAt(node, idx)}\r\n                        className='placeholder list-card'\r\n                        style={{\r\n                          width: item.dimensions && item.dimensions.width,\r\n                          height: item.dimensions && item.dimensions.height,\r\n                        }}\r\n                      />\r\n                    </li>\r\n                  ),\r\n                }[item.type]),\r\n            )}\r\n            {isCardFormOpened && addCardComponent}\r\n          </ul>\r\n        )}\r\n        <footer>{!isCardFormOpened && addCardComponent}</footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { useUncontrollableProps } from '../../hooks/uncontrollable';\r\nimport { useScrollByShift } from '../../hooks/scrollByShift';\r\nimport { useScrollable } from '../../drag-drop/useScrollable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, name, lists, addList }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.LIST], []);\r\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedTypes,\r\n    items: lists,\r\n  });\r\n\r\n  const scrolledByTypes = useMemo(\r\n    () => [DRAGGABLE_TYPE.LIST, DRAGGABLE_TYPE.CARD],\r\n    [],\r\n  );\r\n  const scrollableRef = useScrollable({\r\n    id,\r\n    scrolledByTypes,\r\n    scrollPointOffset: 60,\r\n    scrollStep: 20,\r\n  });\r\n\r\n  const addComponentUncontrollableProps = useUncontrollableProps([\r\n    {\r\n      propName: 'isFormOpened',\r\n      changeHandlerName: 'onFormOpenedChange',\r\n      defaultValue: false,\r\n    },\r\n  ]);\r\n\r\n  const onScrollablePointerDown = useScrollByShift(scrollableRef);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n      onPointerDown={onScrollablePointerDown}\r\n    >\r\n      <h1 className='board-title' style={{ color: name.color }}>\r\n        {name.text}\r\n      </h1>\r\n      <ul ref={scrollableRef} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <li key={item.data && item.data.id}>\r\n                  <CardList\r\n                    className='board-list-zone'\r\n                    setListRef={node => setItemRefAt(node, idx)}\r\n                    {...item.data}\r\n                  />\r\n                </li>\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <li key='placeholder'>\r\n                  <div\r\n                    ref={node => setItemRefAt(node, idx)}\r\n                    className='placeholder board-list-zone'\r\n                    style={{\r\n                      width: item.dimensions && item.dimensions.width,\r\n                      height: item.dimensions && item.dimensions.height,\r\n                    }}\r\n                  />\r\n                </li>\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n          {...addComponentUncontrollableProps}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import { useState } from 'react';\r\n\r\nfunction useUncontrollableProps(uncontrollableProps) {\r\n  return uncontrollableProps.reduce(\r\n    (props, { propName, changeHandlerName, defaultValue }) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const [value, setValue] = useState(defaultValue);\r\n      props[propName] = value;\r\n      props[changeHandlerName] = setValue;\r\n      return props;\r\n    },\r\n    {},\r\n  );\r\n}\r\n\r\nexport { useUncontrollableProps };\r\n","import { useCallback } from 'react';\r\n\r\nfunction useScrollByShift(scrollableRef) {\r\n  const scroll = useCallback(event => {\r\n    const { movementX } = event;\r\n\r\n    scrollableRef.current.scrollLeft -= movementX;\r\n  }, []);\r\n\r\n  const finishScroll = useCallback(() => {\r\n    document.removeEventListener('pointermove', scroll);\r\n    document.removeEventListener('pointerup', finishScroll);\r\n  }, []);\r\n\r\n  const prepareToScroll = useCallback(() => {\r\n    document.addEventListener('pointermove', scroll);\r\n    document.addEventListener('pointerup', finishScroll);\r\n  }, []);\r\n\r\n  const onScrollablePointerDown = prepareToScroll;\r\n\r\n  return onScrollablePointerDown;\r\n}\r\n\r\nexport { useScrollByShift };\r\n","import React from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  return (\n    <DragDropManager>\n      <BoardContainer id={0} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: action.board,\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const updatedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = updatedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, newListIdx } = action;\r\n\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Destination board id does not match current board id');\r\n      }\r\n\r\n      const lastListIdx = state.board.lists.findIndex(\r\n        list => list.id === listId,\r\n      );\r\n      if (newListIdx === lastListIdx) {\r\n        return state;\r\n      }\r\n\r\n      const listToMove = state.board.lists[lastListIdx];\r\n      const updatedLists = [...state.board.lists];\r\n\r\n      updatedLists.splice(lastListIdx, 1);\r\n      updatedLists.splice(newListIdx, 0, listToMove);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const { listId, card } = action;\r\n\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === listId\r\n          ? {\r\n              ...list,\r\n              cards: list.cards.concat(card),\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      const { boardId, list } = action;\r\n\r\n      if (state.board.id !== boardId) {\r\n        console.error('Board id does not match current board id');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: state.board.lists.concat(list),\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: {\r\n    text: 'Проект «Канбан Доска»',\r\n    color: 'white',\r\n  },\r\n  background: {\r\n    type: 'img',\r\n    url:\r\n      'https://cdn.dribbble.com/users/81061/screenshots/1845123/untitled-1.png',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать реалистичную анимацию захвата карточки\\n' +\r\n            '( в зависимости от места захвата поворачивать карточку на разный угол, ' +\r\n            'при падении карточки плавно анимировать её разворот в исходное положение :))\\n',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность редактировать карточки / колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность удалять карточки / колонки',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать функцию перемещения доступной и на мобильных устройствах',\r\n        },\r\n\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'После проста клика не инцииировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'По правому и среднему клику мыши не инициировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выделять плейсхолдер для перетаскиваемой колонки цветом',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Гибкая drag drop system',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Позволить droppable объекту иметь несколько accepted draggable types',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Устранить мельтешение карточки с мешьшим по размеру плейсхолдером',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Позволить перетаскиваемому объекту сдвигать скроллбар',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'При нажатии на доску и попытки сдвига её, скроллить доску',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Устранить text overflow проблему',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'При открытии формы создания новой карточки передвигать её в зону видимости',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать карточки и листы доступными для клавиатуры',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Запретить создание пустых или наполненных только пробелами и переносами строк карточек/колонок',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import { uniqueId } from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const newCard = {\r\n    id: uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card: newCard };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const newList = {\r\n    id: uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list: newList };\r\n}\r\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}