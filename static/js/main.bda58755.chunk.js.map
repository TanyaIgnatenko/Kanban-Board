{"version":3,"sources":["drag-drop/internal/DragDropContext.js","drag-drop/DragDropManager.js","drag-drop/useDraggable.js","constants.js","ducks/board/action-types.js","ducks/board/actions.js","helpers/moveTo.js","components/Card/Card.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","helpers/scrollbar.js","drag-drop/useDroppableList.js","helpers/lowerBound.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","droppable","_this","id","_ref","dragHandle","draggable","Object","objectWithoutProperties","handle","current","onPointerDown","event","clientX","clientY","grabDraggable","objectSpread","grabPosition","x","y","stopPropagation","addEventListener","removeEventListener","_ref2","context","type","node","renderElement","onRelease","draggedObjectRect","getBoundingClientRect","geometry","width","height","grabShift","left","top","position","dndContext","manageDroppables","setState","document","moveDraggable","releaseDraggable","newPosition","scrollIfOutOfClient","currentDraggedObject","currentHoveredDroppable","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","style","visibility","element","elementFromPoint","closest","acceptedTypes","includes","parentNode","console","warn","setDraggedObjectRef","draggedObjectNode","scrollbarContainer","this","props","mainScrollbarContainer","clientWidth","scrollBy","innerHeight","clientLeft","clientTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","react_default","a","createElement","Fragment","clientPosition","draggedObjectRef","internal_DragDropContext","Provider","value","Component","useDraggable","useContext","useEffect","DRAGGABLE_TYPE","CARD","LIST","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","moveTo","concat","Card","content","setCardRef","moveCardToList","className","cardRef","useRef","ref","classNames","_ref3","index","defaultProps","mapDispatchToProps","cardId","destinationListId","indexInList","connect","AddComponent","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","_useState","useState","_useState2","slicedToArray","isCreationMode","setCreationMode","_useState3","_useState4","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","handleOpen","addComponentId","seed","uniqueId","_","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","onClick","autoFocus","placeholder","onChange","SCROLLBAR_DIRECTION","HORIZONTAL","VERTICAL","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","formListItems","items","itemToIgnoreId","listItems","map","item","data","filter","splice","enrichWithPlaceholder","useDroppableList","listType","scrollStep","scrollOffset","placeholderIndex","setPlaceholderIndex","placeholderGeometry","setPlaceholderGeometry","itemRefs","listBodyRef","scrollToStartPosition","scrollToEndPosition","scrollbarDirection","listHasScrollbar","scrollWidth","scrollHeight","clientHeight","hasScrollbar","isHorizontal","listBodyRect","right","bottom","setItemRefAt","idx","draggableCenter","array","predicate","leftIdx","rightIdx","length","middleIdx","Math","floor","binaryLastIndexOf","itemRect","itemCenter","extra","scrollListIfNeeded","scrollLeft","scrollTop","_useDroppable","_useContext","droppableClassName","useDroppable","CardList","name","cards","addCard","setListRef","moveList","_useDroppableList","dragHandleNode","listNode","Boolean","components_Card_Card","assign","key","components_AddComponent_AddComponent","bind","_ITEM_TYPE$REGULAR_IT","defineProperty","destinationBoardId","indexInBoard","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","useMemo","backgroundSize","useBoardStyle","components_CardList_CardList","fetchBoard","rest","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","modifiedLists","found","find","dstList","lastIdx","findIndex","movedList","idxToRemoveAt","toConsumableArray","updatedLists","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.bda58755.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","import React from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {};\r\n  };\r\n\r\n  registerDraggable = ({ dragHandle, ...draggable }) => {\r\n    const handle = dragHandle.current;\r\n\r\n    const onPointerDown = event => {\r\n      const { clientX, clientY } = event;\r\n\r\n      this.grabDraggable({\r\n        grabPosition: {\r\n          x: clientX,\r\n          y: clientY,\r\n        },\r\n        handle,\r\n        ...draggable,\r\n      });\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    handle.addEventListener('mousedown', onPointerDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('mousedown', onPointerDown);\r\n    };\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabPosition,\r\n    context,\r\n    type,\r\n    node,\r\n    handle,\r\n    renderElement,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = node.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderElement,\r\n      handle,\r\n      onRelease,\r\n      geometry: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n        grabShift: {\r\n          x: draggedObjectRect.left - grabPosition.x,\r\n          y: draggedObjectRect.top - grabPosition.y,\r\n        },\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('mousemove', this.moveDraggable);\r\n        document.addEventListener('mouseup', this.releaseDraggable);\r\n      },\r\n    );\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { geometry } = this.draggedObject;\r\n\r\n    const newPosition = {\r\n      x: clientX + geometry.grabShift.x,\r\n      y: clientY + geometry.grabShift.y,\r\n    };\r\n    this.draggedObject.position = newPosition;\r\n\r\n    this.scrollIfOutOfClient({ x: clientX, y: clientY });\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n  };\r\n\r\n  scrollIfOutOfClient(position) {\r\n    const {\r\n      mainScrollbarContainer: { current: scrollbarContainer },\r\n    } = this.props;\r\n\r\n    if (position.x >= scrollbarContainer.clientWidth - 50) {\r\n      scrollbarContainer.scrollBy(10, 0);\r\n    }\r\n\r\n    if (position.y >= scrollbarContainer.innerHeight - 50) {\r\n      scrollbarContainer.scrollBy(0, 20);\r\n    }\r\n\r\n    if (position.x <= scrollbarContainer.clientLeft - 50) {\r\n      scrollbarContainer.scrollBy(-20, 0);\r\n    }\r\n\r\n    if (position.y <= scrollbarContainer.clientTop - 50) {\r\n      scrollbarContainer.scrollBy(0, -20);\r\n    }\r\n  }\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('mousemove', this.moveDraggable);\r\n    document.removeEventListener('mouseup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, geometry } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + geometry.width / 2,\r\n      y: position.y + geometry.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'hidden';\r\n    }\r\n    let element = document.elementFromPoint(position.x, position.y);\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'visible';\r\n    }\r\n\r\n    while (element) {\r\n      const droppable = element.closest('.droppable');\r\n\r\n      if (!droppable) return null;\r\n\r\n      if (!this.droppables[droppable.id]) {\r\n        console.warn('Unregistered droppable with id:', droppable.id);\r\n\r\n        element = droppable.parentNode;\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        this.droppables[droppable.id].acceptedTypes.includes(\r\n          this.draggedObject.type,\r\n        )\r\n      ) {\r\n        return this.droppables[droppable.id];\r\n      }\r\n\r\n      element = droppable.parentNode;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderElement({\r\n            clientPosition: draggedObjectPosition,\r\n            draggedObjectRef: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropManager;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable(draggable) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable(draggable);\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    draggable.context,\r\n    draggable.type,\r\n    draggable.node,\r\n    draggable.dragHandle,\r\n    draggable.renderElement,\r\n    draggable.onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nexport { DRAGGABLE_TYPE };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, indexInBoard) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    indexInBoard,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    node: cardRef,\r\n    dragHandle: cardRef,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        ref={draggedObjectRef}\r\n        className={classNames('card', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <h4 className='card-content'>{content}</h4>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <li id={id} ref={setRefs} className={classNames('card', className)}>\r\n      <h4 className='card-content'>{content}</h4>\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n}) {\r\n  const [isCreationMode, setCreationMode] = useState(false);\r\n\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    setCreationMode(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    if (!content) return;\r\n\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const textarea = useRef(null);\r\n  const handleOpen = useCallback(() => {\r\n    setCreationMode(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    setCreationMode(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    if (isCreationMode) {\r\n      formRef.current.scrollIntoView();\r\n    }\r\n  }, [isCreationMode]);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n    >\r\n      <button\r\n        className={classNames(\r\n          'open-component-composer-btn',\r\n          isCreationMode&& 'hidden',\r\n        )}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        ref={node => (formRef.current = node)}\r\n        className={classNames('form', formClassName, !isCreationMode&& 'hidden')}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='component-content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='form-controls'>\r\n          <button className='add-component-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button className='close-btn' onClick={handleClose} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  formClassName: '',\r\n  className: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const uniqueId = useRef(null);\r\n  useEffect(() => {\r\n    uniqueId.current = _.uniqueId(seed);\r\n  }, [seed]);\r\n  return uniqueId.current;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('pointerdown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('pointerdown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","const SCROLLBAR_DIRECTION = {\r\n  HORIZONTAL: 0,\r\n  VERTICAL: 1,\r\n};\r\n\r\nfunction hasScrollbar(element, scrollbarDirection) {\r\n  return scrollbarDirection === SCROLLBAR_DIRECTION.HORIZONTAL\r\n    ? element.scrollWidth > element.clientWidth\r\n    : element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nexport { hasScrollbar, SCROLLBAR_DIRECTION };\r\n","import { useEffect, useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { binaryLastIndexOf } from '../helpers/lowerBound';\r\nimport { hasScrollbar, SCROLLBAR_DIRECTION } from '../helpers/scrollbar';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction formListItems(items, itemToIgnoreId, placeholder) {\r\n  let listItems = items\r\n    ? items.map(item => ({\r\n        type: ITEM_TYPE.REGULAR_ITEM,\r\n        data: item,\r\n      }))\r\n    : [];\r\n\r\n  const shouldIgnoreItem = itemToIgnoreId !== null;\r\n  if (shouldIgnoreItem) {\r\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\r\n  }\r\n\r\n  const shouldShowPlaceholder = placeholder.index !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems = enrichWithPlaceholder(listItems, placeholder);\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction enrichWithPlaceholder(listItems, placeholder) {\r\n  listItems.splice(placeholder.index, 0, {\r\n    type: ITEM_TYPE.PLACEHOLDER,\r\n    index: placeholder.index,\r\n    geometry: placeholder.geometry,\r\n  });\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({\r\n  id,\r\n  acceptedTypes,\r\n  listType,\r\n  items,\r\n  scrollStep,\r\n  scrollOffset,\r\n}) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n\r\n  const context = useRef({ id, index: null });\r\n  const itemRefs = useRef([]);\r\n  const listBodyRef = useRef(null);\r\n\r\n  const scrollToStartPosition = useRef(null);\r\n  const scrollToEndPosition = useRef(null);\r\n\r\n  const scrollbarDirection =\r\n    listType === LIST_TYPE.HORIZONTAL\r\n      ? SCROLLBAR_DIRECTION.HORIZONTAL\r\n      : SCROLLBAR_DIRECTION.VERTICAL;\r\n\r\n  const listHasScrollbar = useRef(false);\r\n\r\n  useEffect(() => {\r\n    listHasScrollbar.current =\r\n      listBodyRef.current &&\r\n      hasScrollbar(listBodyRef.current, scrollbarDirection);\r\n\r\n    if (!listHasScrollbar.current) return;\r\n\r\n    const isHorizontal = listType === LIST_TYPE.HORIZONTAL;\r\n    const listBodyRect =\r\n      listBodyRef.current && listBodyRef.current.getBoundingClientRect();\r\n\r\n    scrollToStartPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.left + scrollOffset\r\n      : listBodyRect && listBodyRect.top + scrollOffset;\r\n    scrollToEndPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.right - scrollOffset\r\n      : listBodyRect && listBodyRect.bottom - scrollOffset;\r\n  }, [listHasScrollbar]);\r\n\r\n  const setItemRefAt = useCallback((item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemRefs.current[idx] = item;\r\n  }, []);\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setPlaceholderGeometry({\r\n      width: draggable.geometry.width,\r\n      height: draggable.geometry.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.geometry.width / 2,\r\n        y: draggable.position.y + draggable.geometry.height / 2,\r\n      };\r\n\r\n      let placeholderIndex = binaryLastIndexOf(itemRefs.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n\r\n        const itemCenter = {\r\n          x: itemRect.left + itemRect.width / 2,\r\n          y: itemRect.top + itemRect.height / 2,\r\n        };\r\n\r\n        let extra = 0;\r\n        if (draggable.geometry.height < itemRect.height) {\r\n          // avoid placeholder movement back and forth\r\n          extra = (itemRect.height - draggable.geometry.height) / 2;\r\n        }\r\n\r\n        return listType === LIST_TYPE.HORIZONTAL\r\n          ? itemCenter.x + extra <= draggableCenter.x\r\n          : itemCenter.y + extra <= draggableCenter.y;\r\n      });\r\n\r\n      if (listHasScrollbar.current) {\r\n        scrollListIfNeeded(draggableCenter);\r\n      }\r\n\r\n      placeholderIndex = placeholderIndex !== null ? placeholderIndex : 0;\r\n\r\n      context.current.index = placeholderIndex;\r\n      setPlaceholderIndex(placeholderIndex);\r\n    },\r\n    [listType, listHasScrollbar],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    context.current.index = null;\r\n  }, []);\r\n\r\n  const scrollListIfNeeded = useCallback(\r\n    draggableCenter => {\r\n      switch (listType) {\r\n        case LIST_TYPE.HORIZONTAL: {\r\n          if (draggableCenter.x <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollLeft -= scrollStep;\r\n          } else if (draggableCenter.x >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollLeft += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n        case LIST_TYPE.VERTICAL: {\r\n          if (draggableCenter.y <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollTop -= scrollStep;\r\n          } else if (draggableCenter.y >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollTop += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    [\r\n      listType,\r\n      listBodyRef,\r\n      scrollStep,\r\n      scrollToStartPosition,\r\n      scrollToEndPosition,\r\n    ],\r\n  );\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: context.current,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  const placeholder = {\r\n    index: placeholderIndex,\r\n    geometry: placeholderGeometry,\r\n  };\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  const listItems = formListItems(items, itemToIgnoreId, placeholder);\r\n\r\n  return {\r\n    listItems,\r\n    setItemRefAt,\r\n    listBodyRef,\r\n    droppableClassName,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","/**\r\n * Return index of last element of array, for which predicate returns true\r\n */\r\n\r\nfunction binaryLastIndexOf(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      leftIdx = middleIdx + 1;\r\n    } else {\r\n      rightIdx = middleIdx - 1;\r\n    }\r\n  }\r\n\r\n  return rightIdx !== -1 ? rightIdx : null;\r\n}\r\n\r\nexport { binaryLastIndexOf };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable(droppable) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable(droppable);\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    droppable.id,\r\n    droppable.context,\r\n    droppable.node,\r\n    droppable.acceptedTypes,\r\n    droppable.onDraggableEnter,\r\n    droppable.onDraggableHover,\r\n    droppable.onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: 'droppable',\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const {\r\n    listBodyRef,\r\n    setItemRefAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedTypes: [DRAGGABLE_TYPE.CARD],\r\n    items: cards,\r\n    scrollStep: 20,\r\n    scrollOffset: 30,\r\n  });\r\n\r\n  const dragHandleNode = useRef(null);\r\n  const listNode = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    node: listNode,\r\n    dragHandle: dragHandleNode,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        id={id}\r\n        ref={draggedObjectRef}\r\n        className={classNames('card-list', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <header>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {Boolean(listItems.length) && (\r\n          <ul className='list-cards'>\r\n            {listItems.map((item, idx) => (\r\n              <Card\r\n                key={item.data.id}\r\n                {...item.data}\r\n                className='list-card'\r\n                setCardRef={node => setItemRefAt(node, idx)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <footer>\r\n          <AddComponent\r\n            className='add-card-btn'\r\n            openCreationFormBtnText='Добавить ещё одну карточку'\r\n            placeholderFormText='Введите название карточки'\r\n            submitFormBtnText='Добавить карточку'\r\n            onAdd={addCard.bind(null, id)}\r\n          />\r\n        </footer>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listNode.current = node;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card-list', droppableClassName, className)}\r\n    >\r\n      <header ref={dragHandleNode}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {Boolean(listItems.length) && (\r\n        <ul className='list-cards' ref={listBodyRef}>\r\n          {listItems.map(\r\n            (item, idx) =>\r\n              ({\r\n                [ITEM_TYPE.REGULAR_ITEM]: (\r\n                  <Card\r\n                    key={item.data && item.data.id}\r\n                    {...item.data}\r\n                    className='list-card'\r\n                    setCardRef={node => setItemRefAt(node, idx)}\r\n                  />\r\n                ),\r\n                [ITEM_TYPE.PLACEHOLDER]: (\r\n                  <li\r\n                    key='placeholder'\r\n                    ref={node => setItemRefAt(node, idx)}\r\n                    className='placeholder list-card'\r\n                    style={{\r\n                      width: item.geometry && item.geometry.width,\r\n                      height: item.geometry && item.geometry.height,\r\n                    }}\r\n                  />\r\n                ),\r\n              }[item.type]),\r\n          )}\r\n        </ul>\r\n      )}\r\n      <footer>\r\n        <AddComponent\r\n          className='add-card-btn'\r\n          openCreationFormBtnText='Добавить ещё одну карточку'\r\n          placeholderFormText='Введите название карточки'\r\n          submitFormBtnText='Добавить карточку'\r\n          onAdd={addCard.bind(null, id)}\r\n        />\r\n      </footer>\r\n    </li>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, lists, addList, scrollbarContainer }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const {\r\n    listBodyRef,\r\n    setItemRefAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedTypes: [DRAGGABLE_TYPE.LIST],\r\n    items: lists,\r\n    scrollOffset: 100,\r\n    scrollStep: 50,\r\n  });\r\n\r\n  const setRefs = node => {\r\n    scrollbarContainer.current = node;\r\n    listBodyRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n    >\r\n      <ul ref={setRefs} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <CardList\r\n                  key={item.data && item.data.id}\r\n                  className='board-list'\r\n                  setListRef={node => setItemRefAt(node, idx)}\r\n                  {...item.data}\r\n                />\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <div\r\n                  key='placeholder'\r\n                  ref={node => setItemRefAt(node, idx)}\r\n                  className='placeholder board-list'\r\n                  style={{\r\n                    width: item.geometry && item.geometry.width,\r\n                    height: item.geometry && item.geometry.height,\r\n                  }}\r\n                />\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import React, { useRef } from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  const mainScrollbarContainer = useRef(null);\n  return (\n    <DragDropManager mainScrollbarContainer={mainScrollbarContainer}>\n      <BoardContainer id={0} scrollbarContainer={mainScrollbarContainer} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          id: action.board.id,\r\n          name: action.board.name,\r\n          lists: action.board.lists,\r\n          background: action.board.background,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const modifiedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = modifiedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, indexInBoard } = action;\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Board destination id does not match current board id');\r\n      }\r\n\r\n      const lastIdx = state.board.lists.findIndex(list => list.id === listId);\r\n      if (indexInBoard === lastIdx) {\r\n        return state;\r\n      }\r\n\r\n      const movedList = state.board.lists[lastIdx];\r\n      const idxToRemoveAt = lastIdx + (indexInBoard < lastIdx ? 1 : 0);\r\n\r\n      const modifiedLists = [...state.board.lists];\r\n\r\n      modifiedLists.splice(indexInBoard, 0, movedList);\r\n      modifiedLists.splice(idxToRemoveAt, 1);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === action.listId\r\n          ? {\r\n              ...list,\r\n              cards: [...list.cards, action.card],\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, action.list],\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: 'Kanban-Board',\r\n  background: {\r\n    type: 'color',\r\n    color: 'grey',\r\n    // url:\r\n    //   'https://images.unsplash.com/photo-1508625935447-e0ebc2cdf6bf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Пройти курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отметить день рождения',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться на курсы английского, чтобы уехать жить в Лондон',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд своего сайта на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Собрать портфолио',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать первую статью в блог',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться в мотошколу. Хотя немного страшновато, конечно. Друзья и родители против, но очень хочется. Но кого я обманываю, уже 2 года решаюсь на этот шаг 😢 Еще и друзья будут хрустиком называть. В общем, хотя бы подумать над этим.',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нет, я серьезный человек, иду в мотошколу. Записываюсь!',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выспаться',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Посмотреть игру престолов',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Научиться рисовать',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать уборку',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться в тренажерный зал',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Купить обогреватель',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать To-Do app',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отложить 2000 рублей',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нарисовать мотивационный плакат «Магии нет»',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться на курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Забронировать тир на субботу',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Накидать тем для статей в блог',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import _ from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const card = {\r\n    id: _.uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const list = {\r\n    id: _.uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list };\r\n}","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}