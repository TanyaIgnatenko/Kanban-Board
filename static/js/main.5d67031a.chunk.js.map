{"version":3,"sources":["drag-drop/internal/DragDropContext.js","helpers/scrollbar.js","constants.js","drag-drop/DragDropManager.js","helpers/visibility.js","helpers/inside.js","helpers/moveTo.js","components/Card/CardAvatar.js","helpers/grabAt.js","drag-drop/useDraggable.js","ducks/board/action-types.js","ducks/board/actions.js","components/Card/Card.js","components/CardList/CardListAvatar.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","drag-drop/useScrollable.js","drag-drop/useDroppableList.js","helpers/binaryLastIndexOf.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","hooks/uncontrollable.js","hooks/scrollByShift.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","registerScrollable","hasVerticalScrollbar","element","scrollHeight","clientHeight","hasHorizontalScrollbar","scrollWidth","clientWidth","DRAGGABLE_TYPE","CARD","LIST","MOVEMENT","BOTTOM","TOP","RIGHT","LEFT","MOUSE_BUTTON","MIDDLE","DragDropManager","_React$Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","draggedObjectPosition","hoveredDroppable","droppables","scrollables","scrollable","id","droppable","_ref","dragHandleRef","draggable","_objectWithoutProperties","handle","current","onPointerDown","event","which","grabPosition","x","clientX","y","clientY","draggedObjectRect","ref","getBoundingClientRect","grabShift","left","top","bindedStartDragIfMove","startDragIfMove","_objectSpread","document","addEventListener","resetPreparationToDrag","stopPropagation","removeEventListener","newX","newY","Math","abs","grabDraggable","_ref2","context","type","renderAvatar","onGrab","onMove","onRelease","dimensions","width","height","position","movement","dndContext","manageDroppables","setState","moveDraggable","releaseDraggable","movementX","movementY","currentDraggedObject","currentHoveredDroppable","newPosition","push","scrollIfNedeed","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","node","style","visibility","hideElement","elementFromPoint","showElement","closest","acceptedTypes","includes","parentNode","console","warn","setDraggedObjectRef","draggedObjectNode","_inherits","_createClass","key","value","cursorPosition","_this2","Object","values","forEach","scrollStep","scrollPointOffset","scrolledByTypes","scrollableNode","point","elementRect","right","bottom","inside","clientLeft","scrollLeft","clientTop","scrollTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","props","createElement","Fragment","clientPosition","grabPoint","Provider","Component","moveTo","CardAvatar","content","cardAvatarRef","className","_useState","useState","_useState2","_slicedToArray","rotationStyle","setRotationStyle","applyGrabAnimation","useCallback","transformOrigin","transform","removeGrabAnimation","useEffect","setTimeout","classNames","assign","defaultProps","useDraggable","_ref$onGrab","_ref$onMove","_ref$onRelease","useContext","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","Card","setCardRef","moveCardToList","cardRef","useRef","_ref3","placeholderIndex","tabIndex","mapDispatchToProps","cardId","destinationListId","indexInList","connect","CardListAvatar","name","cardListAvatarRef","scrollableRef","listItems","setItemRefAt","addCardComponent","isCardFormOpened","Boolean","map","item","idx","data","AddComponent","isFormOpened","onFormOpenedChange","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","setContent","handleContentChange","target","handleClose","handleAdd","trim","handleOpen","addComponentId","seed","setUniqueId","uniqueId","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","hidden","onClick","autoFocus","placeholder","onChange","aria-label","useScrollable","_ref$scrollPointOffse","_ref$scrollStep","_ref$scrolledByTypes","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","HORIZONTAL","VERTICAL","makeListItems","items","itemToIgnoreId","filter","splice","enrichWithPlaceholder","useDroppableList","listType","setPlaceholderIndex","_useState3","_useState4","placeholderGeometry","setPlaceholderGeometry","_useState5","_useState6","isHoveredByDraggable","setIsHoveredByDraggable","contextRef","itemsRef","draggableCenter","placeholderIdx","array","predicate","leftIdx","rightIdx","middleIdx","floor","binaryLastIndexOf","itemRect","extra","_useDroppable","_useContext","droppableClassName","useDroppable","CardList","cards","addCard","setListRef","moveList","useMemo","_useDroppableList","listRef","setIsCardFormOpened","bind","_ITEM_TYPE$REGULAR_IT","_defineProperty","destinationBoardId","newListIdx","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","backgroundSize","useBoardStyle","addComponentUncontrollableProps","propName","changeHandlerName","defaultValue","reduce","setValue","onScrollablePointerDown","scroll","finishScroll","useScrollByShift","text","fetchBoard","rest","App","BoardContainer","initialState","rootReducer","combineReducers","undefined","action","cardToMove","updatedLists","found","find","dstList","lastListIdx","findIndex","listToMove","_toConsumableArray","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_callee","_context","services","put","t0","_callee2","newCardInfo","_context2","_callee3","newListInfo","_context3","_context4","all","takeLatest","_marked","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5d67031a.chunk.js","sourcesContent":["import React from 'react';\n\nconst DragDropContext = React.createContext({\n  draggedObject: null,\n  registerDraggable: () => {},\n  registerDroppable: () => {},\n  registerScrollable: () => {},\n});\n\nexport default DragDropContext;\n","function hasVerticalScrollbar(element) {\n  return element.scrollHeight > element.clientHeight;\n}\n\nfunction hasHorizontalScrollbar(element) {\n  return element.scrollWidth > element.clientWidth;\n}\n\nfunction findNearestVerticalScrollbar(position) {\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\n  while (elementFromPosition) {\n    if (hasVerticalScrollbar(elementFromPosition)) {\n      return elementFromPosition;\n    }\n    elementFromPosition = elementFromPosition.parentNode;\n  }\n  return null;\n}\n\nfunction findNearestHorizontalScrollbar(position) {\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\n  while (elementFromPosition) {\n    if (hasHorizontalScrollbar(elementFromPosition)) {\n      return elementFromPosition;\n    }\n    elementFromPosition = elementFromPosition.parentNode;\n  }\n  return null;\n}\n\nexport {\n  hasVerticalScrollbar,\n  hasHorizontalScrollbar,\n  findNearestVerticalScrollbar,\n  findNearestHorizontalScrollbar,\n};\n","const DRAGGABLE_TYPE = {\n  CARD: 'CARD',\n  LIST: 'LIST',\n};\n\nconst MOVEMENT = {\n  BOTTOM: 'BOTTOM',\n  TOP: 'TOP',\n  RIGHT: 'RIGHT',\n  LEFT: 'LEFT',\n};\n\nconst MOUSE_BUTTON = {\n  LEFT: 1,\n  MIDDLE: 2,\n  RIGHT: 3,\n};\n\nexport { DRAGGABLE_TYPE, MOVEMENT, MOUSE_BUTTON };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DragDropContext from './internal/DragDropContext';\n\nimport {\n  hasHorizontalScrollbar,\n  hasVerticalScrollbar,\n} from '../helpers/scrollbar';\n\nimport { hideElement, showElement } from '../helpers/visibility';\nimport { MOUSE_BUTTON, MOVEMENT } from '../constants';\nimport { inside } from '../helpers/inside';\n\nclass DragDropManager extends React.Component {\n  state = {\n    draggedObjectPosition: null,\n  };\n\n  draggedObject = null;\n  hoveredDroppable = null;\n  droppables = {};\n  scrollables = {};\n\n  registerScrollable = scrollable => {\n    this.scrollables[scrollable.id] = scrollable;\n    return () => {\n      delete this.scrollables[scrollable.id];\n    };\n  };\n\n  registerDroppable = droppable => {\n    this.droppables[droppable.id] = droppable;\n    return () => {\n      delete this.droppables[droppable.id];\n    };\n  };\n\n  registerDraggable = ({ dragHandleRef, ...draggable }) => {\n    const handle = dragHandleRef.current;\n\n    const onPointerDown = event => {\n      const { which: mouseButton } = event;\n      if (mouseButton !== MOUSE_BUTTON.LEFT) return;\n\n      const { clientX, clientY } = event;\n      const grabPosition = {\n        x: clientX,\n        y: clientY,\n      };\n      const draggedObjectRect = draggable.ref.current.getBoundingClientRect();\n      const grabShift = {\n        x: grabPosition.x - draggedObjectRect.left,\n        y: grabPosition.y - draggedObjectRect.top,\n      };\n\n      this.bindedStartDragIfMove = event =>\n        this.startDragIfMove(\n          { handle, ...draggable },\n          grabPosition,\n          grabShift,\n          event,\n        );\n\n      document.addEventListener('pointermove', this.bindedStartDragIfMove);\n      document.addEventListener('pointerup', this.resetPreparationToDrag);\n\n      event.stopPropagation();\n    };\n\n    handle.addEventListener('pointerdown', onPointerDown);\n\n    return function unregisterDraggable() {\n      handle.removeEventListener('pointerdown', onPointerDown);\n    };\n  };\n\n  startDragIfMove = (draggable, grabPosition, grabShift, event) => {\n    const { clientX: newX, clientY: newY } = event;\n\n    if (\n      Math.abs(newX - grabPosition.x) > 2 ||\n      Math.abs(newY - grabPosition.y) > 2\n    ) {\n      document.removeEventListener('pointermove', this.bindedStartDragIfMove);\n      document.removeEventListener('pointerup', this.resetPreparationToDrag);\n\n      this.grabDraggable({\n        grabShift,\n        ...draggable,\n      });\n    }\n  };\n\n  resetPreparationToDrag = () => {\n    document.removeEventListener('pointermove', this.bindedStartDragIfMove);\n    document.removeEventListener('pointerup', this.resetPreparationToDrag);\n  };\n\n  grabDraggable = ({\n    grabShift,\n    context,\n    type,\n    ref,\n    handle,\n    renderAvatar,\n    onGrab,\n    onMove,\n    onRelease,\n  }) => {\n    const draggedObjectRect = ref.current.getBoundingClientRect();\n\n    this.draggedObject = {\n      context,\n      type,\n      renderAvatar,\n      handle,\n      onGrab,\n      onMove,\n      onRelease,\n      grabShift,\n      dimensions: {\n        width: draggedObjectRect.width,\n        height: draggedObjectRect.height,\n      },\n      position: {\n        x: draggedObjectRect.left,\n        y: draggedObjectRect.top,\n      },\n      movement: [],\n    };\n\n    this.dndContext.draggedObject = this.draggedObject;\n\n    this.manageDroppables();\n\n    this.setState(\n      {\n        draggedObjectPosition: this.draggedObject.position,\n      },\n      () => {\n        document.addEventListener('pointermove', this.moveDraggable);\n        document.addEventListener('pointerup', this.releaseDraggable);\n      },\n    );\n\n    this.draggedObject.onGrab();\n  };\n\n  dndContext = {\n    draggedObject: null,\n    registerDraggable: this.registerDraggable,\n    registerDroppable: this.registerDroppable,\n    registerScrollable: this.registerScrollable,\n  };\n\n  moveDraggable = event => {\n    const { clientX, clientY } = event;\n    const { movementX, movementY } = event;\n    const { grabShift } = this.draggedObject;\n    const currentDraggedObject = this.draggedObject;\n    const currentHoveredDroppable = this.hoveredDroppable;\n\n    const newPosition = {\n      x: clientX - grabShift.x,\n      y: clientY - grabShift.y,\n    };\n    currentDraggedObject.position = newPosition;\n\n    const movement = [];\n    if (movementX) {\n      movement.push(movementX > 0 ? MOVEMENT.RIGHT : MOVEMENT.LEFT);\n    }\n    if (movementY) {\n      movement.push(movementY > 0 ? MOVEMENT.BOTTOM : MOVEMENT.TOP);\n    }\n    currentDraggedObject.movement = movement;\n\n    this.scrollIfNedeed({ x: clientX, y: clientY });\n\n    this.manageDroppables();\n\n    this.setState({ draggedObjectPosition: newPosition });\n\n    currentDraggedObject.onMove({\n      draggableContext: currentDraggedObject.context,\n      droppableContext: currentHoveredDroppable.context,\n    });\n  };\n\n  scrollIfNedeed(cursorPosition) {\n    Object.values(this.scrollables).forEach(scrollable => {\n      const {\n        scrollStep,\n        scrollPointOffset,\n        scrolledByTypes,\n        ref: { current: scrollableNode },\n      } = scrollable;\n\n      if (!scrollableNode) return;\n\n      if (!scrolledByTypes.includes(this.draggedObject.type)) return;\n\n      if (!inside(cursorPosition, scrollableNode)) return;\n\n      if (hasHorizontalScrollbar(scrollableNode)) {\n        if (cursorPosition.x <= scrollableNode.clientLeft + scrollPointOffset) {\n          scrollableNode.scrollLeft -= scrollStep;\n        } else if (\n          cursorPosition.x >=\n          scrollableNode.clientWidth - scrollPointOffset\n        ) {\n          scrollableNode.scrollLeft += scrollStep;\n        }\n      }\n      if (hasVerticalScrollbar(scrollableNode)) {\n        if (cursorPosition.y <= scrollableNode.clientTop + scrollPointOffset) {\n          scrollableNode.scrollTop -= scrollStep;\n        } else if (\n          cursorPosition.y >=\n          scrollableNode.clientHeight - scrollPointOffset\n        ) {\n          scrollableNode.scrollTop += scrollStep;\n        }\n      }\n    });\n  }\n\n  releaseDraggable = () => {\n    const currentDraggedObject = this.draggedObject;\n    const currentHoveredDroppable = this.hoveredDroppable;\n\n    document.removeEventListener('pointermove', this.moveDraggable);\n    document.removeEventListener('pointerup', this.releaseDraggable);\n\n    this.draggedObject = null;\n    this.hoveredDroppable = null;\n    this.dndContext.draggedObject = null;\n    this.setState({\n      draggedObjectPosition: null,\n    });\n\n    currentDraggedObject.onRelease({\n      draggableContext: currentDraggedObject.context,\n      droppableContext: currentHoveredDroppable.context,\n    });\n    currentHoveredDroppable.onDraggableLeave();\n  };\n\n  manageDroppables() {\n    const { position, dimensions } = this.draggedObject;\n\n    const lastDroppable = this.hoveredDroppable;\n    const currentDroppable = this.findDroppable({\n      x: position.x + dimensions.width / 2,\n      y: position.y + dimensions.height / 2,\n    });\n\n    if (!currentDroppable) return;\n\n    this.hoveredDroppable = this.droppables[currentDroppable.id];\n\n    const droppableChanged =\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\n\n    if (droppableChanged) {\n      if (lastDroppable) {\n        lastDroppable.onDraggableLeave();\n      }\n\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\n    }\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\n  }\n\n  findDroppable = position => {\n    const draggedNode = this.draggedObject.node;\n\n    hideElement(draggedNode);\n    let element = document.elementFromPoint(position.x, position.y);\n    showElement(draggedNode);\n\n    while (element) {\n      const droppable = element.closest('.droppable');\n\n      if (!droppable) return null;\n\n      if (!this.droppables[droppable.id]) {\n        console.warn('Unregistered droppable with id:', droppable.id);\n\n        element = droppable.parentNode;\n        continue;\n      }\n\n      if (\n        this.droppables[droppable.id].acceptedTypes.includes(\n          this.draggedObject.type,\n        )\n      ) {\n        return droppable;\n      }\n\n      element = droppable.parentNode;\n    }\n\n    return null;\n  };\n\n  setDraggedObjectRef = draggedObjectNode => {\n    if (this.draggedObject) {\n      this.draggedObject.node = draggedObjectNode;\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { draggedObjectPosition } = this.state;\n    const { draggedObject, dndContext } = this;\n\n    return (\n      <>\n        {draggedObject &&\n          draggedObject.renderAvatar({\n            clientPosition: draggedObjectPosition,\n            grabPoint: draggedObject.grabShift,\n            dimensions: draggedObject.dimensions,\n            ref: this.setDraggedObjectRef,\n          })}\n        <DragDropContext.Provider value={dndContext}>\n          {children}\n        </DragDropContext.Provider>\n      </>\n    );\n  }\n}\n\nDragDropManager.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default DragDropManager;\n","function hideElement(element) {\n  if (element) {\n    element.style.visibility = 'hidden';\n  }\n}\n\nfunction showElement(element) {\n  if (element) {\n    element.style.visibility = 'visible';\n  }\n}\n\nexport { hideElement, showElement };\n","function inside(point, element) {\n  const elementRect = element.getBoundingClientRect();\n  return (\n    point.x >= elementRect.left &&\n    point.x <= elementRect.right &&\n    point.y >= elementRect.top &&\n    point.y <= elementRect.bottom\n  );\n}\n\nexport { inside };\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","import React, { useState, useEffect, useCallback } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { moveTo } from '../../helpers/moveTo';\nimport { grabAt } from '../../helpers/grabAt';\n\nfunction CardAvatar({\n  id,\n  content,\n  cardAvatarRef,\n  className,\n  grabPoint,\n  dimensions,\n  clientPosition,\n}) {\n  const [rotationStyle, setRotationStyle] = useState({});\n\n  const applyGrabAnimation = useCallback(() => {\n    const rotationStyle = grabAt(grabPoint, dimensions);\n    setRotationStyle(rotationStyle);\n  }, []);\n\n  const removeGrabAnimation = useCallback(() => {\n    setRotationStyle({});\n  }, []);\n\n  useEffect(() => {\n    setTimeout(applyGrabAnimation, 5);\n\n    return removeGrabAnimation;\n  }, []);\n\n  return (\n    <div\n      id={id}\n      ref={cardAvatarRef}\n      className={classNames('card', 'dragged', className)}\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\n    >\n      <h4 className='card-content'>{content}</h4>\n    </div>\n  );\n}\n\nCardAvatar.propTypes = {\n  id: PropTypes.string.isRequired,\n  cardAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  clientPosition: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  content: PropTypes.any.isRequired,\n  grabPoint: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  dimensions: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nCardAvatar.defaultProps = {\n  className: '',\n};\n\nexport default CardAvatar;\n","// It doesn't require grapPoint and dimensitions params cause it always returns the same style for a slope\n// This params were for realisticGrabAt\nfunction grabAt() {\n  return {\n    transformOrigin: '0 0',\n    transform: 'rotate(0.087rad)',\n  };\n}\n\nexport { grabAt };\n","import { useContext, useEffect } from 'react';\n\nimport DragDropContext from './internal/DragDropContext';\n\nfunction useDraggable({\n  ref,\n  type,\n  context,\n  dragHandleRef,\n  renderAvatar,\n  onGrab = () => {},\n  onMove = () => {},\n  onRelease = () => {},\n}) {\n  const { registerDraggable } = useContext(DragDropContext);\n\n  useEffect(() => {\n    const unregisterDraggable = registerDraggable({\n      ref,\n      type,\n      context,\n      dragHandleRef,\n      renderAvatar,\n      onGrab,\n      onMove,\n      onRelease,\n    });\n\n    return unregisterDraggable;\n  }, [\n    ref,\n    type,\n    context,\n    dragHandleRef,\n    renderAvatar,\n    onGrab,\n    onMove,\n    onRelease,\n  ]);\n}\n\nexport { useDraggable };\n","export const FETCH_BOARD = {\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\n  ERROR: '@@board/FETCH_BOARD_ERROR',\n};\n\nexport const MOVE = {\n  CARD: '@@board/MOVE_CARD',\n  LIST: '@@board/MOVE_LIST',\n};\n\nexport const ADD_CARD = {\n  REQUEST: '@@board/ADD_CARD_REQUEST',\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\n  ERROR: '@@board/ADD_CARD_ERROR',\n};\n\nexport const ADD_LIST = {\n  REQUEST: '@@board/ADD_LIST_REQUEST',\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\n  ERROR: '@@board/ADD_LIST_ERROR',\n};\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\n\nexport const fetchBoardRequest = id => {\n  return {\n    type: FETCH_BOARD.REQUEST,\n    id,\n  };\n};\n\nexport const fetchBoardSuccess = board => {\n  return {\n    type: FETCH_BOARD.SUCCESS,\n    board,\n  };\n};\n\nexport const fetchBoardError = error => {\n  return {\n    type: FETCH_BOARD.ERROR,\n    error,\n  };\n};\n\nexport const moveCard = (cardId, destinationListId, indexInList) => {\n  return {\n    type: MOVE.CARD,\n    cardId,\n    destinationListId,\n    indexInList,\n  };\n};\n\nexport const moveList = (listId, destinationBoardId, newListIdx) => {\n  return {\n    type: MOVE.LIST,\n    listId,\n    destinationBoardId,\n    newListIdx,\n  };\n};\n\nexport const addCardRequest = (listId, content) => {\n  return {\n    type: ADD_CARD.REQUEST,\n    listId,\n    content,\n  };\n};\n\nexport const addCardSuccess = (listId, card) => {\n  return {\n    type: ADD_CARD.SUCCESS,\n    listId,\n    card,\n  };\n};\n\nexport const addCardError = error => {\n  return {\n    type: ADD_CARD.ERROR,\n    error,\n  };\n};\n\nexport const addListRequest = (boardId, content) => {\n  return {\n    type: ADD_LIST.REQUEST,\n    boardId,\n    content,\n  };\n};\n\nexport const addListSuccess = (boardId, list) => {\n  return {\n    type: ADD_LIST.SUCCESS,\n    boardId,\n    list,\n  };\n};\n\nexport const addListError = error => {\n  return {\n    type: ADD_LIST.ERROR,\n    error,\n  };\n};\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport CardAvatar from './CardAvatar';\nimport { useDraggable } from '../../drag-drop/useDraggable';\nimport { moveCard } from '../../ducks/board/actions';\nimport { DRAGGABLE_TYPE } from '../../constants';\n\nimport './Card.scss';\n\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\n  const cardRef = useRef(null);\n\n  useDraggable({\n    context: {\n      id,\n    },\n    type: DRAGGABLE_TYPE.CARD,\n    ref: cardRef,\n    dragHandleRef: cardRef,\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\n      <CardAvatar\n        id={id}\n        cardAvatarRef={ref}\n        content={content}\n        className={className}\n        grabPoint={grabPoint}\n        dimensions={dimensions}\n        clientPosition={clientPosition}\n      />\n    ),\n    onRelease: ({ draggableContext, droppableContext }) => {\n      moveCardToList(\n        draggableContext.id,\n        droppableContext.id,\n        droppableContext.placeholderIndex,\n      );\n    },\n  });\n\n  const setRefs = node => {\n    setCardRef(node);\n    cardRef.current = node;\n  };\n\n  return (\n    <div\n      id={id}\n      ref={setRefs}\n      className={classNames('card', className)}\n      tabIndex={0}\n    >\n      <h4 className='card-content'>{content}</h4>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  content: PropTypes.any.isRequired,\n  setCardRef: PropTypes.func.isRequired,\n  moveCardToList: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  className: '',\n};\n\nconst mapDispatchToProps = {\n  moveCardToList: moveCard,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Card);\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Card } from '../Card';\nimport { moveTo } from '../../helpers/moveTo';\nimport { grabAt } from '../../helpers/grabAt';\n\nfunction CardListAvatar({\n  id,\n  name,\n  cardListAvatarRef,\n  dragHandleRef,\n  scrollableRef,\n  listItems,\n  setItemRefAt,\n  addCardComponent,\n  isCardFormOpened,\n  grabPoint,\n  dimensions,\n  clientPosition,\n  className,\n}) {\n  const [rotationStyle, setRotationStyle] = useState({});\n  useEffect(() => {\n    const rotationStyle = grabAt(grabPoint, dimensions);\n    setTimeout(() => {\n      setRotationStyle(rotationStyle);\n    }, 2);\n  }, []);\n\n  return (\n    <div\n      id={id}\n      ref={cardListAvatarRef}\n      className={classNames('card-list', 'dragged', className)}\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\n    >\n      <header ref={dragHandleRef}>\n        <h2 className='list-title'>{name}</h2>\n      </header>\n      {(Boolean(listItems.length) || isCardFormOpened) && (\n        <ul ref={scrollableRef} className='list-cards'>\n          {listItems.map((item, idx) => (\n            <li key={item.data.id}>\n              <Card\n                {...item.data}\n                setCardRef={node => setItemRefAt(node, idx)}\n                className='list-card'\n              />\n            </li>\n          ))}\n          {isCardFormOpened && addCardComponent}\n        </ul>\n      )}\n      <footer>{!isCardFormOpened && addCardComponent}</footer>\n    </div>\n  );\n}\n\nCardListAvatar.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  cardListAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  dragHandleRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  scrollableRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  listItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n          .isRequired,\n        content: PropTypes.string.isRequired,\n      }).isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  setItemRefAt: PropTypes.func.isRequired,\n  addCardComponent: PropTypes.element.isRequired,\n  isCardFormOpened: PropTypes.bool.isRequired,\n  clientPosition: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  grabPoint: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  dimensions: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nCardListAvatar.defaultProps = {\n  className: '',\n};\n\nexport default CardListAvatar;\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { useUniqueId } from '../../hooks/uniqueId';\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\n\nimport './AddComponent.scss';\n\nfunction AddComponent({\n  isFormOpened,\n  onFormOpenedChange,\n  openCreationFormBtnText,\n  placeholderFormText,\n  submitFormBtnText,\n  onAdd,\n  className,\n  formClassName,\n  style,\n}) {\n  const [content, setContent] = useState('');\n  const handleContentChange = useCallback(event => {\n    const content = event.target.value;\n    setContent(content);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setContent('');\n    onFormOpenedChange(false);\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    if (!content.trim()) return;\n\n    onAdd(content);\n    handleClose();\n  }, [content, handleClose, onAdd]);\n\n  const handleOpen = useCallback(() => {\n    onFormOpenedChange(true);\n  }, []);\n\n  const addComponentId = useUniqueId('add-component');\n  const handleWasClickOutside = useCallback(() => {\n    onFormOpenedChange(false);\n  }, []);\n  useOnClickOutside(addComponentId, handleWasClickOutside);\n\n  const formRef = useRef(null);\n  useEffect(() => {\n    if (isFormOpened) {\n      formRef.current.scrollIntoView(false);\n    }\n  }, [isFormOpened]);\n\n  return (\n    <div\n      id={addComponentId}\n      className={classNames('add-component-wrapper', className)}\n      style={style}\n    >\n      <button\n        className={classNames('open-form-btn', {\n          hidden: isFormOpened,\n        })}\n        onClick={handleOpen}\n      >\n        <h4>{openCreationFormBtnText}</h4>\n      </button>\n      <div\n        ref={node => (formRef.current = node)}\n        className={classNames('form', formClassName, {\n          hidden: !isFormOpened,\n        })}\n      >\n        <textarea\n          autoFocus\n          className='content'\n          value={content}\n          placeholder={placeholderFormText}\n          onChange={handleContentChange}\n        />\n        <div className='form-controls'>\n          <button className='add-btn' onClick={handleAdd}>\n            {submitFormBtnText}\n          </button>\n          <button\n            aria-label='close'\n            className='close-btn'\n            onClick={handleClose}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nAddComponent.propTypes = {\n  isFormOpened: PropTypes.bool,\n  openCreationFormBtnText: PropTypes.string.isRequired,\n  placeholderFormText: PropTypes.string.isRequired,\n  submitFormBtnText: PropTypes.string.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onFormOpenedChange: PropTypes.func.isRequired,\n  formClassName: PropTypes.string,\n  className: PropTypes.string,\n};\n\nAddComponent.defaultProps = {\n  isFormOpened: null,\n  className: '',\n  formClassName: '',\n};\n\nexport default AddComponent;\n","import { useState, useEffect } from 'react';\nimport { uniqueId } from 'lodash';\n\nexport function useUniqueId(seed) {\n  const [id, setUniqueId] = useState(null);\n  useEffect(() => {\n    setUniqueId(uniqueId(seed));\n  }, [seed]);\n  return id;\n}\n","import { useCallback, useEffect } from 'react';\n\nexport function useOnClickOutside(elementId, onClickOutside) {\n  const checkClick = useCallback(\n    event => {\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\n\n      if (wasClickOutside) {\n        onClickOutside();\n      }\n    },\n    [elementId, onClickOutside],\n  );\n\n  useEffect(() => {\n    document.addEventListener('pointerdown', checkClick);\n\n    return function cleanup() {\n      document.removeEventListener('pointerdown', checkClick);\n    };\n  }, [checkClick]);\n}\n","import { useEffect, useRef, useContext } from 'react';\nimport DragDropContext from './internal/DragDropContext';\n\nfunction useScrollable({\n  id,\n  scrollPointOffset = 0,\n  scrollStep = 10,\n  scrolledByTypes = [],\n}) {\n  const scrollableRef = useRef(null);\n\n  const { registerScrollable } = useContext(DragDropContext);\n\n  useEffect(() => {\n    const unregisterScrollable = registerScrollable({\n      id,\n      ref: scrollableRef,\n      scrolledByTypes,\n      scrollPointOffset,\n      scrollStep,\n    });\n\n    return unregisterScrollable;\n  }, [id, scrollStep, scrollPointOffset, scrolledByTypes]);\n\n  return scrollableRef;\n}\n\nexport { useScrollable };\n","import { useRef, useCallback, useState } from 'react';\n\nimport { useDroppable } from './useDroppable';\nimport { binaryLastIndexOf } from '../helpers/binaryLastIndexOf';\n\nconst ITEM_TYPE = {\n  PLACEHOLDER: 'PLACEHOLDER',\n  REGULAR_ITEM: 'REGULAR_ITEM',\n};\n\nconst LIST_TYPE = {\n  HORIZONTAL: 'HORIZONTAL',\n  VERTICAL: 'VERTICAL',\n};\n\nfunction makeListItems(items, itemToIgnoreId, placeholder) {\n  let listItems = items\n    ? items.map(item => ({\n        type: ITEM_TYPE.REGULAR_ITEM,\n        data: item,\n      }))\n    : [];\n\n  const shouldIgnoreItem = itemToIgnoreId !== null;\n  if (shouldIgnoreItem) {\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\n  }\n\n  const shouldShowPlaceholder = placeholder.placeholderIndex !== null;\n  if (shouldShowPlaceholder) {\n    listItems = enrichWithPlaceholder(listItems, placeholder);\n  }\n\n  return listItems;\n}\n\nfunction enrichWithPlaceholder(listItems, placeholder) {\n  listItems.splice(placeholder.placeholderIndex, 0, {\n    type: ITEM_TYPE.PLACEHOLDER,\n    placeholderIndex: placeholder.placeholderIndex,\n    dimensions: placeholder.dimensions,\n  });\n  return listItems;\n}\n\nfunction useDroppableList({ id, acceptedTypes, listType, items }) {\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\n  const [isHoveredByDraggable, setIsHoveredByDraggable] = useState(false);\n\n  const contextRef = useRef({ id, placeholderIndex: null });\n  const itemsRef = useRef([]);\n\n  const setItemRefAt = (item, idx) => {\n    if (!item) return;\n\n    itemsRef.current[idx] = item;\n  };\n\n  const onDraggableEnter = useCallback(draggable => {\n    setIsHoveredByDraggable(true);\n    setPlaceholderGeometry({\n      width: draggable.dimensions.width,\n      height: draggable.dimensions.height,\n    });\n  }, []);\n\n  const onDraggableHover = useCallback(\n    draggable => {\n      const draggableCenter = {\n        x: draggable.position.x + draggable.dimensions.width / 2,\n        y: draggable.position.y + draggable.dimensions.height / 2,\n      };\n\n      let placeholderIdx = binaryLastIndexOf(itemsRef.current, item => {\n        const itemRect = item.getBoundingClientRect();\n\n        switch (listType) {\n          case LIST_TYPE.HORIZONTAL: {\n            let extra = 0;\n            if (itemRect.width > draggable.dimensions.width) {\n              // to avoid swap of placeholder and bigger card back and forth\n              extra = itemRect.width - draggable.dimensions.width;\n            }\n            return itemRect.left + extra < draggableCenter.x;\n          }\n          case LIST_TYPE.VERTICAL: {\n            let extra = 0;\n            if (itemRect.height > draggable.dimensions.height) {\n              // to avoid swap of placeholder and bigger card back and forth\n              extra = itemRect.height - draggable.dimensions.height;\n            }\n            return itemRect.top + extra < draggableCenter.y;\n          }\n          default: {\n            console.error('Unknown list type:', listType);\n          }\n        }\n      });\n\n      placeholderIdx = placeholderIdx !== null ? placeholderIdx : 0;\n\n      contextRef.current.placeholderIndex = placeholderIdx;\n      setPlaceholderIndex(placeholderIdx);\n    },\n    [placeholderIndex, listType],\n  );\n\n  const onDraggableLeave = useCallback(() => {\n    setIsHoveredByDraggable(false);\n    setPlaceholderGeometry(null);\n    setPlaceholderIndex(null);\n    contextRef.current.placeholderIndex = null;\n  }, []);\n\n  const { draggableContext, droppableClassName } = useDroppable({\n    id,\n    context: contextRef.current,\n    acceptedTypes,\n    onDraggableEnter,\n    onDraggableHover,\n    onDraggableLeave,\n  });\n\n  const placeholder = {\n    placeholderIndex,\n    dimensions: placeholderGeometry,\n  };\n  const itemToIgnoreId = draggableContext && draggableContext.id;\n  const listItems = makeListItems(items, itemToIgnoreId, placeholder);\n\n\n\n  return {\n    listItems,\n    setItemRefAt,\n    droppableClassName,\n    isHoveredByDraggable,\n  };\n}\n\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\n","function binaryLastIndexOf(array, predicate) {\n  let leftIdx = 0,\n    rightIdx = array.length - 1;\n\n  while (leftIdx <= rightIdx) {\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\n\n    if (predicate(array[middleIdx])) {\n      leftIdx = middleIdx + 1;\n    } else {\n      rightIdx = middleIdx - 1;\n    }\n  }\n\n  return rightIdx !== -1 ? rightIdx : null;\n}\n\nexport { binaryLastIndexOf };\n","import { useEffect, useContext } from 'react';\n\nimport DragDropContext from './internal/DragDropContext';\n\nfunction useDroppable({\n  id,\n  context,\n  acceptedTypes,\n  onDraggableEnter,\n  onDraggableHover,\n  onDraggableLeave,\n}) {\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\n\n  useEffect(() => {\n    const unregisterDroppable = registerDroppable({\n      id,\n      context,\n      acceptedTypes,\n      onDraggableEnter,\n      onDraggableHover,\n      onDraggableLeave,\n    });\n\n    return unregisterDroppable;\n  }, [\n    id,\n    context,\n    acceptedTypes,\n    onDraggableEnter,\n    onDraggableHover,\n    onDraggableLeave,\n  ]);\n\n  return {\n    draggableContext: draggedObject && draggedObject.context,\n    droppableClassName: 'droppable',\n  };\n}\n\nexport { useDroppable };\n","import React, { useState, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport CardListAvatar from './CardListAvatar';\nimport { Card } from '../Card';\nimport { AddComponent } from '../AddComponent';\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\nimport { useScrollable } from '../../drag-drop/useScrollable';\nimport { useDraggable } from '../../drag-drop/useDraggable';\nimport { DRAGGABLE_TYPE } from '../../constants';\n\nimport {\n  ITEM_TYPE,\n  LIST_TYPE,\n  useDroppableList,\n} from '../../drag-drop/useDroppableList';\n\nimport './CardList.scss';\n\nfunction CardList({\n  id,\n  name,\n  cards,\n  addCard,\n  setListRef,\n  moveList,\n  className,\n}) {\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.CARD], []);\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\n    id,\n    listType: LIST_TYPE.VERTICAL,\n    acceptedTypes,\n    items: cards,\n  });\n\n  const scrolledByTypes = useMemo(() => [DRAGGABLE_TYPE.CARD]);\n  const scrollableRef = useScrollable({\n    id,\n    scrolledByTypes,\n    scrollPointOffset: 10,\n    scrollStep: 15,\n  });\n\n  const dragHandleRef = useRef(null);\n  const listRef = useRef(null);\n\n  const [isCardFormOpened, setIsCardFormOpened] = useState(false);\n\n  const addCardComponent = (\n    <AddComponent\n      isFormOpened={isCardFormOpened}\n      formClassName='card-form'\n      openCreationFormBtnText='Add a card'\n      placeholderFormText='Enter a title for this card...'\n      submitFormBtnText='Add card'\n      onFormOpenedChange={value => setIsCardFormOpened(value)}\n      onAdd={addCard.bind(null, id)}\n    />\n  );\n\n  useDraggable({\n    context: {\n      id,\n    },\n    type: DRAGGABLE_TYPE.LIST,\n    ref: listRef,\n    dragHandleRef,\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\n      <CardListAvatar\n        id={id}\n        name={name}\n        cardListAvatarRef={ref}\n        dragHandleRef={dragHandleRef}\n        scrollableRef={scrollableRef}\n        listItems={listItems}\n        setItemRefAt={setItemRefAt}\n        addCardComponent={addCardComponent}\n        isCardFormOpened={isCardFormOpened}\n        grabPoint={grabPoint}\n        dimensions={dimensions}\n        clientPosition={clientPosition}\n        className={className}\n      />\n    ),\n    onRelease: ({ draggableContext, droppableContext }) => {\n      moveList(\n        draggableContext.id,\n        droppableContext.id,\n        droppableContext.placeholderIndex,\n      );\n    },\n  });\n\n  const setRefs = node => {\n    setListRef(node);\n    listRef.current = node;\n  };\n\n  return (\n    <div id={id} className={classNames(droppableClassName, className)}>\n      <div id={id} ref={setRefs} className='card-list' tabIndex={0}>\n        <header ref={dragHandleRef}>\n          <h2 className='list-title'>{name}</h2>\n        </header>\n        {(Boolean(listItems.length) || isCardFormOpened) && (\n          <ul ref={scrollableRef} className='list-cards'>\n            {listItems.map(\n              (item, idx) =>\n                ({\n                  [ITEM_TYPE.REGULAR_ITEM]: (\n                    <li key={item.data && item.data.id}>\n                      <Card\n                        {...item.data}\n                        className='list-card'\n                        setCardRef={node => setItemRefAt(node, idx)}\n                      />\n                    </li>\n                  ),\n                  [ITEM_TYPE.PLACEHOLDER]: (\n                    <li key='placeholder'>\n                      <div\n                        ref={node => setItemRefAt(node, idx)}\n                        className='placeholder list-card'\n                        style={{\n                          width: item.dimensions && item.dimensions.width,\n                          height: item.dimensions && item.dimensions.height,\n                        }}\n                      />\n                    </li>\n                  ),\n                }[item.type]),\n            )}\n            {isCardFormOpened && addCardComponent}\n          </ul>\n        )}\n        <footer>{!isCardFormOpened && addCardComponent}</footer>\n      </div>\n    </div>\n  );\n}\n\nCardList.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  addCard: PropTypes.func.isRequired,\n  moveList: PropTypes.func.isRequired,\n  setListRef: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nCardList.defaultProps = {\n  className: '',\n};\n\nconst mapDispatchToProps = {\n  addCard: addCardRequest,\n  moveList,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(CardList);\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { CardList } from '../CardList';\nimport { AddComponent } from '../AddComponent';\nimport { useBoardStyle } from './hooks/useBoardStyle';\nimport { selectBoard } from '../../ducks/board/selectors';\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\nimport { useUncontrollableProps } from '../../hooks/uncontrollable';\nimport { useScrollByShift } from '../../hooks/scrollByShift';\nimport { useScrollable } from '../../drag-drop/useScrollable';\nimport { DRAGGABLE_TYPE } from '../../constants';\n\nimport {\n  ITEM_TYPE,\n  LIST_TYPE,\n  useDroppableList,\n} from '../../drag-drop/useDroppableList';\n\nimport './Board.scss';\n\nfunction Board({ id, background, name, lists, addList }) {\n  const boardStyle = useBoardStyle(background);\n\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.LIST], []);\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\n    id,\n    listType: LIST_TYPE.HORIZONTAL,\n    acceptedTypes,\n    items: lists,\n  });\n\n  const scrolledByTypes = useMemo(\n    () => [DRAGGABLE_TYPE.LIST, DRAGGABLE_TYPE.CARD],\n    [],\n  );\n  const scrollableRef = useScrollable({\n    id,\n    scrolledByTypes,\n    scrollPointOffset: 60,\n    scrollStep: 20,\n  });\n\n  const addComponentUncontrollableProps = useUncontrollableProps([\n    {\n      propName: 'isFormOpened',\n      changeHandlerName: 'onFormOpenedChange',\n      defaultValue: false,\n    },\n  ]);\n\n  const onScrollablePointerDown = useScrollByShift(scrollableRef);\n\n  return (\n    <div\n      id={id}\n      className={classNames('board', droppableClassName)}\n      style={boardStyle}\n      onPointerDown={onScrollablePointerDown}\n    >\n      <h1 className='board-title' style={{ color: name.color }}>\n        {name.text}\n      </h1>\n      <ul ref={scrollableRef} className='board-lists'>\n        {listItems.map(\n          (item, idx) =>\n            ({\n              [ITEM_TYPE.REGULAR_ITEM]: (\n                <li key={item.data && item.data.id}>\n                  <CardList\n                    className='board-list-zone'\n                    setListRef={node => setItemRefAt(node, idx)}\n                    {...item.data}\n                  />\n                </li>\n              ),\n              [ITEM_TYPE.PLACEHOLDER]: (\n                <li key='placeholder'>\n                  <div\n                    ref={node => setItemRefAt(node, idx)}\n                    className='placeholder board-list-zone'\n                    style={{\n                      width: item.dimensions && item.dimensions.width,\n                      height: item.dimensions && item.dimensions.height,\n                    }}\n                  />\n                </li>\n              ),\n            }[item.type]),\n        )}\n        <AddComponent\n          className='add-list-wrapper'\n          formClassName='add-list-form'\n          openCreationFormBtnText='Add a list'\n          placeholderFormText='Enter a list title...'\n          submitFormBtnText='Add list'\n          onAdd={addList.bind(null, id)}\n          {...addComponentUncontrollableProps}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\n  useEffect(() => {\n    fetchBoard(id);\n  }, [fetchBoard, id]);\n\n  return board && <Board addList={addList} {...board} {...rest} />;\n}\n\nconst mapStateToProps = state => ({\n  board: selectBoard(state),\n});\n\nconst mapDispatchToProps = {\n  fetchBoard: fetchBoardRequest,\n  addList: addListRequest,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BoardContainer);\n","import { useMemo } from 'react';\n\nfunction useBoardStyle(background) {\n  const backgroundStyle =\n    background.type === 'img'\n      ? `url(${background.url}) no-repeat`\n      : background.color;\n\n  const boardStyle = useMemo(\n    () => ({\n      background: backgroundStyle,\n      backgroundSize: 'cover',\n    }),\n    [backgroundStyle],\n  );\n  return boardStyle;\n}\n\nexport { useBoardStyle };\n","import { useState } from 'react';\n\nfunction useUncontrollableProps(uncontrollableProps) {\n  return uncontrollableProps.reduce(\n    (props, { propName, changeHandlerName, defaultValue }) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const [value, setValue] = useState(defaultValue);\n      props[propName] = value;\n      props[changeHandlerName] = setValue;\n      return props;\n    },\n    {},\n  );\n}\n\nexport { useUncontrollableProps };\n","import { useCallback } from 'react';\n\nfunction useScrollByShift(scrollableRef) {\n  const scroll = useCallback(event => {\n    const { movementX } = event;\n\n    scrollableRef.current.scrollLeft -= movementX;\n  }, []);\n\n  const finishScroll = useCallback(() => {\n    document.removeEventListener('pointermove', scroll);\n    document.removeEventListener('pointerup', finishScroll);\n  }, []);\n\n  const prepareToScroll = useCallback(() => {\n    document.addEventListener('pointermove', scroll);\n    document.addEventListener('pointerup', finishScroll);\n  }, []);\n\n  const onScrollablePointerDown = prepareToScroll;\n\n  return onScrollablePointerDown;\n}\n\nexport { useScrollByShift };\n","import React from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  return (\n    <DragDropManager>\n      <BoardContainer id={0} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\n\nconst initialState = {\n  board: null,\n};\n\nexport const board = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_BOARD.SUCCESS: {\n      return {\n        ...state,\n        board: action.board,\n      };\n    }\n    case MOVE.CARD: {\n      const { cardId, destinationListId, indexInList } = action;\n\n      let cardToMove = null;\n      const updatedLists = state.board.lists.map(list => {\n        const found = list.cards.find(item => item.id === cardId);\n        if (found) {\n          cardToMove = found;\n          return {\n            ...list,\n            cards: list.cards.filter(item => item.id !== cardId),\n          };\n        }\n        return list;\n      });\n\n      if (cardToMove) {\n        const dstList = updatedLists.find(\n          list => list.id === destinationListId,\n        );\n        if (dstList) {\n          dstList.cards.splice(indexInList, 0, cardToMove);\n        } else {\n          console.error('List with id', destinationListId, 'not found');\n        }\n      } else {\n        console.error('List containing card with id', cardId, 'not found');\n      }\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: updatedLists,\n        },\n      };\n    }\n    case MOVE.LIST: {\n      const { listId, destinationBoardId, newListIdx } = action;\n\n      if (state.board.id !== destinationBoardId) {\n        console.error('Destination board id does not match current board id');\n      }\n\n      const lastListIdx = state.board.lists.findIndex(\n        list => list.id === listId,\n      );\n      if (newListIdx === lastListIdx) {\n        return state;\n      }\n\n      const listToMove = state.board.lists[lastListIdx];\n      const updatedLists = [...state.board.lists];\n\n      updatedLists.splice(lastListIdx, 1);\n      updatedLists.splice(newListIdx, 0, listToMove);\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: updatedLists,\n        },\n      };\n    }\n    case ADD_CARD.SUCCESS: {\n      const { listId, card } = action;\n\n      const updatedLists = state.board.lists.map(list =>\n        list.id === listId\n          ? {\n              ...list,\n              cards: list.cards.concat(card),\n            }\n          : list,\n      );\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: updatedLists,\n        },\n      };\n    }\n\n    case ADD_LIST.SUCCESS: {\n      const { boardId, list } = action;\n\n      if (state.board.id !== boardId) {\n        console.error('Board id does not match current board id');\n      }\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: state.board.lists.concat(list),\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n// import { createBrowserHistory } from 'history';\n// import { connectRouter } from 'connected-react-router';\n\nimport { board } from '../ducks/board/reducer';\n\n// const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  // router: connectRouter(history),\n  board,\n});\n\nexport { rootReducer };\n","let id = 0;\n\nexport const mockBoard = {\n  id: (id++).toString(),\n  name: {\n    text: 'Project \"Kanban board\"',\n    color: 'white',\n  },\n  background: {\n    type: 'img',\n    url:\n      'https://images.unsplash.com/photo-1508625935447-e0ebc2cdf6bf?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2835&q=80',\n  },\n  lists: [\n    {\n      id: (id++).toString(),\n      name: 'TO DO',\n      cards: [\n        {\n          id: (id++).toString(),\n          content: 'Add an opportunity to edit cards / columns',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Add an opportunity to delete cards / columns',\n        },\n      ],\n    },\n    {\n      id: (id++).toString(),\n      name: 'IN PROGRESS',\n      cards: [],\n    },\n    {\n      id: (id++).toString(),\n      name: 'DONE',\n      cards: [\n        {\n          id: (id++).toString(),\n          content: 'Add an opportunity to move cards',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Add an opportunity to move columns',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Add an opportunity to create new cards',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Add an opportunity to create new columns',\n        },\n        {\n          id: (id++).toString(),\n          content: 'A flexible drag drop system',\n        },\n        {\n          id: (id++).toString(),\n          content:\n            'Add an ability to have several accepted draggable types for a droppable object',\n        },\n        {\n          id: (id++).toString(),\n          content:\n            'Get rid of placeholder movement back and forth',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Add an ability to move scrollbar for a draggable object',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Add an ability to scroll a board by clicking it and by an attempt to shift it',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Solve a text overflow problem',\n        },\n        {\n          id: (id++).toString(),\n          content:\n            'Make a form of creating new card visible at the opening',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Make cards and columns accessible from a keyboard',\n        },\n        {\n          id: (id++).toString(),\n          content:\n            'Forbid of creation of empty cards',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Don\\'t start dragging after a short click',\n        },\n        {\n          id: (id++).toString(),\n          content:\n            'Don\\'t start dragging by a right / middle mouse click',\n        },\n        {\n          id: (id++).toString(),\n          content: 'Highlight a placeholder for a dragging column with a color',\n        },\n        {\n          id: (id++).toString(),\n          content:\n            'Add support of a drag n drop feature for mobile devices',\n        },\n        {\n          id: (id++).toString(),\n          content:\n            'Add a realistic animation for a dragging card',\n        },\n      ],\n    },\n    {\n      id: (id++).toString(),\n      name: 'RETROSPECTIVE',\n      cards: [],\n    },\n  ],\n};\n","import { uniqueId } from 'lodash';\n\nimport { mockBoard } from './mocks';\n\n/**\n * This file is going to send requests to server and return server responses in the future\n */\nexport function fetchBoardRequest(id) {\n  return mockBoard;\n}\n\nexport function addCardRequest(listId, content) {\n  const newCard = {\n    id: uniqueId('card'),\n    content,\n  };\n  return { listId, card: newCard };\n}\n\nexport function addListRequest(boardId, content) {\n  const newList = {\n    id: uniqueId('list'),\n    name: content,\n    cards: [],\n  };\n  return { boardId, list: newList };\n}\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\n\nimport {\n  addCardError,\n  addCardSuccess,\n  addListError,\n  addListSuccess,\n  fetchBoardError,\n  fetchBoardSuccess,\n} from './actions';\n\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\n\nimport * as services from './services';\n\nfunction* fetchBoard({ id }) {\n  try {\n    const board = yield call(services.fetchBoardRequest, id);\n    yield put(fetchBoardSuccess(board));\n  } catch (error) {\n    yield put(fetchBoardError(error));\n  }\n}\n\nfunction* addCard({ listId, content }) {\n  try {\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\n  } catch (error) {\n    yield put(addCardError(error));\n  }\n}\n\nfunction* addList({ boardId, content }) {\n  try {\n    const newListInfo = yield call(services.addListRequest, boardId, content);\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\n  } catch (error) {\n    yield put(addListError(error));\n  }\n}\n\nexport function* watchBoardRequests() {\n  yield all([\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\n    takeLatest(ADD_CARD.REQUEST, addCard),\n    takeLatest(ADD_LIST.REQUEST, addList),\n  ]);\n}\n","import { all, call } from 'redux-saga/effects';\nimport { watchBoardRequests } from '../ducks/board/saga';\n\nexport default function* rootSaga() {\n  yield all([call(watchBoardRequests)]);\n}\n","import createSagaMiddleware from 'redux-saga';\n\nimport { applyMiddleware, createStore } from 'redux';\n// import { routerMiddleware } from 'connected-react-router';\n\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { rootReducer } from './rootReducer';\nimport rootSaga from './rootSaga';\n\n// const navigationMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}