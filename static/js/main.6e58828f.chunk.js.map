{"version":3,"sources":["drag-drop/internal/DragDropContext.js","drag-drop/DragDropManager.js","drag-drop/useDraggable.js","constants.js","ducks/board/action-types.js","ducks/board/actions.js","helpers/moveTo.js","components/Card/Card.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","drag-drop/useDroppableList.js","helpers/lowerBound.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","grabDraggable","registerAsDroppable","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","droppable","_this","id","grabPosition","context","type","node","renderElement","onRelease","current","boundingRect","getBoundingClientRect","geometry","width","right","left","height","bottom","top","grabShift","x","y","position","dndContext","Object","objectSpread","manageDroppables","setState","document","addEventListener","moveDraggable","releaseDraggable","console","error","event","clientX","clientY","newPosition","warn","findDroppable","draggedNode","style","visibility","element","elementFromPoint","closest","concat","currentDraggedObject","currentHoveredDroppable","removeEventListener","draggableContext","droppableContext","onDraggableLeave","setDraggedObjectRef","draggedObjectNode","_this$draggedObject","this","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","props","react_default","a","createElement","Fragment","clientPosition","draggedObjectRef","internal_DragDropContext","Provider","value","Component","useDraggable","_ref","dragHandle","useContext","useEffect","onMouseDown","stopPropagation","handle","DRAGGABLE_TYPE","CARD","LIST","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","moveTo","Card","content","setCardRef","moveCardToList","className","cardRef","useRef","_ref2","ref","classNames","_ref3","index","defaultProps","mapDispatchToProps","cardId","destinationListId","indexInList","connect","AddComponent","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","_useState","useState","_useState2","slicedToArray","creationMode","setCreationMode","_useState3","_useState4","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","handleOpen","addComponentId","seed","uniqueId","_","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","onClick","autoFocus","placeholder","onChange","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","useDroppableList","acceptedType","items","isPositionLess","listNode","itemNodes","placeholderIndex","setPlaceholderIndex","placeholderGeometry","setPlaceholderGeometry","draggable","draggableCenterPos","array","predicate","leftIdx","rightIdx","length","middleIdx","Math","floor","lowerBound","item","itemRect","itemCenterPos","_useDroppable","_useContext","droppableClassName","useDroppable","setItemAt","idx","listItems","map","data","splice","itemToIgnoreIdx","findIndex","CardList","name","cards","addCard","setListRef","moveList","_useDroppableList","draggableCenter","cardCenter","dragHandleRef","Boolean","components_Card_Card","assign","key","components_AddComponent_AddComponent","bind","destinationBoardId","indexInBoard","selectBoard","Board","background","lists","addList","backgroundStyle","url","color","boardStyle","useMemo","backgroundSize","itemCenter","components_CardList_CardList","fetchBoard","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","modifiedLists","found","find","filter","dstList","lastIdx","movedList","idxToRemoveAt","toConsumableArray","updatedLists","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.6e58828f.chunk.js","sourcesContent":["import React from 'react';\n\nconst DragDropContext = React.createContext({\n  draggedObject: null,\n  grabDraggable: () => {},\n  registerAsDroppable: () => {},\n});\n\nexport default DragDropContext;\n","import React from 'react';\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n\r\n  registerAsDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n  };\r\n\r\n  grabDraggable = (\r\n    grabPosition,\r\n    context,\r\n    type,\r\n    node,\r\n    renderElement,\r\n    onRelease,\r\n  ) => {\r\n    if (this.draggedObject !== null) {\r\n      console.error('Grabbing object while object already grabbed');\r\n      return;\r\n    }\r\n\r\n    const grabbedNode = node.current;\r\n    if (!grabbedNode) {\r\n      console.error('Null ref to grabbed node');\r\n      return;\r\n    }\r\n    const boundingRect = node.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderElement,\r\n      onRelease,\r\n      geometry: {\r\n        width: boundingRect.right - boundingRect.left,\r\n        height: boundingRect.bottom - boundingRect.top,\r\n        grabShift: {\r\n          x: boundingRect.left - grabPosition.x,\r\n          y: boundingRect.top - grabPosition.y,\r\n        },\r\n      },\r\n      position: {\r\n        x: boundingRect.left,\r\n        y: boundingRect.top,\r\n      },\r\n    };\r\n\r\n    this.dndContext = {\r\n      ...this.dndContext,\r\n      draggedObject: this.draggedObject,\r\n    };\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('mousemove', this.moveDraggable);\r\n        document.addEventListener('mouseup', this.releaseDraggable);\r\n      },\r\n    );\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    grabDraggable: this.grabDraggable,\r\n    registerAsDroppable: this.registerAsDroppable,\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, geometry } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + geometry.width / 2,\r\n      y: position.y + geometry.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) {\r\n      return;\r\n    }\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { position } = this.state;\r\n\r\n    if (position === null) {\r\n      console.warn('Position is null in moveDraggable');\r\n      return;\r\n    }\r\n\r\n    const { geometry } = this.draggedObject;\r\n\r\n    const newPosition = {\r\n      x: clientX + geometry.grabShift.x,\r\n      y: clientY + geometry.grabShift.y,\r\n    };\r\n    this.draggedObject.position = newPosition;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n  };\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'hidden';\r\n    }\r\n    const element = document.elementFromPoint(position.x, position.y);\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'visible';\r\n    }\r\n\r\n    if (element == null) {\r\n      return null;\r\n    }\r\n\r\n    return element.closest(`.droppable-${this.draggedObject.type}`);\r\n  };\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('mousemove', this.moveDraggable);\r\n    document.removeEventListener('mouseup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    if (currentDraggedObject === null) {\r\n      console.error('Releasing draggable while have not grabbed one yet');\r\n      return;\r\n    }\r\n    if (currentHoveredDroppable === null) {\r\n      console.error('Releasing draggable, which does not hover any droppable');\r\n      return;\r\n    }\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderElement({\r\n            clientPosition: draggedObjectPosition,\r\n            draggedObjectRef: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropManager;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable({\r\n  context,\r\n  type,\r\n  node,\r\n  dragHandle,\r\n  renderElement,\r\n  onRelease,\r\n}) {\r\n  const { grabDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const onMouseDown = event => {\r\n      const { clientX, clientY } = event;\r\n      grabDraggable(\r\n        {\r\n          x: clientX,\r\n          y: clientY,\r\n        },\r\n        context,\r\n        type,\r\n        node,\r\n        renderElement,\r\n        onRelease,\r\n      );\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    const handle = dragHandle.current;\r\n\r\n    handle.addEventListener('mousedown', onMouseDown);\r\n\r\n    return () => {\r\n      handle.removeEventListener('mousedown', onMouseDown);\r\n    };\r\n  }, [\r\n    grabDraggable,\r\n    context,\r\n    type,\r\n    node,\r\n    renderElement,\r\n    onRelease,\r\n    dragHandle,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nexport { DRAGGABLE_TYPE };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, indexInBoard) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    indexInBoard,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","export function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    node: cardRef,\r\n    dragHandle: cardRef,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        ref={draggedObjectRef}\r\n        className={classNames('card', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <h4 className='card-content'>{content}</h4>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <li id={id} ref={setRefs} className={classNames('card', className)}>\r\n      <h4 className='card-content'>{content}</h4>\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n}) {\r\n  const [creationMode, setCreationMode] = useState(false);\r\n\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    setCreationMode(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const textarea = useRef(null);\r\n  const handleOpen = useCallback(() => {\r\n    setCreationMode(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    setCreationMode(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n    >\r\n      <button\r\n        className={classNames(\r\n          'open-component-composer-btn',\r\n          creationMode && 'hidden',\r\n        )}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        className={classNames(\r\n          'component-composer',\r\n          formClassName,\r\n          !creationMode && 'hidden',\r\n        )}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='component-content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='component-composer-controls'>\r\n          <button className='add-component-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button className='close-btn' onClick={handleClose} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  formClassName: '',\r\n  className: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const uniqueId = useRef(null);\r\n  useEffect(() => {\r\n    uniqueId.current = _.uniqueId(seed);\r\n  }, [seed]);\r\n  return uniqueId.current;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('mousedown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","import { useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { lowerBound } from '../helpers/lowerBound';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nfunction useDroppableList({ id, acceptedType, items, isPositionLess }) {\r\n  const listNode = useRef(null);\r\n  const itemNodes = useRef([]);\r\n  const context = useRef({ id, index: null });\r\n\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setPlaceholderGeometry({\r\n      width: draggable.geometry.width,\r\n      height: draggable.geometry.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenterPos = {\r\n        x: draggable.position.x + draggable.geometry.width / 2,\r\n        y: draggable.position.y + draggable.geometry.height / 2,\r\n      };\r\n\r\n      let placeholderIndex = lowerBound(itemNodes.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n        const itemCenterPos = {\r\n          x: itemRect.left + itemRect.width / 2,\r\n          y: itemRect.top + itemRect.height / 2,\r\n        };\r\n        return isPositionLess(draggableCenterPos, itemCenterPos);\r\n      });\r\n\r\n      placeholderIndex =\r\n        placeholderIndex !== null ? placeholderIndex : itemNodes.current.length;\r\n\r\n      context.current.index = placeholderIndex;\r\n      setPlaceholderIndex(placeholderIndex);\r\n    },\r\n    [isPositionLess],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    context.current.index = null;\r\n  }, []);\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: context.current,\r\n    node: listNode,\r\n    acceptedType,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  const setItemAt = useCallback((item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemNodes.current[idx] = item;\r\n  }, []);\r\n\r\n  const listItems = items.map(item => ({\r\n    type: ITEM_TYPE.REGULAR_ITEM,\r\n    data: item,\r\n  }));\r\n\r\n  if (placeholderIndex !== null) {\r\n    listItems.splice(placeholderIndex, 0, {\r\n      type: ITEM_TYPE.PLACEHOLDER,\r\n      index: placeholderIndex,\r\n      geometry: placeholderGeometry,\r\n    });\r\n  }\r\n\r\n  if (draggableContext !== null) {\r\n    const itemToIgnoreIdx = listItems.findIndex(\r\n      item =>\r\n        item.type === ITEM_TYPE.REGULAR_ITEM &&\r\n        item.data.id === draggableContext.id,\r\n    );\r\n    if (itemToIgnoreIdx !== -1) {\r\n      listItems.splice(itemToIgnoreIdx, 1);\r\n    }\r\n  }\r\n\r\n  return {\r\n    listItems,\r\n    listNode,\r\n    setItemAt,\r\n    droppableClassName,\r\n  };\r\n}\r\n\r\nexport { ITEM_TYPE, useDroppableList };\r\n","/**\r\n * Return index of first element of array, for which predicate returns false\r\n */\r\nfunction lowerBound(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      rightIdx = middleIdx - 1;\r\n    } else {\r\n      leftIdx = middleIdx + 1;\r\n    }\r\n  }\r\n\r\n  return leftIdx < array.length ? leftIdx : null;\r\n}\r\n\r\nexport { lowerBound };\r\n","import { useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable({\r\n  id,\r\n  context,\r\n  node,\r\n  acceptedType,\r\n  onDraggableEnter,\r\n  onDraggableHover,\r\n  onDraggableLeave,\r\n}) {\r\n  const { draggedObject, registerAsDroppable } = useContext(DragDropContext);\r\n\r\n  registerAsDroppable({\r\n    id,\r\n    node,\r\n    context,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: `droppable-${acceptedType}`,\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { ITEM_TYPE, useDroppableList } from '../../drag-drop/useDroppableList';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const {\r\n    listNode,\r\n    setItemAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    acceptedType: DRAGGABLE_TYPE.CARD,\r\n    items: cards,\r\n    isPositionLess: useCallback(\r\n      (draggableCenter, cardCenter) => draggableCenter.y <= cardCenter.y,\r\n      [],\r\n    ),\r\n  });\r\n\r\n  const dragHandleRef = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    node: listNode,\r\n    dragHandle: dragHandleRef,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        id={id}\r\n        ref={draggedObjectRef}\r\n        className={classNames('card-list', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <header>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {Boolean(listItems.length) && (\r\n          <ul className='list-cards'>\r\n            {listItems.map((item, idx) => (\r\n              <Card\r\n                key={item.data.id}\r\n                {...item.data}\r\n                className='list-card'\r\n                setCardRef={node => setItemAt(node, idx)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <footer>\r\n          <AddComponent\r\n            className='add-card-btn'\r\n            openCreationFormBtnText='Добавить ещё одну карточку'\r\n            placeholderFormText='Введите название карточки'\r\n            submitFormBtnText='Добавить карточку'\r\n            onAdd={addCard.bind(null, id)}\r\n          />\r\n        </footer>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listNode.current = node;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card-list', droppableClassName, className)}\r\n    >\r\n      <header ref={dragHandleRef}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {Boolean(listItems.length) && (\r\n        <ul className='list-cards'>\r\n          {listItems.map((item, idx) => {\r\n            switch (item.type) {\r\n              case ITEM_TYPE.REGULAR_ITEM:\r\n                return (\r\n                  <Card\r\n                    key={item.data.id}\r\n                    {...item.data}\r\n                    className='list-card'\r\n                    setCardRef={node => setItemAt(node, idx)}\r\n                  />\r\n                );\r\n              case ITEM_TYPE.PLACEHOLDER:\r\n                return (\r\n                  <li\r\n                    key={`placeholder_at_idx_${item.index}`}\r\n                    ref={node => setItemAt(node, idx)}\r\n                    className='placeholder list-card'\r\n                    style={{\r\n                      width: item.geometry && item.geometry.width,\r\n                      height: item.geometry && item.geometry.height,\r\n                    }}\r\n                  />\r\n                );\r\n              default:\r\n                console.error('Unknown item type', item.type);\r\n            }\r\n            return null;\r\n          })}\r\n        </ul>\r\n      )}\r\n      <footer>\r\n        <AddComponent\r\n          className='add-card-btn'\r\n          openCreationFormBtnText='Добавить ещё одну карточку'\r\n          placeholderFormText='Введите название карточки'\r\n          submitFormBtnText='Добавить карточку'\r\n          onAdd={addCard.bind(null, id)}\r\n        />\r\n      </footer>\r\n    </li>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect, useMemo, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { ITEM_TYPE, useDroppableList } from '../../drag-drop/useDroppableList';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, lists, addList }) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n\r\n  const {\r\n    listNode,\r\n    setItemAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    acceptedType: DRAGGABLE_TYPE.LIST,\r\n    items: lists,\r\n    isPositionLess: useCallback(\r\n      (draggableCenter, itemCenter) => draggableCenter.x <= itemCenter.x,\r\n      [],\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={listNode}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n    >\r\n      <ul className='board-lists'>\r\n        {listItems.map((item, idx) => {\r\n          switch (item.type) {\r\n            case ITEM_TYPE.REGULAR_ITEM:\r\n              return (\r\n                <CardList\r\n                  key={item.data.id}\r\n                  className='board-list'\r\n                  {...item.data}\r\n                  setListRef={node => setItemAt(node, idx)}\r\n                />\r\n              );\r\n            case ITEM_TYPE.PLACEHOLDER:\r\n              return (\r\n                <div\r\n                  key={`placeholder_at_idx_${item.index}`}\r\n                  ref={node => setItemAt(node, idx)}\r\n                  className='placeholder board-list'\r\n                  style={{\r\n                    width: item.geometry && item.geometry.width,\r\n                    height: item.geometry && item.geometry.height,\r\n                  }}\r\n                />\r\n              );\r\n            default:\r\n              console.error('Unknown item type', item.type);\r\n          }\r\n          return null;\r\n        })}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import React from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  return (\n    <DragDropManager>\n      <BoardContainer id={0} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          id: action.board.id,\r\n          name: action.board.name,\r\n          lists: action.board.lists,\r\n          background: action.board.background,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const modifiedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = modifiedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, indexInBoard } = action;\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Board destination id does not match current board id');\r\n      }\r\n\r\n      const lastIdx = state.board.lists.findIndex(list => list.id === listId);\r\n      if (indexInBoard === lastIdx) {\r\n        return state;\r\n      }\r\n\r\n      const movedList = state.board.lists[lastIdx];\r\n      const idxToRemoveAt = lastIdx + (indexInBoard < lastIdx ? 1 : 0);\r\n\r\n      const modifiedLists = [...state.board.lists];\r\n\r\n      modifiedLists.splice(indexInBoard, 0, movedList);\r\n      modifiedLists.splice(idxToRemoveAt, 1);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === action.listId\r\n          ? {\r\n              ...list,\r\n              cards: [...list.cards, action.card],\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, action.list],\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: 'Моя доска',\r\n  background: {\r\n    type: 'img',\r\n    url:\r\n      'https://images.unsplash.com/photo-1508625935447-e0ebc2cdf6bf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=100',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'План на месяц',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Пройти курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отметить день рождения',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться на курсы английского, чтобы уехать жить в Лондон',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд своего сайта на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Собрать портфолио',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать первую статью в блог',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться в мотошколу. Хотя немного страшновато, конечно. Друзья и родители против, но очень хочется. Но кого я обманываю, уже 2 года решаюсь на этот шаг 😢 Еще и друзья будут хрустиком называть. В общем, хотя бы подумать над этим.',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нет, я серьезный человек, иду в мотошколу. Записываюсь!',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выспаться',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Посмотреть игру престолов',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Научиться рисовать',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать уборку',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться в тренажерный зал',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Купить обогреватель',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'План на неделю',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать To-Do app',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отложить 2000 рублей',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нарисовать мотивационный плакат «Магии нет»',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'План на день',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться на курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Забронировать тир на субботу',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Накидать тем для статей в блог',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'Итоги',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import _ from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const card = {\r\n    id: _.uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const list = {\r\n    id: _.uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list };\r\n}","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}