{"version":3,"sources":["drag-drop/internal/DragDropContext.js","helpers/scrollbar.js","constants.js","drag-drop/DragDropManager.js","helpers/visibility.js","helpers/inside.js","helpers/moveTo.js","ducks/board/action-types.js","ducks/board/actions.js","drag-drop/useDraggable.js","components/Card/Card.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","drag-drop/useDroppableList.js","helpers/binaryLastIndexOf.js","drag-drop/useDroppable.js","drag-drop/useScrollable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","hooks/uncontrollable.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","registerScrollable","hasVerticalScrollbar","element","scrollHeight","clientHeight","hasHorizontalScrollbar","scrollWidth","clientWidth","DRAGGABLE_TYPE","CARD","LIST","MOVEMENT","BOTTOM","TOP","RIGHT","LEFT","MOUSE_BUTTON","MIDDLE","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","scrollables","scrollable","_this","id","droppable","_ref","dragHandleRef","draggable","Object","objectWithoutProperties","handle","current","onPointerDown","event","which","grabPosition","x","clientX","y","clientY","draggedObjectRect","ref","getBoundingClientRect","grabShift","left","top","bindedStartDragIfMove","startDragIfMove","objectSpread","document","addEventListener","resetPreparationToDrag","stopPropagation","removeEventListener","newX","newY","Math","abs","grabDraggable","_ref2","context","type","renderAvatar","onRelease","geometry","width","height","position","movement","dndContext","manageDroppables","setState","moveDraggable","releaseDraggable","movementX","movementY","newPosition","push","scrollIfNedeed","currentDraggedObject","currentHoveredDroppable","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","node","style","visibility","console","error","hideElement","elementFromPoint","showElement","closest","acceptedTypes","includes","parentNode","warn","setDraggedObjectRef","draggedObjectNode","cursorPosition","_this2","this","values","forEach","scrollStep","scrollPointOffset","scrolledByTypes","scrollableNode","point","elementRect","right","bottom","inside","clientLeft","scrollLeft","clientTop","scrollTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","props","react_default","a","createElement","Fragment","clientPosition","draggedObjectRef","internal_DragDropContext","Provider","value","Component","moveTo","concat","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","useDraggable","useContext","useEffect","Card","content","setCardRef","moveCardToList","className","renderCard","isDragged","classNames","tabIndex","cardRef","useRef","_ref3","placeholderIndex","defaultProps","mapDispatchToProps","cardId","destinationListId","indexInList","connect","AddComponent","isFormOpened","onFormOpenedChange","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","_useState","useState","_useState2","slicedToArray","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","trim","handleOpen","addComponentId","seed","setUniqueId","uniqueId","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","hidden","onClick","autoFocus","placeholder","onChange","aria-label","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","HORIZONTAL","VERTICAL","makeListItems","items","itemToIgnoreId","listItems","map","item","data","filter","splice","enrichWithPlaceholder","useDroppableList","listType","setPlaceholderIndex","_useState3","_useState4","placeholderGeometry","setPlaceholderGeometry","_useState5","_useState6","isHoveredByDraggable","setIsHoveredByDraggable","contextRef","itemsRef","draggableCenter","placeholderIdx","array","predicate","leftIdx","rightIdx","length","middleIdx","floor","binaryLastIndexOf","itemRect","extra","_useDroppable","_useContext","droppableClassName","useDroppable","setItemRefAt","idx","useScrollable","_ref$scrollPointOffse","_ref$scrollStep","_ref$scrolledByTypes","scrollableRef","CardList","name","cards","addCard","setListRef","moveList","useMemo","_useDroppableList","listRef","isCardFormOpened","setIsCardFormOpened","addCardComponent","components_AddComponent_AddComponent","bind","cardListContent","Boolean","_ITEM_TYPE$REGULAR_IT","defineProperty","key","components_Card_Card","assign","destinationBoardId","newListIdx","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","backgroundSize","useBoardStyle","addComponentUncontrollableProps","propName","changeHandlerName","defaultValue","reduce","setValue","text","components_CardList_CardList","fetchBoard","rest","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","updatedLists","found","find","dstList","lastListIdx","findIndex","listToMove","toConsumableArray","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.c90ed189.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n  registerScrollable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","function hasVerticalScrollbar(element) {\r\n  return element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nfunction hasHorizontalScrollbar(element) {\r\n  return element.scrollWidth > element.clientWidth;\r\n}\r\n\r\nfunction findNearestVerticalScrollbar(position) {\r\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\r\n  while (elementFromPosition) {\r\n    if (hasVerticalScrollbar(elementFromPosition)) {\r\n      return elementFromPosition;\r\n    }\r\n    elementFromPosition = elementFromPosition.parentNode;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction findNearestHorizontalScrollbar(position) {\r\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\r\n  while (elementFromPosition) {\r\n    if (hasHorizontalScrollbar(elementFromPosition)) {\r\n      return elementFromPosition;\r\n    }\r\n    elementFromPosition = elementFromPosition.parentNode;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport {\r\n  hasVerticalScrollbar,\r\n  hasHorizontalScrollbar,\r\n  findNearestVerticalScrollbar,\r\n  findNearestHorizontalScrollbar,\r\n};\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nconst MOVEMENT = {\r\n  BOTTOM: 'BOTTOM',\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  LEFT: 'LEFT',\r\n};\r\n\r\nconst MOUSE_BUTTON = {\r\n  LEFT: 1,\r\n  MIDDLE: 2,\r\n  RIGHT: 3,\r\n};\r\n\r\nexport { DRAGGABLE_TYPE, MOVEMENT, MOUSE_BUTTON };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nimport {\r\n  hasHorizontalScrollbar,\r\n  hasVerticalScrollbar,\r\n} from '../helpers/scrollbar';\r\n\r\nimport { hideElement, showElement } from '../helpers/visibility';\r\nimport { MOUSE_BUTTON, MOVEMENT } from '../constants';\r\nimport { inside } from '../helpers/inside';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n  scrollables = {};\r\n\r\n  registerScrollable = scrollable => {\r\n    this.scrollables[scrollable.id] = scrollable;\r\n    return () => {\r\n      delete this.scrollables[scrollable.id];\r\n    };\r\n  };\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {\r\n      delete this.droppables[droppable.id];\r\n    };\r\n  };\r\n\r\n  registerDraggable = ({ dragHandleRef, ...draggable }) => {\r\n    const handle = dragHandleRef.current;\r\n\r\n    const onPointerDown = event => {\r\n      const { which: mouseButton } = event;\r\n      if (mouseButton !== MOUSE_BUTTON.LEFT) return;\r\n\r\n      const { clientX, clientY } = event;\r\n      const grabPosition = {\r\n        x: clientX,\r\n        y: clientY,\r\n      };\r\n      const draggedObjectRect = draggable.ref.current.getBoundingClientRect();\r\n      const grabShift = {\r\n        x: draggedObjectRect.left - grabPosition.x,\r\n        y: draggedObjectRect.top - grabPosition.y,\r\n      };\r\n\r\n      this.bindedStartDragIfMove = event =>\r\n        this.startDragIfMove(\r\n          { handle, ...draggable },\r\n          grabPosition,\r\n          grabShift,\r\n          event,\r\n        );\r\n\r\n      document.addEventListener('mousemove', this.bindedStartDragIfMove);\r\n      document.addEventListener('mouseup', this.resetPreparationToDrag);\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    handle.addEventListener('mousedown', onPointerDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('mousedown', onPointerDown);\r\n    };\r\n  };\r\n\r\n  startDragIfMove = (draggable, grabPosition, grabShift, event) => {\r\n    const { clientX: newX, clientY: newY } = event;\r\n\r\n    if (\r\n      Math.abs(newX - grabPosition.x) > 2 ||\r\n      Math.abs(newY - grabPosition.y) > 2\r\n    ) {\r\n      document.removeEventListener('mousemove', this.bindedStartDragIfMove);\r\n      document.removeEventListener('mouseup', this.resetPreparationToDrag);\r\n\r\n      this.grabDraggable({\r\n        grabShift,\r\n        ...draggable,\r\n      });\r\n    }\r\n  };\r\n\r\n  resetPreparationToDrag = () => {\r\n    document.removeEventListener('mousemove', this.bindedStartDragIfMove);\r\n    document.removeEventListener('mouseup', this.resetPreparationToDrag);\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabShift,\r\n    context,\r\n    type,\r\n    ref,\r\n    handle,\r\n    renderAvatar,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = ref.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderAvatar,\r\n      handle,\r\n      onRelease,\r\n      geometry: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n        grabShift,\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n      movement: [],\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('mousemove', this.moveDraggable);\r\n        document.addEventListener('mouseup', this.releaseDraggable);\r\n      },\r\n    );\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n    registerScrollable: this.registerScrollable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { movementX, movementY } = event;\r\n    const { geometry } = this.draggedObject;\r\n\r\n    const newPosition = {\r\n      x: clientX + geometry.grabShift.x,\r\n      y: clientY + geometry.grabShift.y,\r\n    };\r\n    this.draggedObject.position = newPosition;\r\n\r\n    const movement = [];\r\n    if (movementX) {\r\n      movement.push(movementX > 0 ? MOVEMENT.RIGHT : MOVEMENT.LEFT);\r\n    }\r\n    if (movementY) {\r\n      movement.push(movementY > 0 ? MOVEMENT.BOTTOM : MOVEMENT.TOP);\r\n    }\r\n    this.draggedObject.movement = movement;\r\n\r\n    this.scrollIfNedeed({ x: clientX, y: clientY });\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n  };\r\n\r\n  scrollIfNedeed(cursorPosition) {\r\n    Object.values(this.scrollables).forEach(scrollable => {\r\n      const {\r\n        scrollStep,\r\n        scrollPointOffset,\r\n        scrolledByTypes,\r\n        ref: { current: scrollableNode },\r\n      } = scrollable;\r\n\r\n      if (!scrollableNode) return;\r\n\r\n      if (!scrolledByTypes.includes(this.draggedObject.type)) return;\r\n\r\n      if (!inside(cursorPosition, scrollableNode)) return;\r\n\r\n      if (hasHorizontalScrollbar(scrollableNode)) {\r\n        if (cursorPosition.x <= scrollableNode.clientLeft + scrollPointOffset) {\r\n          scrollableNode.scrollLeft -= scrollStep;\r\n        } else if (\r\n          cursorPosition.x >=\r\n          scrollableNode.clientWidth - scrollPointOffset\r\n        ) {\r\n          scrollableNode.scrollLeft += scrollStep;\r\n        }\r\n      }\r\n      if (hasVerticalScrollbar(scrollableNode)) {\r\n        if (cursorPosition.y <= scrollableNode.clientTop + scrollPointOffset) {\r\n          scrollableNode.scrollTop -= scrollStep;\r\n        } else if (\r\n          cursorPosition.y >=\r\n          scrollableNode.clientWidth - scrollPointOffset\r\n        ) {\r\n          scrollableNode.scrollTop += scrollStep;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('mousemove', this.moveDraggable);\r\n    document.removeEventListener('mouseup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, geometry } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + geometry.width / 2,\r\n      y: position.y + geometry.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    hideElement(draggedNode);\r\n    let element = document.elementFromPoint(position.x, position.y);\r\n    showElement(draggedNode);\r\n\r\n    while (element) {\r\n      const droppable = element.closest('.droppable');\r\n\r\n      if (!droppable) return null;\r\n\r\n      if (!this.droppables[droppable.id]) {\r\n        console.warn('Unregistered droppable with id:', droppable.id);\r\n\r\n        element = droppable.parentNode;\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        this.droppables[droppable.id].acceptedTypes.includes(\r\n          this.draggedObject.type,\r\n        )\r\n      ) {\r\n        return this.droppables[droppable.id];\r\n      }\r\n\r\n      element = droppable.parentNode;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderAvatar({\r\n            clientPosition: draggedObjectPosition,\r\n            draggedObjectRef: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDragDropManager.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default DragDropManager;\r\n","function hideElement(element) {\r\n  if (element) {\r\n    element.style.visibility = 'hidden';\r\n  } else {\r\n    console.error('No element to hide');\r\n  }\r\n}\r\n\r\nfunction showElement(element) {\r\n  if (element) {\r\n    element.style.visibility = 'visible';\r\n  } else {\r\n    console.error('No element to hide');\r\n  }\r\n}\r\n\r\nexport { hideElement, showElement };\r\n","function inside(point, element) {\r\n  const elementRect = element.getBoundingClientRect();\r\n  return (\r\n    point.x >= elementRect.left &&\r\n    point.x <= elementRect.right &&\r\n    point.y >= elementRect.top &&\r\n    point.y <= elementRect.bottom\r\n  );\r\n}\r\n\r\nexport { inside };\r\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, newListIdx) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    newListIdx,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable(draggable) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable(draggable);\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    draggable.context,\r\n    draggable.type,\r\n    draggable.ref,\r\n    draggable.dragHandleRef,\r\n    draggable.renderAvatar,\r\n    draggable.onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { moveTo } from '../../helpers/moveTo';\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const renderCard = (isDragged, clientPosition, ref) => (\r\n    <div\r\n      id={id}\r\n      ref={ref}\r\n      className={classNames('card', isDragged && 'dragged', className)}\r\n      style={isDragged ? moveTo(clientPosition) : {}}\r\n      tabIndex={0}\r\n    >\r\n      <h4 className='card-content'>{content}</h4>\r\n    </div>\r\n  );\r\n\r\n  const cardRef = useRef(null);\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    ref: cardRef,\r\n    dragHandleRef: cardRef,\r\n    renderAvatar: ({ clientPosition, draggedObjectRef }) =>\r\n      renderCard(true, clientPosition, draggedObjectRef),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.placeholderIndex,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return renderCard(false, null, setRefs);\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  isFormOpened,\r\n  onFormOpenedChange,\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n  style,\r\n}) {\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    onFormOpenedChange(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    if (!content.trim()) return;\r\n\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    onFormOpenedChange(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    onFormOpenedChange(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    if (isFormOpened) {\r\n      formRef.current.scrollIntoView(false);\r\n    }\r\n  }, [isFormOpened]);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n      style={style}\r\n    >\r\n      <button\r\n        className={classNames('open-form-btn', {\r\n          hidden: isFormOpened,\r\n        })}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        ref={node => (formRef.current = node)}\r\n        className={classNames('form', formClassName, {\r\n          hidden: !isFormOpened,\r\n        })}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='form-controls'>\r\n          <button className='add-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button\r\n            aria-label='close'\r\n            className='close-btn'\r\n            onClick={handleClose}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  isFormOpened: PropTypes.bool,\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  onFormOpenedChange: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  isFormOpened: null,\r\n  className: '',\r\n  formClassName: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useState, useEffect } from 'react';\r\nimport { uniqueId } from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const [id, setUniqueId] = useState(null);\r\n  useEffect(() => {\r\n    setUniqueId(uniqueId(seed));\r\n  }, [seed]);\r\n  return id;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('pointerdown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('pointerdown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","import { useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { binaryLastIndexOf } from '../helpers/binaryLastIndexOf';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction makeListItems(items, itemToIgnoreId, placeholder) {\r\n  let listItems = items\r\n    ? items.map(item => ({\r\n        type: ITEM_TYPE.REGULAR_ITEM,\r\n        data: item,\r\n      }))\r\n    : [];\r\n\r\n  const shouldIgnoreItem = itemToIgnoreId !== null;\r\n  if (shouldIgnoreItem) {\r\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\r\n  }\r\n\r\n  const shouldShowPlaceholder = placeholder.placeholderIndex !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems = enrichWithPlaceholder(listItems, placeholder);\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction enrichWithPlaceholder(listItems, placeholder) {\r\n  listItems.splice(placeholder.placeholderIndex, 0, {\r\n    type: ITEM_TYPE.PLACEHOLDER,\r\n    placeholderIndex: placeholder.placeholderIndex,\r\n    geometry: placeholder.geometry,\r\n  });\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({ id, acceptedTypes, listType, items }) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n  const [isHoveredByDraggable, setIsHoveredByDraggable] = useState(false);\r\n\r\n  const contextRef = useRef({ id, placeholderIndex: null });\r\n  const itemsRef = useRef([]);\r\n\r\n  const setItemRefAt = (item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemsRef.current[idx] = item;\r\n  };\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setIsHoveredByDraggable(true);\r\n    setPlaceholderGeometry({\r\n      width: draggable.geometry.width,\r\n      height: draggable.geometry.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.geometry.width / 2,\r\n        y: draggable.position.y + draggable.geometry.height / 2,\r\n      };\r\n\r\n      let placeholderIdx = binaryLastIndexOf(itemsRef.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n\r\n        switch (listType) {\r\n          case LIST_TYPE.HORIZONTAL: {\r\n            let extra = 0;\r\n            if (itemRect.width > draggable.geometry.width) {\r\n              // to avoid swap of placeholder and bigger card back and forth\r\n              extra = itemRect.width - draggable.geometry.width;\r\n            }\r\n            return itemRect.left + extra < draggableCenter.x;\r\n          }\r\n          case LIST_TYPE.VERTICAL: {\r\n            let extra = 0;\r\n            if (itemRect.height > draggable.geometry.height) {\r\n              // to avoid swap of placeholder and bigger card back and forth\r\n              extra = itemRect.height - draggable.geometry.height;\r\n            }\r\n            return itemRect.top + extra < draggableCenter.y;\r\n          }\r\n          default: {\r\n            console.error('Unknown list type:', listType);\r\n          }\r\n        }\r\n      });\r\n\r\n      placeholderIdx = placeholderIdx !== null ? placeholderIdx : 0;\r\n\r\n      contextRef.current.placeholderIndex = placeholderIdx;\r\n      setPlaceholderIndex(placeholderIdx);\r\n    },\r\n    [placeholderIndex, listType],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setIsHoveredByDraggable(false);\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    contextRef.current.placeholderIndex = null;\r\n  }, []);\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: contextRef.current,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  const placeholder = {\r\n    placeholderIndex,\r\n    geometry: placeholderGeometry,\r\n  };\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  const listItems = makeListItems(items, itemToIgnoreId, placeholder);\r\n\r\n  return {\r\n    listItems,\r\n    setItemRefAt,\r\n    droppableClassName,\r\n    isHoveredByDraggable,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","function binaryLastIndexOf(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      leftIdx = middleIdx + 1;\r\n    } else {\r\n      rightIdx = middleIdx - 1;\r\n    }\r\n  }\r\n\r\n  return rightIdx !== -1 ? rightIdx : null;\r\n}\r\n\r\nexport { binaryLastIndexOf };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable(droppable) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable(droppable);\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    droppable.id,\r\n    droppable.context,\r\n    droppable.acceptedTypes,\r\n    droppable.onDraggableEnter,\r\n    droppable.onDraggableHover,\r\n    droppable.onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: 'droppable',\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import { useEffect, useRef, useContext } from 'react';\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useScrollable({\r\n  id,\r\n  scrollPointOffset = 0,\r\n  scrollStep = 10,\r\n  scrolledByTypes = [],\r\n}) {\r\n  const scrollableRef = useRef(null);\r\n\r\n  const { registerScrollable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterScrollable = registerScrollable({\r\n      id,\r\n      ref: scrollableRef,\r\n      scrolledByTypes,\r\n      scrollPointOffset,\r\n      scrollStep,\r\n    });\r\n\r\n    return unregisterScrollable;\r\n  }, [id, scrollStep, scrollPointOffset, scrolledByTypes]);\r\n\r\n  return scrollableRef;\r\n}\r\n\r\nexport { useScrollable };\r\n","import React, { useState, useRef, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\nimport { useScrollable } from '../../drag-drop/useScrollable';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.CARD], []);\r\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedTypes,\r\n    items: cards,\r\n  });\r\n\r\n  const scrolledByTypes = useMemo(() => [DRAGGABLE_TYPE.CARD]);\r\n  const scrollableRef = useScrollable({\r\n    id,\r\n    scrolledByTypes,\r\n    scrollPointOffset: 60,\r\n    scrollStep: 20,\r\n  });\r\n\r\n  const dragHandleRef = useRef(null);\r\n  const listRef = useRef(null);\r\n\r\n  const [isCardFormOpened, setIsCardFormOpened] = useState(false);\r\n\r\n  const addCardComponent = (\r\n    <AddComponent\r\n      isFormOpened={isCardFormOpened}\r\n      formClassName='card-form'\r\n      openCreationFormBtnText='Добавить ещё одну карточку'\r\n      placeholderFormText='Введите название карточки'\r\n      submitFormBtnText='Добавить карточку'\r\n      onFormOpenedChange={value => setIsCardFormOpened(value)}\r\n      onAdd={addCard.bind(null, id)}\r\n    />\r\n  );\r\n\r\n  const cardListContent = (\r\n    <>\r\n      <header ref={dragHandleRef}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {(Boolean(listItems.length) || isCardFormOpened) && (\r\n        <ul ref={scrollableRef} className='list-cards'>\r\n          {listItems.map(\r\n            (item, idx) =>\r\n              ({\r\n                [ITEM_TYPE.REGULAR_ITEM]: (\r\n                  <li key={item.data && item.data.id}>\r\n                    <Card\r\n                      {...item.data}\r\n                      className='list-card'\r\n                      setCardRef={node => setItemRefAt(node, idx)}\r\n                    />\r\n                  </li>\r\n                ),\r\n                [ITEM_TYPE.PLACEHOLDER]: (\r\n                  <li key='placeholder'>\r\n                    <div\r\n                      ref={node => setItemRefAt(node, idx)}\r\n                      className='placeholder list-card'\r\n                      style={{\r\n                        width: item.geometry && item.geometry.width,\r\n                        height: item.geometry && item.geometry.height,\r\n                      }}\r\n                    />\r\n                  </li>\r\n                ),\r\n              }[item.type]),\r\n          )}\r\n          {isCardFormOpened && addCardComponent}\r\n        </ul>\r\n      )}\r\n      <footer>{!isCardFormOpened && addCardComponent}</footer>\r\n    </>\r\n  );\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    ref: listRef,\r\n    dragHandleRef,\r\n    renderAvatar: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        id={id}\r\n        ref={draggedObjectRef}\r\n        className={classNames('card-list', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        {cardListContent}\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.placeholderIndex,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div id={id} className={classNames(droppableClassName, className)}>\r\n      <div id={id} ref={setRefs} className='card-list' tabIndex={0}>\r\n        {cardListContent}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\nimport { useScrollable } from '../../drag-drop/useScrollable';\r\nimport { useUncontrollableProps } from '../../hooks/uncontrollable';\r\n\r\nfunction Board({ id, background, name, lists, addList }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.LIST], []);\r\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedTypes,\r\n    items: lists,\r\n  });\r\n\r\n  const scrolledByTypes = useMemo(\r\n    () => [DRAGGABLE_TYPE.LIST, DRAGGABLE_TYPE.CARD],\r\n    [],\r\n  );\r\n  const scrollableRef = useScrollable({\r\n    id,\r\n    scrolledByTypes,\r\n    scrollPointOffset: 60,\r\n    scrollStep: 20,\r\n  });\r\n\r\n  const addComponentUncontrollableProps = useUncontrollableProps([\r\n    {\r\n      propName: 'isFormOpened',\r\n      changeHandlerName: 'onFormOpenedChange',\r\n      defaultValue: false,\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n    >\r\n      <h1 className='board-title' style={{ color: name.color }}>\r\n        {name.text}\r\n      </h1>\r\n      <ul ref={scrollableRef} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <li key={item.data && item.data.id}>\r\n                  <CardList\r\n                    className='board-list-zone'\r\n                    setListRef={node => setItemRefAt(node, idx)}\r\n                    {...item.data}\r\n                  />\r\n                </li>\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <li key='placeholder'>\r\n                  <div\r\n                    ref={node => setItemRefAt(node, idx)}\r\n                    className='placeholder board-list-zone'\r\n                    style={{\r\n                      width: item.geometry && item.geometry.width,\r\n                      height: item.geometry && item.geometry.height,\r\n                    }}\r\n                  />\r\n                </li>\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n          {...addComponentUncontrollableProps}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import { useState } from 'react';\r\n\r\nfunction useUncontrollableProps(uncontrollableProps) {\r\n  return uncontrollableProps.reduce(\r\n    (props, { propName, changeHandlerName, defaultValue }) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const [value, setValue] = useState(defaultValue);\r\n      props[propName] = value;\r\n      props[changeHandlerName] = setValue;\r\n      return props;\r\n    },\r\n    {},\r\n  );\r\n}\r\n\r\nexport { useUncontrollableProps };\r\n","import React from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  return (\n    <DragDropManager>\n      <BoardContainer id={0} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: action.board,\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const updatedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = updatedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, newListIdx } = action;\r\n\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Destination board id does not match current board id');\r\n      }\r\n\r\n      const lastListIdx = state.board.lists.findIndex(\r\n        list => list.id === listId,\r\n      );\r\n      if (newListIdx === lastListIdx) {\r\n        return state;\r\n      }\r\n\r\n      const listToMove = state.board.lists[lastListIdx];\r\n      const updatedLists = [...state.board.lists];\r\n\r\n      updatedLists.splice(lastListIdx, 1);\r\n      updatedLists.splice(newListIdx, 0, listToMove);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const { listId, card } = action;\r\n\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === listId\r\n          ? {\r\n              ...list,\r\n              cards: list.cards.concat(card),\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      const { boardId, list } = action;\r\n\r\n      if (state.board.id !== boardId) {\r\n        console.error('Board id does not match current board id');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: state.board.lists.concat(list),\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: {\r\n    text: 'Проект «Канбан Доска»',\r\n    color: 'white',\r\n  },\r\n  background: {\r\n    type: 'img',\r\n    color: 'rgba(252,223,161,0.91)',\r\n    url:\r\n      'https://cdn.dribbble.com/users/58661/screenshots/1818073/csc_pattern.png',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать реалистичную анимацию захвата карточки\\n' +\r\n            '( в зависимости от места захвата поворачивать карточку на разный угол, ' +\r\n            'при падении карточки плавно анимировать её разворот в исходное положение :))\\n',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность редактировать карточки / колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность удалять карточки / колонки',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать функцию перемещения доступной и на мобильных устройствах',\r\n        },\r\n\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'После проста клика не инцииировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'По правому и среднему клику мыши не инициировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выделять плейсхолдер для перетаскиваемой колонки цветом',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Гибкая drag drop system',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Позволить droppable объекту иметь несколько accepted draggable types',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Устранить мельтешение карточки с мешьшим по размеру плейсхолдером',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Позволить перетаскиваемому объекту сдвигать скроллбар',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Устранить text overflow проблему',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'При открытии формы создания новой карточки передвигать её в зону видимости',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать карточки и листы доступными для клавиатуры',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Запретить создание пустых или наполненных только пробелами и переносами строк карточек/колонок',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import { uniqueId } from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const newCard = {\r\n    id: uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card: newCard };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const newList = {\r\n    id: uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list: newList };\r\n}\r\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}