{"version":3,"sources":["drag-drop/internal/DragDropContext.js","drag-drop/DragDropManager.js","drag-drop/useDraggable.js","constants.js","ducks/board/action-types.js","ducks/board/actions.js","helpers/moveTo.js","components/Card/Card.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","helpers/scrollbar.js","drag-drop/useDroppableList.js","helpers/lowerBound.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","droppable","_this","id","_ref","dragHandle","draggable","Object","objectWithoutProperties","handle","current","onPointerDown","event","clientX","clientY","grabDraggable","objectSpread","grabPosition","x","y","stopPropagation","addEventListener","removeEventListener","_ref2","context","type","node","renderElement","onRelease","draggedObjectRect","getBoundingClientRect","geometry","width","height","grabShift","left","top","position","dndContext","manageDroppables","setState","document","moveDraggable","releaseDraggable","newPosition","scrollIfOutOfClient","currentDraggedObject","currentHoveredDroppable","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","style","visibility","element","elementFromPoint","closest","concat","setDraggedObjectRef","draggedObjectNode","scrollbarContainer","this","props","mainScrollbarContainer","clientWidth","scrollBy","innerHeight","clientLeft","clientTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","react_default","a","createElement","Fragment","clientPosition","draggedObjectRef","internal_DragDropContext","Provider","value","Component","useDraggable","useContext","useEffect","DRAGGABLE_TYPE","CARD","LIST","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","moveTo","Card","content","setCardRef","moveCardToList","className","cardRef","useRef","ref","classNames","_ref3","index","defaultProps","mapDispatchToProps","cardId","destinationListId","indexInList","connect","AddComponent","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","_useState","useState","_useState2","slicedToArray","isCreationMode","setCreationMode","_useState3","_useState4","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","handleOpen","addComponentId","seed","uniqueId","_","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","onClick","autoFocus","placeholder","onChange","SCROLLBAR_DIRECTION","HORIZONTAL","VERTICAL","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","useDroppableList","acceptedType","listType","items","scrollStep","scrollOffset","placeholderIndex","setPlaceholderIndex","placeholderGeometry","setPlaceholderGeometry","itemRefs","listBodyRef","scrollToStartPosition","scrollToEndPosition","scrollbarDirection","listHasScrollbar","scrollWidth","scrollHeight","clientHeight","hasScrollbar","isHorizontal","listBodyRect","right","bottom","setItemRefAt","item","idx","draggableCenter","array","predicate","leftIdx","rightIdx","length","middleIdx","Math","floor","lowerBound","itemRect","itemCenter","scrollListIfNeeded","console","log","scrollLeft","scrollTop","_useDroppable","_useContext","droppableClassName","useDroppable","listItems","map","data","splice","enrichWithPlaceholder","itemToIgnoreId","filter","CardList","name","cards","addCard","setListRef","moveList","_useDroppableList","dragHandleNode","listNode","Boolean","components_Card_Card","assign","key","components_AddComponent_AddComponent","bind","_ITEM_TYPE$REGULAR_IT","defineProperty","destinationBoardId","indexInBoard","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","useMemo","backgroundSize","useBoardStyle","components_CardList_CardList","fetchBoard","rest","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","modifiedLists","found","find","dstList","lastIdx","findIndex","movedList","idxToRemoveAt","toConsumableArray","updatedLists","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.7ad41ae6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","import React from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {};\r\n  };\r\n\r\n  registerDraggable = ({ dragHandle, ...draggable }) => {\r\n    const handle = dragHandle.current;\r\n\r\n    const onPointerDown = event => {\r\n      const { clientX, clientY } = event;\r\n\r\n      this.grabDraggable({\r\n        grabPosition: {\r\n          x: clientX,\r\n          y: clientY,\r\n        },\r\n        handle,\r\n        ...draggable,\r\n      });\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    handle.addEventListener('pointerdown', onPointerDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('pointerdown', onPointerDown);\r\n    };\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabPosition,\r\n    context,\r\n    type,\r\n    node,\r\n    handle,\r\n    renderElement,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = node.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderElement,\r\n      handle,\r\n      onRelease,\r\n      geometry: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n        grabShift: {\r\n          x: draggedObjectRect.left - grabPosition.x,\r\n          y: draggedObjectRect.top - grabPosition.y,\r\n        },\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('pointermove', this.moveDraggable);\r\n        document.addEventListener('pointerup', this.releaseDraggable);\r\n      },\r\n    );\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { geometry } = this.draggedObject;\r\n\r\n    const newPosition = {\r\n      x: clientX + geometry.grabShift.x,\r\n      y: clientY + geometry.grabShift.y,\r\n    };\r\n    this.draggedObject.position = newPosition;\r\n\r\n    this.scrollIfOutOfClient({ x: clientX, y: clientY });\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n  };\r\n\r\n  scrollIfOutOfClient(position) {\r\n    const {\r\n      mainScrollbarContainer: { current: scrollbarContainer },\r\n    } = this.props;\r\n\r\n    if (position.x >= scrollbarContainer.clientWidth - 50) {\r\n      scrollbarContainer.scrollBy(10, 0);\r\n    }\r\n\r\n    if (position.y >= scrollbarContainer.innerHeight - 50) {\r\n      scrollbarContainer.scrollBy(0, 20);\r\n    }\r\n\r\n    if (position.x <= scrollbarContainer.clientLeft - 50) {\r\n      scrollbarContainer.scrollBy(-20, 0);\r\n    }\r\n\r\n    if (position.y <= scrollbarContainer.clientTop - 50) {\r\n      scrollbarContainer.scrollBy(0, -20);\r\n    }\r\n  }\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('pointermove', this.moveDraggable);\r\n    document.removeEventListener('pointerup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, geometry } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + geometry.width / 2,\r\n      y: position.y + geometry.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'hidden';\r\n    }\r\n    const element = document.elementFromPoint(position.x, position.y);\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'visible';\r\n    }\r\n\r\n    if (element == null) {\r\n      return null;\r\n    }\r\n\r\n    return element.closest(`.droppable-${this.draggedObject.type}`);\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderElement({\r\n            clientPosition: draggedObjectPosition,\r\n            draggedObjectRef: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropManager;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable(draggable) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable(draggable);\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    draggable.context,\r\n    draggable.type,\r\n    draggable.node,\r\n    draggable.dragHandle,\r\n    draggable.renderElement,\r\n    draggable.onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nexport { DRAGGABLE_TYPE };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, indexInBoard) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    indexInBoard,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","export function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    node: cardRef,\r\n    dragHandle: cardRef,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        ref={draggedObjectRef}\r\n        className={classNames('card', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <h4 className='card-content'>{content}</h4>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <li id={id} ref={setRefs} className={classNames('card', className)}>\r\n      <h4 className='card-content'>{content}</h4>\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n}) {\r\n  const [isCreationMode, setCreationMode] = useState(false);\r\n\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    setCreationMode(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    if (!content) return;\r\n\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const textarea = useRef(null);\r\n  const handleOpen = useCallback(() => {\r\n    setCreationMode(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    setCreationMode(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    if (isCreationMode) {\r\n      formRef.current.scrollIntoView();\r\n    }\r\n  }, [isCreationMode]);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n    >\r\n      <button\r\n        className={classNames(\r\n          'open-component-composer-btn',\r\n          isCreationMode&& 'hidden',\r\n        )}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        ref={node => (formRef.current = node)}\r\n        className={classNames('form', formClassName, !isCreationMode&& 'hidden')}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='component-content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='form-controls'>\r\n          <button className='add-component-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button className='close-btn' onClick={handleClose} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  formClassName: '',\r\n  className: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const uniqueId = useRef(null);\r\n  useEffect(() => {\r\n    uniqueId.current = _.uniqueId(seed);\r\n  }, [seed]);\r\n  return uniqueId.current;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('pointerdown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('pointerdown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","const SCROLLBAR_DIRECTION = {\r\n  HORIZONTAL: 0,\r\n  VERTICAL: 1,\r\n};\r\n\r\nfunction hasScrollbar(element, scrollbarDirection) {\r\n  return scrollbarDirection === SCROLLBAR_DIRECTION.HORIZONTAL\r\n    ? element.scrollWidth > element.clientWidth\r\n    : element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nexport { hasScrollbar, SCROLLBAR_DIRECTION };\r\n","import { useEffect, useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { lowerBound } from '../helpers/lowerBound';\r\nimport { hasScrollbar, SCROLLBAR_DIRECTION } from '../helpers/scrollbar';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction enrichWithPlaceholder(items, placeholderIndex, placeholderGeometry) {\r\n  const listItems = items.map(item => ({\r\n    type: ITEM_TYPE.REGULAR_ITEM,\r\n    data: item,\r\n  }));\r\n\r\n  const shouldShowPlaceholder = placeholderIndex !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems.splice(placeholderIndex, 0, {\r\n      type: ITEM_TYPE.PLACEHOLDER,\r\n      index: placeholderIndex,\r\n      geometry: placeholderGeometry,\r\n    });\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({\r\n  id,\r\n  acceptedType,\r\n  listType,\r\n  items,\r\n  scrollStep,\r\n  scrollOffset,\r\n}) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n\r\n  const context = useRef({ id, index: null });\r\n  const itemRefs = useRef([]);\r\n  const listBodyRef = useRef(null);\r\n\r\n  const scrollToStartPosition = useRef(null);\r\n  const scrollToEndPosition = useRef(null);\r\n\r\n  const scrollbarDirection =\r\n    listType === LIST_TYPE.HORIZONTAL\r\n      ? SCROLLBAR_DIRECTION.HORIZONTAL\r\n      : SCROLLBAR_DIRECTION.VERTICAL;\r\n\r\n  const listHasScrollbar = useRef(false);\r\n\r\n  useEffect(() => {\r\n    listHasScrollbar.current =\r\n      listBodyRef.current &&\r\n      hasScrollbar(listBodyRef.current, scrollbarDirection);\r\n\r\n    if (!listHasScrollbar.current) return;\r\n\r\n    const isHorizontal = listType === LIST_TYPE.HORIZONTAL;\r\n    const listBodyRect =\r\n      listBodyRef.current && listBodyRef.current.getBoundingClientRect();\r\n\r\n    scrollToStartPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.left + scrollOffset\r\n      : listBodyRect && listBodyRect.top + scrollOffset;\r\n    scrollToEndPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.right - scrollOffset\r\n      : listBodyRect && listBodyRect.bottom - scrollOffset;\r\n  }, [listHasScrollbar]);\r\n\r\n  const setItemRefAt = useCallback((item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemRefs.current[idx] = item;\r\n  }, []);\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setPlaceholderGeometry({\r\n      width: draggable.geometry.width,\r\n      height: draggable.geometry.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.geometry.width / 2,\r\n        y: draggable.position.y + draggable.geometry.height / 2,\r\n      };\r\n\r\n      let placeholderIndex = lowerBound(itemRefs.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n\r\n        const itemCenter = {\r\n          x: itemRect.left + itemRect.width / 2,\r\n          y: itemRect.top + itemRect.height / 2,\r\n        };\r\n        return listType === LIST_TYPE.HORIZONTAL\r\n          ? draggableCenter.x <= itemCenter.x\r\n          : draggableCenter.y <= itemCenter.y;\r\n      });\r\n\r\n      if (listHasScrollbar.current) {\r\n        scrollListIfNeeded(draggableCenter);\r\n      }\r\n\r\n      placeholderIndex =\r\n        placeholderIndex !== null ? placeholderIndex : itemRefs.current.length;\r\n\r\n      context.current.index = placeholderIndex;\r\n      setPlaceholderIndex(placeholderIndex);\r\n    },\r\n    [listType, listHasScrollbar],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    context.current.index = null;\r\n  }, []);\r\n\r\n  const scrollListIfNeeded = useCallback(\r\n    draggableCenter => {\r\n      if (id === '1')\r\n        console.log(\r\n          'scrollToStartPosition.current in  in useDroppableList: ',\r\n          scrollToStartPosition.current,\r\n        );\r\n      switch (listType) {\r\n        case LIST_TYPE.HORIZONTAL: {\r\n          if (draggableCenter.x <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollLeft -= scrollStep;\r\n          } else if (draggableCenter.x >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollLeft += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n        case LIST_TYPE.VERTICAL: {\r\n          if (draggableCenter.y <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollTop -= scrollStep;\r\n          } else if (draggableCenter.y >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollTop += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    [\r\n      listType,\r\n      listBodyRef,\r\n      scrollStep,\r\n      scrollToStartPosition,\r\n      scrollToEndPosition,\r\n    ],\r\n  );\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: context.current,\r\n    acceptedType,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  let listItems = enrichWithPlaceholder(\r\n    items,\r\n    placeholderIndex,\r\n    placeholderGeometry,\r\n  );\r\n\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  if (itemToIgnoreId) {\r\n    listItems = listItems.filter(\r\n      item =>\r\n        item.type === ITEM_TYPE.PLACEHOLDER || item.data.id !== itemToIgnoreId,\r\n    );\r\n  }\r\n  return {\r\n    listItems,\r\n    setItemRefAt,\r\n    listBodyRef,\r\n    droppableClassName,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","/**\r\n * Return index of first element of array, for which predicate returns false\r\n */\r\nfunction lowerBound(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      rightIdx = middleIdx - 1;\r\n    } else {\r\n      leftIdx = middleIdx + 1;\r\n    }\r\n  }\r\n\r\n  return leftIdx < array.length ? leftIdx : null;\r\n}\r\n\r\nexport { lowerBound };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable(droppable) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable(droppable);\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    droppable.id,\r\n    droppable.context,\r\n    droppable.node,\r\n    droppable.acceptedType,\r\n    droppable.onDraggableEnter,\r\n    droppable.onDraggableHover,\r\n    droppable.onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: `droppable-${droppable.acceptedType}`,\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const {\r\n    listBodyRef,\r\n    setItemRefAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedType: DRAGGABLE_TYPE.CARD,\r\n    items: cards,\r\n    scrollStep: 20,\r\n    scrollOffset: 30,\r\n  });\r\n\r\n  const dragHandleNode = useRef(null);\r\n  const listNode = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    node: listNode,\r\n    dragHandle: dragHandleNode,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        id={id}\r\n        ref={draggedObjectRef}\r\n        className={classNames('card-list', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <header>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {Boolean(listItems.length) && (\r\n          <ul className='list-cards'>\r\n            {listItems.map((item, idx) => (\r\n              <Card\r\n                key={item.data.id}\r\n                {...item.data}\r\n                className='list-card'\r\n                setCardRef={node => setItemRefAt(node, idx)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <footer>\r\n          <AddComponent\r\n            className='add-card-btn'\r\n            openCreationFormBtnText='Добавить ещё одну карточку'\r\n            placeholderFormText='Введите название карточки'\r\n            submitFormBtnText='Добавить карточку'\r\n            onAdd={addCard.bind(null, id)}\r\n          />\r\n        </footer>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listNode.current = node;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card-list', droppableClassName, className)}\r\n    >\r\n      <header ref={dragHandleNode}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {Boolean(listItems.length) && (\r\n        <ul className='list-cards' ref={listBodyRef}>\r\n          {listItems.map(\r\n            (item, idx) =>\r\n              ({\r\n                [ITEM_TYPE.REGULAR_ITEM]: (\r\n                  <Card\r\n                    key={item.data && item.data.id}\r\n                    {...item.data}\r\n                    className='list-card'\r\n                    setCardRef={node => setItemRefAt(node, idx)}\r\n                  />\r\n                ),\r\n                [ITEM_TYPE.PLACEHOLDER]: (\r\n                  <li\r\n                    key='placeholder'\r\n                    ref={node => setItemRefAt(node, idx)}\r\n                    className='placeholder list-card'\r\n                    style={{\r\n                      width: item.geometry && item.geometry.width,\r\n                      height: item.geometry && item.geometry.height,\r\n                    }}\r\n                  />\r\n                ),\r\n              }[item.type]),\r\n          )}\r\n        </ul>\r\n      )}\r\n      <footer>\r\n        <AddComponent\r\n          className='add-card-btn'\r\n          openCreationFormBtnText='Добавить ещё одну карточку'\r\n          placeholderFormText='Введите название карточки'\r\n          submitFormBtnText='Добавить карточку'\r\n          onAdd={addCard.bind(null, id)}\r\n        />\r\n      </footer>\r\n    </li>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, lists, addList, scrollbarContainer }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const {\r\n    listBodyRef,\r\n    setItemRefAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedType: DRAGGABLE_TYPE.LIST,\r\n    items: lists,\r\n    scrollOffset: 100,\r\n    scrollStep: 50,\r\n  });\r\n\r\n  const setRefs = node => {\r\n    scrollbarContainer.current = node;\r\n    listBodyRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n    >\r\n      <ul ref={setRefs} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <CardList\r\n                  key={item.data && item.data.id}\r\n                  className='board-list'\r\n                  setListRef={node => setItemRefAt(node, idx)}\r\n                  {...item.data}\r\n                />\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <div\r\n                  key='placeholder'\r\n                  ref={node => setItemRefAt(node, idx)}\r\n                  className='placeholder board-list'\r\n                  style={{\r\n                    width: item.geometry && item.geometry.width,\r\n                    height: item.geometry && item.geometry.height,\r\n                  }}\r\n                />\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import React, { useRef } from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  const mainScrollbarContainer = useRef(null);\n  return (\n    <DragDropManager mainScrollbarContainer={mainScrollbarContainer}>\n      <BoardContainer id={0} scrollbarContainer={mainScrollbarContainer} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          id: action.board.id,\r\n          name: action.board.name,\r\n          lists: action.board.lists,\r\n          background: action.board.background,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const modifiedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = modifiedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, indexInBoard } = action;\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Board destination id does not match current board id');\r\n      }\r\n\r\n      const lastIdx = state.board.lists.findIndex(list => list.id === listId);\r\n      if (indexInBoard === lastIdx) {\r\n        return state;\r\n      }\r\n\r\n      const movedList = state.board.lists[lastIdx];\r\n      const idxToRemoveAt = lastIdx + (indexInBoard < lastIdx ? 1 : 0);\r\n\r\n      const modifiedLists = [...state.board.lists];\r\n\r\n      modifiedLists.splice(indexInBoard, 0, movedList);\r\n      modifiedLists.splice(idxToRemoveAt, 1);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === action.listId\r\n          ? {\r\n              ...list,\r\n              cards: [...list.cards, action.card],\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, action.list],\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: 'Kanban-Board',\r\n  background: {\r\n    type: 'img',\r\n    url:\r\n      'https://images.unsplash.com/photo-1508625935447-e0ebc2cdf6bf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Пройти курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отметить день рождения',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться на курсы английского, чтобы уехать жить в Лондон',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд своего сайта на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Собрать портфолио',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать первую статью в блог',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться в мотошколу. Хотя немного страшновато, конечно. Друзья и родители против, но очень хочется. Но кого я обманываю, уже 2 года решаюсь на этот шаг 😢 Еще и друзья будут хрустиком называть. В общем, хотя бы подумать над этим.',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нет, я серьезный человек, иду в мотошколу. Записываюсь!',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выспаться',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Посмотреть игру престолов',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Научиться рисовать',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать уборку',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться в тренажерный зал',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Купить обогреватель',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать To-Do app',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отложить 2000 рублей',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нарисовать мотивационный плакат «Магии нет»',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться на курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Забронировать тир на субботу',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Накидать тем для статей в блог',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import _ from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const card = {\r\n    id: _.uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const list = {\r\n    id: _.uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list };\r\n}","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}