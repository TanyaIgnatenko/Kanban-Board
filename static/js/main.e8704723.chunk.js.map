{"version":3,"sources":["drag-drop/internal/DragDropContext.js","helpers/scrollbar.js","constants.js","drag-drop/DragDropManager.js","helpers/visibility.js","helpers/inside.js","helpers/moveTo.js","helpers/grabAt.js","components/Card/CardAvatar.js","drag-drop/useDraggable.js","ducks/board/action-types.js","ducks/board/actions.js","components/Card/Card.js","components/CardList/CardListAvatar.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","drag-drop/useScrollable.js","drag-drop/useDroppableList.js","helpers/binaryLastIndexOf.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","hooks/uncontrollable.js","hooks/scrollByShift.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","registerScrollable","hasVerticalScrollbar","element","scrollHeight","clientHeight","hasHorizontalScrollbar","scrollWidth","clientWidth","DRAGGABLE_TYPE","CARD","LIST","MOVEMENT","MOUSE_BUTTON","DragDropManager","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","draggedObjectPosition","hoveredDroppable","droppables","scrollables","scrollable","id","droppable","_ref","dragHandleRef","draggable","_objectWithoutProperties","_excluded","handle","current","onPointerDown","event","which","grabPosition","x","clientX","y","clientY","draggedObjectRect","ref","getBoundingClientRect","grabShift","left","top","bindedStartDragIfMove","startDragIfMove","_objectSpread","document","addEventListener","resetPreparationToDrag","stopPropagation","removeEventListener","newX","newY","Math","abs","grabDraggable","_ref2","context","type","renderAvatar","onGrab","onMove","onRelease","dimensions","width","height","position","movement","dndContext","manageDroppables","setState","moveDraggable","releaseDraggable","movementX","movementY","currentDraggedObject","currentHoveredDroppable","newPosition","push","scrollIfNedeed","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","node","style","visibility","hideElement","elementFromPoint","showElement","closest","acceptedTypes","includes","parentNode","console","warn","setDraggedObjectRef","draggedObjectNode","_createClass","key","value","cursorPosition","_this2","Object","values","this","forEach","scrollStep","scrollPointOffset","scrolledByTypes","scrollableNode","point","elementRect","right","bottom","inside","clientLeft","scrollLeft","clientTop","scrollTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","props","_jsxs","_Fragment","clientPosition","grabPoint","_jsx","Provider","Component","moveTo","grabAt","transformOrigin","transform","CardAvatar","content","cardAvatarRef","className","_useState","useState","_useState2","_slicedToArray","rotationStyle","setRotationStyle","applyGrabAnimation","useCallback","removeGrabAnimation","useEffect","setTimeout","classNames","assign","defaultProps","useDraggable","_ref$onGrab","_ref$onMove","_ref$onRelease","useContext","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","Card","setCardRef","moveCardToList","cardRef","useRef","_ref3","placeholderIndex","tabIndex","mapDispatchToProps","cardId","destinationListId","indexInList","connect","CardListAvatar","name","cardListAvatarRef","scrollableRef","listItems","setItemRefAt","addCardComponent","isCardFormOpened","Boolean","map","item","idx","data","AddComponent","isFormOpened","onFormOpenedChange","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","setContent","handleContentChange","target","handleClose","handleAdd","trim","handleOpen","addComponentId","seed","setUniqueId","uniqueId","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","hidden","onClick","autoFocus","placeholder","onChange","useScrollable","_ref$scrollPointOffse","_ref$scrollStep","_ref$scrolledByTypes","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","HORIZONTAL","VERTICAL","makeListItems","items","itemToIgnoreId","filter","splice","enrichWithPlaceholder","useDroppableList","listType","setPlaceholderIndex","_useState3","_useState4","placeholderGeometry","setPlaceholderGeometry","_useState5","_useState6","isHoveredByDraggable","setIsHoveredByDraggable","contextRef","itemsRef","draggableCenter","placeholderIdx","array","predicate","leftIdx","rightIdx","middleIdx","floor","binaryLastIndexOf","itemRect","extra","_useDroppable","_useContext","droppableClassName","useDroppable","CardList","cards","addCard","setListRef","moveList","useMemo","_useDroppableList","listRef","setIsCardFormOpened","bind","_ITEM_TYPE$REGULAR_IT","_defineProperty","destinationBoardId","newListIdx","selectBoard","Board","lists","addList","addComponentUncontrollableProps","propName","changeHandlerName","defaultValue","reduce","setValue","onScrollablePointerDown","scroll","finishScroll","useScrollByShift","color","text","fetchBoard","rest","App","BoardContainer","initialState","rootReducer","combineReducers","undefined","action","cardToMove","updatedLists","found","find","dstList","lastListIdx","findIndex","listToMove","_toConsumableArray","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","services","sent","put","t0","stop","_callee2","newCardInfo","_context2","_callee3","newListInfo","_context3","_context4","all","takeLatest","_marked","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"oVASeA,EAPSC,IAAMC,cAAc,CAC1CC,cAAe,KACfC,kBAAmB,WAAO,EAC1BC,kBAAmB,WAAO,EAC1BC,mBAAoB,WAAO,ICN7B,SAASC,EAAqBC,GAC5B,OAAOA,EAAQC,aAAeD,EAAQE,YACxC,CAEA,SAASC,EAAuBH,GAC9B,OAAOA,EAAQI,YAAcJ,EAAQK,WACvC,CCNA,IAAMC,EAAiB,CACrBC,KAAM,OACNC,KAAM,QAGFC,EACI,SADJA,EAEC,MAFDA,EAGG,QAHHA,EAIE,OAGFC,EACE,E,+BCCFC,EAAe,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA0SjB,OA1SiBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACnBM,MAAQ,CACNC,sBAAuB,MACxBZ,EAEDrB,cAAgB,KAAIqB,EACpBa,iBAAmB,KAAIb,EACvBc,WAAa,CAAC,EAACd,EACfe,YAAc,CAAC,EAACf,EAEhBlB,mBAAqB,SAAAkC,GAEnB,OADAhB,EAAKe,YAAYC,EAAWC,IAAMD,EAC3B,kBACEhB,EAAKe,YAAYC,EAAWC,GACrC,CACF,EAACjB,EAEDnB,kBAAoB,SAAAqC,GAElB,OADAlB,EAAKc,WAAWI,EAAUD,IAAMC,EACzB,kBACElB,EAAKc,WAAWI,EAAUD,GACnC,CACF,EAACjB,EAEDpB,kBAAoB,SAAAuC,GAAsC,IAAnCC,EAAaD,EAAbC,cAAkBC,EAASC,YAAAH,EAAAI,GAC1CC,EAASJ,EAAcK,QAEvBC,EAAgB,SAAAC,GAEpB,GAD+BA,EAAvBC,QACYlC,EAApB,CAEA,IACMmC,EAAe,CACnBC,EAF2BH,EAArBI,QAGNC,EAH2BL,EAAZM,SAKXC,EAAoBb,EAAUc,IAAIV,QAAQW,wBAC1CC,EAAY,CAChBP,EAAGD,EAAaC,EAAII,EAAkBI,KACtCN,EAAGH,EAAaG,EAAIE,EAAkBK,KAGxCvC,EAAKwC,sBAAwB,SAAAb,GAAK,OAChC3B,EAAKyC,gBAAeC,YAAC,CACjBlB,UAAWH,GACbQ,EACAQ,EACAV,EACA,EAEJgB,SAASC,iBAAiB,cAAe5C,EAAKwC,uBAC9CG,SAASC,iBAAiB,YAAa5C,EAAK6C,wBAE5ClB,EAAMmB,iBAxBuC,CAyB/C,EAIA,OAFAtB,EAAOoB,iBAAiB,cAAelB,GAEhC,WACLF,EAAOuB,oBAAoB,cAAerB,EAC5C,CACF,EAAC1B,EAEDyC,gBAAkB,SAACpB,EAAWQ,EAAcQ,EAAWV,GACrD,IAAiBqB,EAAwBrB,EAAjCI,QAAwBkB,EAAStB,EAAlBM,SAGrBiB,KAAKC,IAAIH,EAAOnB,EAAaC,GAAK,GAClCoB,KAAKC,IAAIF,EAAOpB,EAAaG,GAAK,KAElCW,SAASI,oBAAoB,cAAe/C,EAAKwC,uBACjDG,SAASI,oBAAoB,YAAa/C,EAAK6C,wBAE/C7C,EAAKoD,cAAaV,YAAC,CACjBL,aACGhB,IAGT,EAACrB,EAED6C,uBAAyB,WACvBF,SAASI,oBAAoB,cAAe/C,EAAKwC,uBACjDG,SAASI,oBAAoB,YAAa/C,EAAK6C,uBACjD,EAAC7C,EAEDoD,cAAgB,SAAAC,GAUT,IATLhB,EAASgB,EAAThB,UACAiB,EAAOD,EAAPC,QACAC,EAAIF,EAAJE,KACApB,EAAGkB,EAAHlB,IACAX,EAAM6B,EAAN7B,OACAgC,EAAYH,EAAZG,aACAC,EAAMJ,EAANI,OACAC,EAAML,EAANK,OACAC,EAASN,EAATM,UAEMzB,EAAoBC,EAAIV,QAAQW,wBAEtCpC,EAAKrB,cAAgB,CACnB2E,UACAC,OACAC,eACAhC,SACAiC,SACAC,SACAC,YACAtB,YACAuB,WAAY,CACVC,MAAO3B,EAAkB2B,MACzBC,OAAQ5B,EAAkB4B,QAE5BC,SAAU,CACRjC,EAAGI,EAAkBI,KACrBN,EAAGE,EAAkBK,KAEvByB,SAAU,IAGZhE,EAAKiE,WAAWtF,cAAgBqB,EAAKrB,cAErCqB,EAAKkE,mBAELlE,EAAKmE,SACH,CACEvD,sBAAuBZ,EAAKrB,cAAcoF,WAE5C,WACEpB,SAASC,iBAAiB,cAAe5C,EAAKoE,eAC9CzB,SAASC,iBAAiB,YAAa5C,EAAKqE,iBAC9C,IAGFrE,EAAKrB,cAAc8E,QACrB,EAACzD,EAEDiE,WAAa,CACXtF,cAAe,KACfC,kBAAmBoB,EAAKpB,kBACxBC,kBAAmBmB,EAAKnB,kBACxBC,mBAAoBkB,EAAKlB,oBAC1BkB,EAEDoE,cAAgB,SAAAzC,GACd,IAAQI,EAAqBJ,EAArBI,QAASE,EAAYN,EAAZM,QACTqC,EAAyB3C,EAAzB2C,UAAWC,EAAc5C,EAAd4C,UACXlC,EAAcrC,EAAKrB,cAAnB0D,UACFmC,EAAuBxE,EAAKrB,cAC5B8F,EAA0BzE,EAAKa,iBAE/B6D,EAAc,CAClB5C,EAAGC,EAAUM,EAAUP,EACvBE,EAAGC,EAAUI,EAAUL,GAEzBwC,EAAqBT,SAAWW,EAEhC,IAAMV,EAAW,GACbM,GACFN,EAASW,KAAKL,EAAY,EAAI7E,EAAiBA,GAE7C8E,GACFP,EAASW,KAAKJ,EAAY,EAAI9E,EAAkBA,GAElD+E,EAAqBR,SAAWA,EAEhChE,EAAK4E,eAAe,CAAE9C,EAAGC,EAASC,EAAGC,IAErCjC,EAAKkE,mBAELlE,EAAKmE,SAAS,CAAEvD,sBAAuB8D,IAEvCF,EAAqBd,OAAO,CAC1BmB,iBAAkBL,EAAqBlB,QACvCwB,iBAAkBL,EAAwBnB,SAE9C,EAACtD,EAwCDqE,iBAAmB,WACjB,IAAMG,EAAuBxE,EAAKrB,cAC5B8F,EAA0BzE,EAAKa,iBAErC8B,SAASI,oBAAoB,cAAe/C,EAAKoE,eACjDzB,SAASI,oBAAoB,YAAa/C,EAAKqE,kBAE/CrE,EAAKrB,cAAgB,KACrBqB,EAAKa,iBAAmB,KACxBb,EAAKiE,WAAWtF,cAAgB,KAChCqB,EAAKmE,SAAS,CACZvD,sBAAuB,OAGzB4D,EAAqBb,UAAU,CAC7BkB,iBAAkBL,EAAqBlB,QACvCwB,iBAAkBL,EAAwBnB,UAE5CmB,EAAwBM,kBAC1B,EAAC/E,EA4BDgF,cAAgB,SAAAjB,GACd,IAAMkB,EAAcjF,EAAKrB,cAAcuG,MCpR3C,SAAqBlG,GACfA,IACFA,EAAQmG,MAAMC,WAAa,SAE/B,CDkRIC,CAAYJ,GACZ,IAAIjG,EAAU2D,SAAS2C,iBAAiBvB,EAASjC,EAAGiC,EAAS/B,GAG7D,KCpRJ,SAAqBhD,GACfA,IACFA,EAAQmG,MAAMC,WAAa,UAE/B,CD8QIG,CAAYN,GAELjG,GAAS,CACd,IAAMkC,EAAYlC,EAAQwG,QAAQ,cAElC,IAAKtE,EAAW,OAAO,KAEvB,GAAKlB,EAAKc,WAAWI,EAAUD,IAA/B,CAOA,GACEjB,EAAKc,WAAWI,EAAUD,IAAIwE,cAAcC,SAC1C1F,EAAKrB,cAAc4E,MAGrB,OAAOrC,EAGTlC,EAAUkC,EAAUyE,UAVpB,MAJEC,QAAQC,KAAK,kCAAmC3E,EAAUD,IAE1DjC,EAAUkC,EAAUyE,UAaxB,CAEA,OAAO,IACT,EAAC3F,EAED8F,oBAAsB,SAAAC,GAChB/F,EAAKrB,gBACPqB,EAAKrB,cAAcuG,KAAOa,EAE9B,EAAC/F,CAAC,CAqBD,OArBAgG,YAAArG,EAAA,EAAAsG,IAAA,iBAAAC,MA1HD,SAAeC,GAAiB,IAADC,EAAA,KAC7BC,OAAOC,OAAOC,KAAKxF,aAAayF,SAAQ,SAAAxF,GACtC,IACEyF,EAIEzF,EAJFyF,WACAC,EAGE1F,EAHF0F,kBACAC,EAEE3F,EAFF2F,gBACgBC,EACd5F,EADFmB,IAAOV,QAGJmF,GAEAD,EAAgBjB,SAASU,EAAKzH,cAAc4E,OEzMvD,SAAgBsD,EAAO7H,GACrB,IAAM8H,EAAc9H,EAAQoD,wBAC5B,OACEyE,EAAM/E,GAAKgF,EAAYxE,MACvBuE,EAAM/E,GAAKgF,EAAYC,OACvBF,EAAM7E,GAAK8E,EAAYvE,KACvBsE,EAAM7E,GAAK8E,EAAYE,MAE3B,CFmMWC,CAAOd,EAAgBS,KAExBzH,EAAuByH,KACrBT,EAAerE,GAAK8E,EAAeM,WAAaR,EAClDE,EAAeO,YAAcV,EAE7BN,EAAerE,GACf8E,EAAevH,YAAcqH,IAE7BE,EAAeO,YAAcV,IAG7B1H,EAAqB6H,KACnBT,EAAenE,GAAK4E,EAAeQ,UAAYV,EACjDE,EAAeS,WAAaZ,EAE5BN,EAAenE,GACf4E,EAAe1H,aAAewH,IAE9BE,EAAeS,WAAaZ,IAGlC,GACF,GAAC,CAAAR,IAAA,mBAAAC,MAuBD,WACE,IAAAoB,EAAiCf,KAAK5H,cAA9BoF,EAAQuD,EAARvD,SAAUH,EAAU0D,EAAV1D,WAEZ2D,EAAgBhB,KAAK1F,iBACrB2G,EAAmBjB,KAAKvB,cAAc,CAC1ClD,EAAGiC,EAASjC,EAAI8B,EAAWC,MAAQ,EACnC7B,EAAG+B,EAAS/B,EAAI4B,EAAWE,OAAS,IAGjC0D,IAELjB,KAAK1F,iBAAmB0F,KAAKzF,WAAW0G,EAAiBvG,MAGtDsG,GAAiBC,EAAiBvG,KAAOsG,EAActG,MAGpDsG,GACFA,EAAcxC,mBAGhBwB,KAAK1F,iBAAiB4G,iBAAiBlB,KAAK5H,gBAE9C4H,KAAK1F,iBAAiB6G,iBAAiBnB,KAAK5H,eAC9C,GAAC,CAAAsH,IAAA,SAAAC,MAyCD,WACE,IAAQyB,EAAapB,KAAKqB,MAAlBD,SACA/G,EAA0B2F,KAAK5F,MAA/BC,sBACAjC,EAA8B4H,KAA9B5H,cAAesF,EAAesC,KAAftC,WAEvB,OACE4D,eAAAC,WAAA,CAAAH,SAAA,CACGhJ,GACCA,EAAc6E,aAAa,CACzBuE,eAAgBnH,EAChBoH,UAAWrJ,EAAc0D,UACzBuB,WAAYjF,EAAciF,WAC1BzB,IAAKoE,KAAKT,sBAEdmC,cAACzJ,EAAgB0J,SAAQ,CAAChC,MAAOjC,EAAW0D,SACzCA,MAIT,KAAChI,CAAA,CA/TkB,CAASlB,IAAM0J,WAsUrBxI,I,+BGpVf,SAASyI,EAAMjH,GAAY,IAATW,EAACX,EAADW,EAAGE,EAACb,EAADa,EACnB,MAAO,CACL+B,SAAU,QACVzB,KAAK,GAAD5B,OAAKoB,EAAC,MACVS,IAAI,GAAD7B,OAAKsB,EAAC,MAEb,CCGeqG,MAPf,WACE,MAAO,CACLC,gBAAiB,MACjBC,UAAW,mBAEf,ECAA,SAASC,EAAUrH,GAQf,IAPFF,EAAEE,EAAFF,GACAwH,EAAOtH,EAAPsH,QACAC,EAAavH,EAAbuH,cACAC,EAASxH,EAATwH,UACAX,EAAS7G,EAAT6G,UACApE,EAAUzC,EAAVyC,WACAmE,EAAc5G,EAAd4G,eAEAa,EAA0CC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAEhCI,EAAqBC,uBAAY,WACrC,IAAMH,EAAgBX,EAAOL,EAAWpE,GACxCqF,EAAiBD,EACnB,GAAG,IAEGI,EAAsBD,uBAAY,WACtCF,EAAiB,CAAC,EACpB,GAAG,IAQH,OANAI,qBAAU,WAGR,OAFAC,WAAWJ,EAAoB,GAExBE,CACT,GAAG,IAGDnB,cAAA,OACEhH,GAAIA,EACJkB,IAAKuG,EACLC,UAAWY,IAAW,OAAQ,UAAWZ,GACzCxD,MAAOkB,OAAOmD,OAAOpB,EAAOL,GAAiBiB,GAAerB,SAE5DM,cAAA,MAAIU,UAAU,eAAchB,SAAEc,KAGpC,CAsBAD,EAAWiB,aAAe,CACxBd,UAAW,IAGEH,QCjEf,SAASkB,EAAYvI,GASjB,IARFgB,EAAGhB,EAAHgB,IACAoB,EAAIpC,EAAJoC,KACAD,EAAOnC,EAAPmC,QACAlC,EAAaD,EAAbC,cACAoC,EAAYrC,EAAZqC,aAAYmG,EAAAxI,EACZsC,cAAM,IAAAkG,EAAG,WAAO,EAACA,EAAAC,EAAAzI,EACjBuC,cAAM,IAAAkG,EAAG,WAAO,EAACA,EAAAC,EAAA1I,EACjBwC,iBAAS,IAAAkG,EAAG,WAAO,EAACA,EAEZjL,EAAsBkL,qBAAWtL,GAAjCI,kBAERyK,qBAAU,WAYR,OAX4BzK,EAAkB,CAC5CuD,MACAoB,OACAD,UACAlC,gBACAoC,eACAC,SACAC,SACAC,aAIJ,GAAG,CACDxB,EACAoB,EACAD,EACAlC,EACAoC,EACAC,EACAC,EACAC,GAEJ,CCvCO,IAAMoG,EAAc,CACzBC,QAAS,8BACTC,QAAS,8BACTC,MAAO,6BAGIC,EACL,oBADKA,EAEL,oBAGKC,EAAW,CACtBJ,QAAS,2BACTC,QAAS,2BACTC,MAAO,0BAGIG,EAAW,CACtBL,QAAS,2BACTC,QAAS,2BACTC,MAAO,0BCXII,EAAoB,SAAAC,GAC/B,MAAO,CACLhH,KAAMwG,EAAYE,QAClBM,QAEJ,EAEaC,EAAkB,SAAAC,GAC7B,MAAO,CACLlH,KAAMwG,EAAYG,MAClBO,QAEJ,EA4BaC,EAAiB,SAACC,EAAQC,GACrC,MAAO,CACLrH,KAAM6G,EAASH,QACfU,SACAC,OAEJ,EAEaC,EAAe,SAAAJ,GAC1B,MAAO,CACLlH,KAAM6G,EAASF,MACfO,QAEJ,EAUaK,EAAiB,SAACC,EAASC,GACtC,MAAO,CACLzH,KAAM8G,EAASJ,QACfc,UACAC,OAEJ,EAEaC,EAAe,SAAAR,GAC1B,MAAO,CACLlH,KAAM8G,EAASH,MACfO,QAEJ,E,MCzEA,SAASS,EAAI/J,GAA0D,IAAvDF,EAAEE,EAAFF,GAAIwH,EAAOtH,EAAPsH,QAAS0C,EAAUhK,EAAVgK,WAAYC,EAAcjK,EAAdiK,eAAgBzC,EAASxH,EAATwH,UACjD0C,EAAUC,iBAAO,MAEvB5B,EAAa,CACXpG,QAAS,CACPrC,MAEFsC,KAAMjE,EAAeC,KACrB4C,IAAKkJ,EACLjK,cAAeiK,EACf7H,aAAc,SAAAH,GAAA,IAAG0E,EAAc1E,EAAd0E,eAAgBC,EAAS3E,EAAT2E,UAAWpE,EAAUP,EAAVO,WAAYzB,EAAGkB,EAAHlB,IAAG,OACzD8F,cAACO,EAAU,CACTvH,GAAIA,EACJyH,cAAevG,EACfsG,QAASA,EACTE,UAAWA,EACXX,UAAWA,EACXpE,WAAYA,EACZmE,eAAgBA,GAChB,EAEJpE,UAAW,SAAA4H,GAA6C,IAA1C1G,EAAgB0G,EAAhB1G,iBAAkBC,EAAgByG,EAAhBzG,iBAC9BsG,EACEvG,EAAiB5D,GACjB6D,EAAiB7D,GACjB6D,EAAiB0G,iBAErB,IAQF,OACEvD,cAAA,OACEhH,GAAIA,EACJkB,IARY,SAAA+C,GACdiG,EAAWjG,GACXmG,EAAQ5J,QAAUyD,CACpB,EAMIyD,UAAWY,IAAW,OAAQZ,GAC9B8C,SAAU,EAAE9D,SAEZM,cAAA,MAAIU,UAAU,eAAchB,SAAEc,KAGpC,CAUAyC,EAAKzB,aAAe,CAClBd,UAAW,IAGb,IAAM+C,EAAqB,CACzBN,eDjDsB,SAACO,EAAQC,EAAmBC,GAClD,MAAO,CACLtI,KAAM4G,EACNwB,SACAC,oBACAC,cAEJ,GC6CeC,cACb,KACAJ,EAFaI,CAGbZ,GCtEF,SAASa,EAAc5K,GAcnB,IAbFF,EAAEE,EAAFF,GACA+K,EAAI7K,EAAJ6K,KACAC,EAAiB9K,EAAjB8K,kBACA7K,EAAaD,EAAbC,cACA8K,EAAa/K,EAAb+K,cACAC,EAAShL,EAATgL,UACAC,EAAYjL,EAAZiL,aACAC,EAAgBlL,EAAhBkL,iBACAC,EAAgBnL,EAAhBmL,iBACAtE,EAAS7G,EAAT6G,UACApE,EAAUzC,EAAVyC,WACAmE,EAAc5G,EAAd4G,eACAY,EAASxH,EAATwH,UAEAC,EAA0CC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAQtC,OAPAO,qBAAU,WACR,IAAML,EAAgBX,EAAOL,EAAWpE,GACxC0F,YAAW,WACTL,EAAiBD,EACnB,GAAG,EACL,GAAG,IAGDnB,eAAA,OACE5G,GAAIA,EACJkB,IAAK8J,EACLtD,UAAWY,IAAW,YAAa,UAAWZ,GAC9CxD,MAAOkB,OAAOmD,OAAOpB,EAAOL,GAAiBiB,GAAerB,SAAA,CAE5DM,cAAA,UAAQ9F,IAAKf,EAAcuG,SACzBM,cAAA,MAAIU,UAAU,aAAYhB,SAAEqE,OAE5BO,QAAQJ,EAAU/L,SAAWkM,IAC7BzE,eAAA,MAAI1F,IAAK+J,EAAevD,UAAU,aAAYhB,SAAA,CAC3CwE,EAAUK,KAAI,SAACC,EAAMC,GAAG,OACvBzE,cAAA,MAAAN,SACEM,cAACiD,EAAIxI,wBAAA,GACC+J,EAAKE,MAAI,IACbxB,WAAY,SAAAjG,GAAI,OAAIkH,EAAalH,EAAMwH,EAAI,EAC3C/D,UAAU,gBAJL8D,EAAKE,KAAK1L,GAMd,IAENqL,GAAoBD,KAGzBpE,cAAA,UAAAN,UAAU2E,GAAoBD,MAGpC,CAuCAN,EAAetC,aAAe,CAC5Bd,UAAW,IAGEoD,Q,cC5Ff,SAASa,EAAYzL,GAUjB,IATF0L,EAAY1L,EAAZ0L,aACAC,EAAkB3L,EAAlB2L,mBACAC,EAAuB5L,EAAvB4L,wBACAC,EAAmB7L,EAAnB6L,oBACAC,EAAiB9L,EAAjB8L,kBACAC,EAAK/L,EAAL+L,MACAvE,EAASxH,EAATwH,UACAwE,EAAahM,EAAbgM,cACAhI,EAAKhE,EAALgE,MAEAyD,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCH,EAAOK,EAAA,GAAEsE,EAAUtE,EAAA,GACpBuE,EAAsBlE,uBAAY,SAAAxH,GACtC,IAAM8G,EAAU9G,EAAM2L,OAAOpH,MAC7BkH,EAAW3E,EACb,GAAG,IAEG8E,EAAcpE,uBAAY,WAC9BiE,EAAW,IACXN,GAAmB,EACrB,GAAG,IAEGU,EAAYrE,uBAAY,WACvBV,EAAQgF,SAEbP,EAAMzE,GACN8E,IACF,GAAG,CAAC9E,EAAS8E,EAAaL,IAEpBQ,EAAavE,uBAAY,WAC7B2D,GAAmB,EACrB,GAAG,IAEGa,ECvCD,SAAqBC,GAC1B,IAAAhF,EAA0BC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAjC3H,EAAE6H,EAAA,GAAE+E,EAAW/E,EAAA,GAItB,OAHAO,qBAAU,WACRwE,EAAYC,mBAASF,GACvB,GAAG,CAACA,IACG3M,CACT,CDiCyB8M,CAAY,kBExC9B,SAA2BC,EAAWC,GAC3C,IAAMC,EAAa/E,uBACjB,SAAAxH,IAC2BA,EAAM2L,OAAO9H,QAAQ,IAAD9E,OAAKsN,KAGhDC,GAEJ,GACA,CAACD,EAAWC,IAGd5E,qBAAU,WAGR,OAFA1G,SAASC,iBAAiB,cAAesL,GAElC,WACLvL,SAASI,oBAAoB,cAAemL,EAC9C,CACF,GAAG,CAACA,GACN,CFyBEC,CAAkBR,EAHYxE,uBAAY,WACxC2D,GAAmB,EACrB,GAAG,KAGH,IAAMsB,EAAU9C,iBAAO,MAOvB,OANAjC,qBAAU,WACJwD,GACFuB,EAAQ3M,QAAQ4M,gBAAe,EAEnC,GAAG,CAACxB,IAGFhF,eAAA,OACE5G,GAAI0M,EACJhF,UAAWY,IAAW,wBAAyBZ,GAC/CxD,MAAOA,EAAMwC,SAAA,CAEbM,cAAA,UACEU,UAAWY,IAAW,gBAAiB,CACrC+E,OAAQzB,IAEV0B,QAASb,EAAW/F,SAEpBM,cAAA,MAAAN,SAAKoF,MAEPlF,eAAA,OACE1F,IAAK,SAAA+C,GAAI,OAAKkJ,EAAQ3M,QAAUyD,CAAI,EACpCyD,UAAWY,IAAW,OAAQ4D,EAAe,CAC3CmB,QAASzB,IACRlF,SAAA,CAEHM,cAAA,YACEuG,WAAS,EACT7F,UAAU,UACVzC,MAAOuC,EACPgG,YAAazB,EACb0B,SAAUrB,IAEZxF,eAAA,OAAKc,UAAU,gBAAehB,SAAA,CAC5BM,cAAA,UAAQU,UAAU,UAAU4F,QAASf,EAAU7F,SAC5CsF,IAEHhF,cAAA,UACE,aAAW,QACXU,UAAU,YACV4F,QAAShB,YAMrB,CAaAX,EAAanD,aAAe,CAC1BoD,aAAc,KACdlE,UAAW,GACXwE,cAAe,IAGFP,SG/Gf,SAAS+B,GAAaxN,GAKlB,IAJFF,EAAEE,EAAFF,GAAE2N,EAAAzN,EACFuF,yBAAiB,IAAAkI,EAAG,EAACA,EAAAC,EAAA1N,EACrBsF,kBAAU,IAAAoI,EAAG,GAAEA,EAAAC,EAAA3N,EACfwF,uBAAe,IAAAmI,EAAG,GAAEA,EAEd5C,EAAgBZ,iBAAO,MAErBxM,EAAuBgL,qBAAWtL,GAAlCM,mBAcR,OAZAuK,qBAAU,WASR,OAR6BvK,EAAmB,CAC9CmC,KACAkB,IAAK+J,EACLvF,kBACAD,oBACAD,cAIJ,GAAG,CAACxF,EAAIwF,EAAYC,EAAmBC,IAEhCuF,CACT,CCrBA,IAAM6C,GAAY,CAChBC,YAAa,cACbC,aAAc,gBAGVC,GAAY,CAChBC,WAAY,aACZC,SAAU,YAGZ,SAASC,GAAcC,EAAOC,EAAgBd,GAC5C,IAAItC,EAAYmD,EACZA,EAAM9C,KAAI,SAAAC,GAAI,MAAK,CACjBlJ,KAAMwL,GAAUE,aAChBtC,KAAMF,EACP,IACD,GAYJ,OAV4C,OAAnB8C,IAEvBpD,EAAYA,EAAUqD,QAAO,SAAA/C,GAAI,OAAIA,EAAKE,KAAK1L,KAAOsO,CAAc,KAGP,OAAjCd,EAAYjD,mBAExCW,EAMJ,SAA+BA,EAAWsC,GAMxC,OALAtC,EAAUsD,OAAOhB,EAAYjD,iBAAkB,EAAG,CAChDjI,KAAMwL,GAAUC,YAChBxD,iBAAkBiD,EAAYjD,iBAC9B5H,WAAY6K,EAAY7K,aAEnBuI,CACT,CAbgBuD,CAAsBvD,EAAWsC,IAGxCtC,CACT,CAWA,SAASwD,GAAgBxO,GAA0C,IAAvCF,EAAEE,EAAFF,GAAIwE,EAAatE,EAAbsE,cAAemK,EAAQzO,EAARyO,SAAUN,EAAKnO,EAALmO,MACvD1G,EAAgDC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAvD4C,EAAgB1C,EAAA,GAAE+G,EAAmB/G,EAAA,GAC5CgH,EAAsDjH,mBAAS,MAAKkH,EAAAhH,YAAA+G,EAAA,GAA7DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,EAAwDrH,oBAAS,GAAMsH,EAAApH,YAAAmH,EAAA,GAAhEE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAE9CG,EAAahF,iBAAO,CAAErK,KAAIuK,iBAAkB,OAC5C+E,EAAWjF,iBAAO,IAQlB7D,EAAmB0B,uBAAY,SAAA9H,GACnCgP,GAAwB,GACxBJ,EAAuB,CACrBpM,MAAOxC,EAAUuC,WAAWC,MAC5BC,OAAQzC,EAAUuC,WAAWE,QAEjC,GAAG,IAEG4D,EAAmByB,uBACvB,SAAA9H,GACE,IAAMmP,EACDnP,EAAU0C,SAASjC,EAAIT,EAAUuC,WAAWC,MAAQ,EADnD2M,EAEDnP,EAAU0C,SAAS/B,EAAIX,EAAUuC,WAAWE,OAAS,EAGtD2M,EC1EV,SAA2BC,EAAOC,GAIhC,IAHA,IAAIC,EAAU,EACZC,EAAWH,EAAMtQ,OAAS,EAErBwQ,GAAWC,GAAU,CAC1B,IAAMC,EAAY5N,KAAK6N,OAAOH,EAAUC,GAAY,GAEhDF,EAAUD,EAAMI,IAClBF,EAAUE,EAAY,EAEtBD,EAAWC,EAAY,CAE3B,CAEA,OAAqB,IAAdD,EAAkBA,EAAW,IACtC,CD2D2BG,CAAkBT,EAAS9O,SAAS,SAAAgL,GACvD,IAAMwE,EAAWxE,EAAKrK,wBAEtB,OAAQwN,GACN,KAAKV,GAAUC,WACb,IAAI+B,EAAQ,EAKZ,OAJID,EAASpN,MAAQxC,EAAUuC,WAAWC,QAExCqN,EAAQD,EAASpN,MAAQxC,EAAUuC,WAAWC,OAEzCoN,EAAS3O,KAAO4O,EAAQV,EAEjC,KAAKtB,GAAUE,SACb,IAAI8B,EAAQ,EAKZ,OAJID,EAASnN,OAASzC,EAAUuC,WAAWE,SAEzCoN,EAAQD,EAASnN,OAASzC,EAAUuC,WAAWE,QAE1CmN,EAAS1O,IAAM2O,EAAQV,EAEhC,QACE5K,QAAQ6E,MAAM,qBAAsBmF,GAG1C,IAEAa,EAAoC,OAAnBA,EAA0BA,EAAiB,EAE5DH,EAAW7O,QAAQ+J,iBAAmBiF,EACtCZ,EAAoBY,EACtB,GACA,CAACjF,EAAkBoE,IAGf7K,EAAmBoE,uBAAY,WACnCkH,GAAwB,GACxBJ,EAAuB,MACvBJ,EAAoB,MACpBS,EAAW7O,QAAQ+J,iBAAmB,IACxC,GAAG,IAEH2F,EE/GF,SAAqBhQ,GAOjB,IANFF,EAAEE,EAAFF,GACAqC,EAAOnC,EAAPmC,QACAmC,EAAatE,EAAbsE,cACAgC,EAAgBtG,EAAhBsG,iBACAC,EAAgBvG,EAAhBuG,iBACA3C,EAAgB5D,EAAhB4D,iBAEAqM,EAA6CtH,qBAAWtL,GAAhDG,EAAayS,EAAbzS,cAAeE,EAAiBuS,EAAjBvS,kBAsBvB,OApBAwK,qBAAU,WAUR,OAT4BxK,EAAkB,CAC5CoC,KACAqC,UACAmC,gBACAgC,mBACAC,mBACA3C,oBAIJ,GAAG,CACD9D,EACAqC,EACAmC,EACAgC,EACAC,EACA3C,IAGK,CACLF,iBAAkBlG,GAAiBA,EAAc2E,QACjD+N,mBAAoB,YAExB,CF6EmDC,CAAa,CAC5DrQ,KACAqC,QAASgN,EAAW7O,QACpBgE,gBACAgC,mBACAC,mBACA3C,qBANMF,EAAgBsM,EAAhBtM,iBAAkBwM,EAAkBF,EAAlBE,mBASpB5C,EAAc,CAClBjD,mBACA5H,WAAYoM,GAOd,MAAO,CACL7D,UALgBkD,GAAcC,EADTzK,GAAoBA,EAAiB5D,GACLwN,GAMrDrC,aAlFmB,SAACK,EAAMC,GACrBD,IAEL8D,EAAS9O,QAAQiL,GAAOD,EAC1B,EA+EE4E,qBACAjB,uBAEJ,C,MGtHA,SAASmB,GAAQpQ,GAQb,IAPFF,EAAEE,EAAFF,GACA+K,EAAI7K,EAAJ6K,KACAwF,EAAKrQ,EAALqQ,MACAC,EAAOtQ,EAAPsQ,QACAC,EAAUvQ,EAAVuQ,WACAC,EAAQxQ,EAARwQ,SACAhJ,EAASxH,EAATwH,UAEMlD,EAAgBmM,mBAAQ,iBAAM,CAACtS,EAAeC,KAAK,GAAE,IAC3DsS,EAAwDlC,GAAiB,CACvE1O,KACA2O,SAAUV,GAAUE,SACpB3J,gBACA6J,MAAOkC,IAJDpF,EAAYyF,EAAZzF,aAAcD,EAAS0F,EAAT1F,UAAWkF,EAAkBQ,EAAlBR,mBAO3B1K,EAAkBiL,mBAAQ,iBAAM,CAACtS,EAAeC,KAAK,IACrD2M,EAAgByC,GAAc,CAClC1N,KACA0F,kBACAD,kBAAmB,GACnBD,WAAY,KAGRrF,EAAgBkK,iBAAO,MACvBwG,EAAUxG,iBAAO,MAEvB1C,EAAgDC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxD0D,EAAgBxD,EAAA,GAAEiJ,EAAmBjJ,EAAA,GAEtCuD,EACJpE,cAAC2E,GAAY,CACXC,aAAcP,EACda,cAAc,YACdJ,wBAAwB,aACxBC,oBAAoB,iCACpBC,kBAAkB,WAClBH,mBAAoB,SAAA5G,GAAK,OAAI6L,EAAoB7L,EAAM,EACvDgH,MAAOuE,EAAQO,KAAK,KAAM/Q,KAI9ByI,EAAa,CACXpG,QAAS,CACPrC,MAEFsC,KAAMjE,EAAeE,KACrB2C,IAAK2P,EACL1Q,gBACAoC,aAAc,SAAAH,GAAA,IAAG0E,EAAc1E,EAAd0E,eAAgBC,EAAS3E,EAAT2E,UAAWpE,EAAUP,EAAVO,WAAYzB,EAAGkB,EAAHlB,IAAG,OACzD8F,cAAC8D,EAAc,CACb9K,GAAIA,EACJ+K,KAAMA,EACNC,kBAAmB9J,EACnBf,cAAeA,EACf8K,cAAeA,EACfC,UAAWA,EACXC,aAAcA,EACdC,iBAAkBA,EAClBC,iBAAkBA,EAClBtE,UAAWA,EACXpE,WAAYA,EACZmE,eAAgBA,EAChBY,UAAWA,GACX,EAEJhF,UAAW,SAAA4H,GAA6C,IAA1C1G,EAAgB0G,EAAhB1G,iBAAkBC,EAAgByG,EAAhBzG,iBAC9B6M,EACE9M,EAAiB5D,GACjB6D,EAAiB7D,GACjB6D,EAAiB0G,iBAErB,IAQF,OACEvD,cAAA,OAAKhH,GAAIA,EAAI0H,UAAWY,IAAW8H,EAAoB1I,GAAWhB,SAChEE,eAAA,OAAK5G,GAAIA,EAAIkB,IAPD,SAAA+C,GACdwM,EAAWxM,GACX4M,EAAQrQ,QAAUyD,CACpB,EAI+ByD,UAAU,YAAY8C,SAAU,EAAE9D,SAAA,CAC3DM,cAAA,UAAQ9F,IAAKf,EAAcuG,SACzBM,cAAA,MAAIU,UAAU,aAAYhB,SAAEqE,OAE5BO,QAAQJ,EAAU/L,SAAWkM,IAC7BzE,eAAA,MAAI1F,IAAK+J,EAAevD,UAAU,aAAYhB,SAAA,CAC3CwE,EAAUK,KACT,SAACC,EAAMC,GAAG,IAAAuF,EAAA,OACPA,EAAA,GAAAC,YAAAD,EACElD,GAAUE,aACThH,cAAA,MAAAN,SACEM,cAACiD,EAAIxI,wBAAA,GACC+J,EAAKE,MAAI,IACbhE,UAAU,YACVwC,WAAY,SAAAjG,GAAI,OAAIkH,EAAalH,EAAMwH,EAAI,MAJtCD,EAAKE,MAAQF,EAAKE,KAAK1L,KAM3BiR,YAAAD,EAENlD,GAAUC,YACT/G,cAAA,MAAAN,SACEM,cAAA,OACE9F,IAAK,SAAA+C,GAAI,OAAIkH,EAAalH,EAAMwH,EAAI,EACpC/D,UAAU,wBACVxD,MAAO,CACLtB,MAAO4I,EAAK7I,YAAc6I,EAAK7I,WAAWC,MAC1CC,OAAQ2I,EAAK7I,YAAc6I,EAAK7I,WAAWE,WANzC,gBASHmO,GAEPxF,EAAKlJ,KAAK,IAEf+I,GAAoBD,KAGzBpE,cAAA,UAAAN,UAAU2E,GAAoBD,QAItC,CAiBAkF,GAAS9H,aAAe,CACtBd,UAAW,IAGb,IAAM+C,GAAqB,CACzB+F,QV3H4B,SAAC9G,EAAQlC,GACrC,MAAO,CACLlF,KAAM6G,EAASJ,QACfW,SACAlC,UAEJ,EUsHEkJ,SVrIsB,SAAChH,EAAQwH,EAAoBC,GACnD,MAAO,CACL7O,KAAM4G,EACNQ,SACAwH,qBACAC,aAEJ,GUiIetG,eACb,KACAJ,GAFaI,CAGbyF,IC3KWc,GAAc,SAAA1R,GAAK,OAAIA,EAAM4J,MAAMA,KAAM,E,mDCqBtD,SAAS+H,GAAKnR,GAAgC,IAA7BF,EAAEE,EAAFF,GAAI+K,EAAI7K,EAAJ6K,KAAMuG,EAAKpR,EAALoR,MAAOC,EAAOrR,EAAPqR,QAC1B/M,EAAgBmM,mBAAQ,iBAAM,CAACtS,EAAeE,KAAK,GAAE,IAC3DqS,EAAwDlC,GAAiB,CACvE1O,KACA2O,SAAUV,GAAUC,WACpB1J,gBACA6J,MAAOiD,IAJDnG,EAAYyF,EAAZzF,aAAcD,EAAS0F,EAAT1F,UAAWkF,EAAkBQ,EAAlBR,mBAW3BnF,EAAgByC,GAAc,CAClC1N,KACA0F,gBANsBiL,mBACtB,iBAAM,CAACtS,EAAeE,KAAMF,EAAeC,KAAK,GAChD,IAKAmH,kBAAmB,GACnBD,WAAY,KAGRgM,EAAyD,CAC7D,CACEC,SAAU,eACVC,kBAAmB,qBACnBC,cAAc,IC1CSC,QACzB,SAACjL,EAAKzG,GAAqD,IAAjDuR,EAAQvR,EAARuR,SAAUC,EAAiBxR,EAAjBwR,kBAAmBC,EAAYzR,EAAZyR,aAErChK,EAA0BC,mBAAS+J,GAAa9J,EAAAC,YAAAH,EAAA,GAAzC1C,EAAK4C,EAAA,GAAEgK,EAAQhK,EAAA,GAGtB,OAFAlB,EAAM8K,GAAYxM,EAClB0B,EAAM+K,GAAqBG,EACpBlL,CACT,GACA,CAAC,GDsCGmL,EE/CR,SAA0B7G,GACxB,IAAM8G,EAAS7J,uBAAY,SAAAxH,GACzB,IAAQ2C,EAAc3C,EAAd2C,UAER4H,EAAczK,QAAQ0F,YAAc7C,CACtC,GAAG,IAEG2O,EAAe9J,uBAAY,WAC/BxG,SAASI,oBAAoB,cAAeiQ,GAC5CrQ,SAASI,oBAAoB,YAAakQ,EAC5C,GAAG,IASH,OAPwB9J,uBAAY,WAClCxG,SAASC,iBAAiB,cAAeoQ,GACzCrQ,SAASC,iBAAiB,YAAaqQ,EACzC,GAAG,GAKL,CF2BkCC,CAAiBhH,GAEjD,OACErE,eAAA,OACE5G,GAAIA,EACJ0H,UAAWY,IAAW,QAAS8H,GAC/B3P,cAAeqR,EAAwBpL,SAAA,CAEvCM,cAAA,MAAIU,UAAU,cAAcxD,MAAO,CAAEgO,MAAOnH,EAAKmH,OAAQxL,SACtDqE,EAAKoH,OAERvL,eAAA,MAAI1F,IAAK+J,EAAevD,UAAU,cAAahB,SAAA,CAC5CwE,EAAUK,KACT,SAACC,EAAMC,GAAG,IAAAuF,EAAA,OACPA,EAAA,GAAAC,YAAAD,EACElD,GAAUE,aACThH,cAAA,MAAAN,SACEM,cAACsJ,GAAQ7O,YAAA,CACPiG,UAAU,kBACV+I,WAAY,SAAAxM,GAAI,OAAIkH,EAAalH,EAAMwH,EAAI,GACvCD,EAAKE,QAJJF,EAAKE,MAAQF,EAAKE,KAAK1L,KAM3BiR,YAAAD,EAENlD,GAAUC,YACT/G,cAAA,MAAAN,SACEM,cAAA,OACE9F,IAAK,SAAA+C,GAAI,OAAIkH,EAAalH,EAAMwH,EAAI,EACpC/D,UAAU,8BACVxD,MAAO,CACLtB,MAAO4I,EAAK7I,YAAc6I,EAAK7I,WAAWC,MAC1CC,OAAQ2I,EAAK7I,YAAc6I,EAAK7I,WAAWE,WANzC,gBASHmO,GAEPxF,EAAKlJ,KAAK,IAEhB0E,cAAC2E,GAAYlK,YAAA,CACXiG,UAAU,mBACVwE,cAAc,gBACdJ,wBAAwB,aACxBC,oBAAoB,wBACpBC,kBAAkB,WAClBC,MAAOsF,EAAQR,KAAK,KAAM/Q,IACtBwR,SAKd,CAUA,IAIM/G,GAAqB,CACzB2H,WZhH+B,SAAApS,GAC/B,MAAO,CACLsC,KAAMwG,EAAYC,QAClB/I,KAEJ,EY4GEuR,QZnD4B,SAACzH,EAAStC,GACtC,MAAO,CACLlF,KAAM8G,EAASL,QACfe,UACAtC,UAEJ,GYgDeqD,gBATS,SAAAnL,GAAK,MAAK,CAChC4J,MAAO8H,GAAY1R,GACpB,GASC+K,GAFaI,EAjBf,SAAuBzI,GAA+C,IAA5CpC,EAAEoC,EAAFpC,GAAIsJ,EAAKlH,EAALkH,MAAO8I,EAAUhQ,EAAVgQ,WAAYb,EAAOnP,EAAPmP,QAAYc,EAAIhS,YAAA+B,EAAA9B,IAK/D,OAJA8H,qBAAU,WACRgK,EAAWpS,EACb,GAAG,CAACoS,EAAYpS,IAETsJ,GAAStC,cAACqK,GAAK5P,wBAAA,CAAC8P,QAASA,GAAajI,GAAW+I,GAC1D,IG9FeC,OARf,WACE,OACEtL,cAACtI,EAAe,CAAAgI,SACdM,cAACuL,GAAc,CAACvS,GAAI,KAG1B,E,oCCTMwS,GAAe,CACnBlJ,MAAO,MCKHmJ,GAAcC,2BAAgB,CAElCpJ,MDJmB,WAAmC,IAAlC5J,EAAKR,UAAAC,OAAA,QAAAwT,IAAAzT,UAAA,GAAAA,UAAA,GAAGsT,GAAcI,EAAM1T,UAAAC,OAAA,EAAAD,UAAA,QAAAyT,EAChD,OAAQC,EAAOtQ,MACb,KAAKwG,EAAYE,QACf,OAAAvH,wBAAA,GACK/B,GAAK,IACR4J,MAAOsJ,EAAOtJ,QAGlB,KAAKJ,EACH,IAAQwB,EAA2CkI,EAA3ClI,OAAQC,EAAmCiI,EAAnCjI,kBAAmBC,EAAgBgI,EAAhBhI,YAE/BiI,EAAa,KACXC,EAAepT,EAAM4J,MAAMgI,MAAM/F,KAAI,SAAAxB,GACzC,IAAMgJ,EAAQhJ,EAAKwG,MAAMyC,MAAK,SAAAxH,GAAI,OAAIA,EAAKxL,KAAO0K,CAAM,IACxD,OAAIqI,GACFF,EAAaE,EACbtR,wBAAA,GACKsI,GAAI,IACPwG,MAAOxG,EAAKwG,MAAMhC,QAAO,SAAA/C,GAAI,OAAIA,EAAKxL,KAAO0K,CAAM,OAGhDX,CACT,IAEA,GAAI8I,EAAY,CACd,IAAMI,EAAUH,EAAaE,MAC3B,SAAAjJ,GAAI,OAAIA,EAAK/J,KAAO2K,CAAiB,IAEnCsI,EACFA,EAAQ1C,MAAM/B,OAAO5D,EAAa,EAAGiI,GAErClO,QAAQ6E,MAAM,eAAgBmB,EAAmB,YAErD,MACEhG,QAAQ6E,MAAM,+BAAgCkB,EAAQ,aAGxD,OAAAjJ,wBAAA,GACK/B,GAAK,IACR4J,MAAK7H,wBAAA,GACA/B,EAAM4J,OAAK,IACdgI,MAAOwB,MAIb,KAAK5J,EACH,IAAQQ,EAA2CkJ,EAA3ClJ,OAAQwH,EAAmC0B,EAAnC1B,mBAAoBC,EAAeyB,EAAfzB,WAEhCzR,EAAM4J,MAAMtJ,KAAOkR,GACrBvM,QAAQ6E,MAAM,wDAGhB,IAAM0J,EAAcxT,EAAM4J,MAAMgI,MAAM6B,WACpC,SAAApJ,GAAI,OAAIA,EAAK/J,KAAO0J,CAAM,IAE5B,GAAIyH,IAAe+B,EACjB,OAAOxT,EAGT,IAAM0T,EAAa1T,EAAM4J,MAAMgI,MAAM4B,GAC/BJ,EAAYO,aAAO3T,EAAM4J,MAAMgI,OAKrC,OAHAwB,EAAatE,OAAO0E,EAAa,GACjCJ,EAAatE,OAAO2C,EAAY,EAAGiC,GAEnC3R,wBAAA,GACK/B,GAAK,IACR4J,MAAK7H,wBAAA,GACA/B,EAAM4J,OAAK,IACdgI,MAAOwB,MAIb,KAAK3J,EAASH,QACZ,IAAQU,EAAiBkJ,EAAjBlJ,OAAQC,EAASiJ,EAATjJ,KAEVmJ,EAAepT,EAAM4J,MAAMgI,MAAM/F,KAAI,SAAAxB,GAAI,OAC7CA,EAAK/J,KAAO0J,EAAMjI,wBAAA,GAETsI,GAAI,IACPwG,MAAOxG,EAAKwG,MAAM9Q,OAAOkK,KAE3BI,CAAI,IAGV,OAAAtI,wBAAA,GACK/B,GAAK,IACR4J,MAAK7H,wBAAA,GACA/B,EAAM4J,OAAK,IACdgI,MAAOwB,MAKb,KAAK1J,EAASJ,QACZ,IAAQc,EAAkB8I,EAAlB9I,QAASC,EAAS6I,EAAT7I,KAMjB,OAJIrK,EAAM4J,MAAMtJ,KAAO8J,GACrBnF,QAAQ6E,MAAM,4CAGhB/H,wBAAA,GACK/B,GAAK,IACR4J,MAAK7H,wBAAA,GACA/B,EAAM4J,OAAK,IACdgI,MAAO5R,EAAM4J,MAAMgI,MAAM7R,OAAOsK,OAKtC,QACE,OAAOrK,EAEb,I,iBEvHIM,GAAK,EAEIsT,GAAY,CACvBtT,IAAKA,MAAMuT,WACXxI,KAAM,CACJoH,KAAM,yBACND,MAAO,SAETZ,MAAO,CACL,CACEtR,IAAKA,MAAMuT,WACXxI,KAAM,QACNwF,MAAO,CACL,CACEvQ,IAAKA,MAAMuT,WACX/L,QAAS,8CAEX,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,kDAIf,CACExH,IAAKA,MAAMuT,WACXxI,KAAM,cACNwF,MAAO,IAET,CACEvQ,IAAKA,MAAMuT,WACXxI,KAAM,OACNwF,MAAO,CACL,CACEvQ,IAAKA,MAAMuT,WACX/L,QAAS,oCAEX,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,sCAEX,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,0CAEX,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,4CAEX,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,+BAEX,CACExH,IAAKA,MAAMuT,WACX/L,QACE,kFAEJ,CACExH,IAAKA,MAAMuT,WACX/L,QACE,kDAEJ,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,2DAEX,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,iFAEX,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,iCAEX,CACExH,IAAKA,MAAMuT,WACX/L,QACE,2DAEJ,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,qDAEX,CACExH,IAAKA,MAAMuT,WACX/L,QACE,qCAEJ,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,4CAEX,CACExH,IAAKA,MAAMuT,WACX/L,QACE,wDAEJ,CACExH,IAAKA,MAAMuT,WACX/L,QAAS,8DAEX,CACExH,IAAKA,MAAMuT,WACX/L,QACE,2DAEJ,CACExH,IAAKA,MAAMuT,WACX/L,QACE,mDAIR,CACExH,IAAKA,MAAMuT,WACXxI,KAAM,gBACNwF,MAAO,MC7GN,SAASiD,GAAkBxT,GAChC,OAAOsT,EACT,CAEO,SAASG,GAAe/J,EAAQlC,GAKrC,MAAO,CAAEkC,SAAQC,KAJD,CACd3J,GAAI6M,mBAAS,QACbrF,WAGJ,CAEO,SAASkM,GAAe5J,EAAStC,GAMtC,MAAO,CAAEsC,UAASC,KALF,CACd/J,GAAI6M,mBAAS,QACb9B,KAAMvD,EACN+I,MAAO,IAGX,C,2BCgBiBoD,IA3BjB,SAAUvB,GAAUlS,GAAA,IAAGF,EAAEE,EAAFF,GAAE,OAAA4T,eAAAC,MAAA,SAAAC,IAAA,IAAAxK,EAAA,OAAAsK,eAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEP,OAFOF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAED3U,aAAK4U,GAA4BnU,GAAI,KAAD,EACxD,OADMsJ,EAAK0K,EAAAI,KAAAJ,EAAAE,KAAA,EACLG,aAAIhL,EAAkBC,IAAQ,KAAD,EAAA0K,EAAAE,KAAA,gBAEnC,OAFmCF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAE,KAAA,GAE7BG,aAAI9K,EAAeyK,EAAAM,KAAS,KAAD,oBAAAN,EAAAO,OAAA,GAAAT,EAAA,gBALZF,EAKY,CAIrC,SAAUpD,GAAOpO,GAAA,IAAGsH,EAAMtH,EAANsH,OAAQlC,EAAOpF,EAAPoF,QAAO,OAAAoM,eAAAC,MAAA,SAAAW,IAAA,IAAAC,EAAA,OAAAb,eAAAG,MAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAEX,OAFWQ,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAEL3U,aAAK4U,GAAyBzK,EAAQlC,GAAS,KAAD,EACxE,OADMiN,EAAWC,EAAAN,KAAAM,EAAAR,KAAA,EACXG,aAAI5K,EAAegL,EAAY/K,OAAQ+K,EAAY9K,OAAO,KAAD,EAAA+K,EAAAR,KAAA,gBAE/D,OAF+DQ,EAAAT,KAAA,EAAAS,EAAAJ,GAAAI,EAAA,SAAAA,EAAAR,KAAA,GAEzDG,aAAIzK,EAAY8K,EAAAJ,KAAS,KAAD,oBAAAI,EAAAH,OAAA,GAAAC,EAAA,gBALCZ,EAKD,CAIlC,SAAUrC,GAAOjH,GAAA,IAAGR,EAAOQ,EAAPR,QAAStC,EAAO8C,EAAP9C,QAAO,OAAAoM,eAAAC,MAAA,SAAAc,IAAA,IAAAC,EAAA,OAAAhB,eAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAEZ,OAFYW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEN3U,aAAK4U,GAAyBrK,EAAStC,GAAS,KAAD,EACzE,OADMoN,EAAWC,EAAAT,KAAAS,EAAAX,KAAA,EACXG,aAAIxK,EAAe+K,EAAY9K,QAAS8K,EAAY7K,OAAO,KAAD,EAAA8K,EAAAX,KAAA,gBAEhE,OAFgEW,EAAAZ,KAAA,EAAAY,EAAAP,GAAAO,EAAA,SAAAA,EAAAX,KAAA,GAE1DG,aAAIrK,EAAY6K,EAAAP,KAAS,KAAD,oBAAAO,EAAAN,OAAA,GAAAI,EAAA,gBALEf,EAKF,CAI3B,SAAUD,KAAkB,OAAAC,eAAAG,MAAC,SAADe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACjC,OADiCY,EAAAZ,KAAA,EAC3Ba,aAAI,CACRC,aAAWlM,EAAYC,QAASqJ,IAChC4C,aAAW7L,EAASJ,QAASyH,IAC7BwE,aAAW5L,EAASL,QAASwI,MAC5B,KAAD,mBAAAuD,EAAAP,OAAA,GAAAU,GAAA,C,2BC5CqBC,IAAV,SAAUA,KAAQ,OAAAtB,eAAAG,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC/B,OAD+BF,EAAAE,KAAA,EACzBa,aAAI,CAACxV,aAAKoU,MAAsB,KAAD,mBAAAK,EAAAO,OAAA,GAAAU,GAAA,CCMvC,IAAME,GAAiBC,eAGjBC,GAAQC,uBACZ7C,GAHmB,CAAC,EAKpB8C,+BAAoBC,2BAAgBL,MAGtCA,GAAeM,IAAIP,I,YCTnBQ,IAASC,OACP3O,cAACC,IAAQ,CAACoO,MAAOA,GAAM3O,SACrBM,cAACsL,GAAG,MAEN5Q,SAASkU,eAAe,Q","file":"static/js/main.e8704723.chunk.js","sourcesContent":["import React from 'react';\n\nconst DragDropContext = React.createContext({\n  draggedObject: null,\n  registerDraggable: () => {},\n  registerDroppable: () => {},\n  registerScrollable: () => {},\n});\n\nexport default DragDropContext;\n","function hasVerticalScrollbar(element) {\n  return element.scrollHeight > element.clientHeight;\n}\n\nfunction hasHorizontalScrollbar(element) {\n  return element.scrollWidth > element.clientWidth;\n}\n\nfunction findNearestVerticalScrollbar(position) {\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\n  while (elementFromPosition) {\n    if (hasVerticalScrollbar(elementFromPosition)) {\n      return elementFromPosition;\n    }\n    elementFromPosition = elementFromPosition.parentNode;\n  }\n  return null;\n}\n\nfunction findNearestHorizontalScrollbar(position) {\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\n  while (elementFromPosition) {\n    if (hasHorizontalScrollbar(elementFromPosition)) {\n      return elementFromPosition;\n    }\n    elementFromPosition = elementFromPosition.parentNode;\n  }\n  return null;\n}\n\nexport {\n  hasVerticalScrollbar,\n  hasHorizontalScrollbar,\n  findNearestVerticalScrollbar,\n  findNearestHorizontalScrollbar,\n};\n","const DRAGGABLE_TYPE = {\n  CARD: 'CARD',\n  LIST: 'LIST',\n};\n\nconst MOVEMENT = {\n  BOTTOM: 'BOTTOM',\n  TOP: 'TOP',\n  RIGHT: 'RIGHT',\n  LEFT: 'LEFT',\n};\n\nconst MOUSE_BUTTON = {\n  LEFT: 1,\n  MIDDLE: 2,\n  RIGHT: 3,\n};\n\nexport { DRAGGABLE_TYPE, MOVEMENT, MOUSE_BUTTON };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DragDropContext from './internal/DragDropContext';\n\nimport {\n  hasHorizontalScrollbar,\n  hasVerticalScrollbar,\n} from '../helpers/scrollbar';\n\nimport { hideElement, showElement } from '../helpers/visibility';\nimport { MOUSE_BUTTON, MOVEMENT } from '../constants';\nimport { inside } from '../helpers/inside';\n\nclass DragDropManager extends React.Component {\n  state = {\n    draggedObjectPosition: null,\n  };\n\n  draggedObject = null;\n  hoveredDroppable = null;\n  droppables = {};\n  scrollables = {};\n\n  registerScrollable = scrollable => {\n    this.scrollables[scrollable.id] = scrollable;\n    return () => {\n      delete this.scrollables[scrollable.id];\n    };\n  };\n\n  registerDroppable = droppable => {\n    this.droppables[droppable.id] = droppable;\n    return () => {\n      delete this.droppables[droppable.id];\n    };\n  };\n\n  registerDraggable = ({ dragHandleRef, ...draggable }) => {\n    const handle = dragHandleRef.current;\n\n    const onPointerDown = event => {\n      const { which: mouseButton } = event;\n      if (mouseButton !== MOUSE_BUTTON.LEFT) return;\n\n      const { clientX, clientY } = event;\n      const grabPosition = {\n        x: clientX,\n        y: clientY,\n      };\n      const draggedObjectRect = draggable.ref.current.getBoundingClientRect();\n      const grabShift = {\n        x: grabPosition.x - draggedObjectRect.left,\n        y: grabPosition.y - draggedObjectRect.top,\n      };\n\n      this.bindedStartDragIfMove = event =>\n        this.startDragIfMove(\n          { handle, ...draggable },\n          grabPosition,\n          grabShift,\n          event,\n        );\n\n      document.addEventListener('pointermove', this.bindedStartDragIfMove);\n      document.addEventListener('pointerup', this.resetPreparationToDrag);\n\n      event.stopPropagation();\n    };\n\n    handle.addEventListener('pointerdown', onPointerDown);\n\n    return function unregisterDraggable() {\n      handle.removeEventListener('pointerdown', onPointerDown);\n    };\n  };\n\n  startDragIfMove = (draggable, grabPosition, grabShift, event) => {\n    const { clientX: newX, clientY: newY } = event;\n\n    if (\n      Math.abs(newX - grabPosition.x) > 2 ||\n      Math.abs(newY - grabPosition.y) > 2\n    ) {\n      document.removeEventListener('pointermove', this.bindedStartDragIfMove);\n      document.removeEventListener('pointerup', this.resetPreparationToDrag);\n\n      this.grabDraggable({\n        grabShift,\n        ...draggable,\n      });\n    }\n  };\n\n  resetPreparationToDrag = () => {\n    document.removeEventListener('pointermove', this.bindedStartDragIfMove);\n    document.removeEventListener('pointerup', this.resetPreparationToDrag);\n  };\n\n  grabDraggable = ({\n    grabShift,\n    context,\n    type,\n    ref,\n    handle,\n    renderAvatar,\n    onGrab,\n    onMove,\n    onRelease,\n  }) => {\n    const draggedObjectRect = ref.current.getBoundingClientRect();\n\n    this.draggedObject = {\n      context,\n      type,\n      renderAvatar,\n      handle,\n      onGrab,\n      onMove,\n      onRelease,\n      grabShift,\n      dimensions: {\n        width: draggedObjectRect.width,\n        height: draggedObjectRect.height,\n      },\n      position: {\n        x: draggedObjectRect.left,\n        y: draggedObjectRect.top,\n      },\n      movement: [],\n    };\n\n    this.dndContext.draggedObject = this.draggedObject;\n\n    this.manageDroppables();\n\n    this.setState(\n      {\n        draggedObjectPosition: this.draggedObject.position,\n      },\n      () => {\n        document.addEventListener('pointermove', this.moveDraggable);\n        document.addEventListener('pointerup', this.releaseDraggable);\n      },\n    );\n\n    this.draggedObject.onGrab();\n  };\n\n  dndContext = {\n    draggedObject: null,\n    registerDraggable: this.registerDraggable,\n    registerDroppable: this.registerDroppable,\n    registerScrollable: this.registerScrollable,\n  };\n\n  moveDraggable = event => {\n    const { clientX, clientY } = event;\n    const { movementX, movementY } = event;\n    const { grabShift } = this.draggedObject;\n    const currentDraggedObject = this.draggedObject;\n    const currentHoveredDroppable = this.hoveredDroppable;\n\n    const newPosition = {\n      x: clientX - grabShift.x,\n      y: clientY - grabShift.y,\n    };\n    currentDraggedObject.position = newPosition;\n\n    const movement = [];\n    if (movementX) {\n      movement.push(movementX > 0 ? MOVEMENT.RIGHT : MOVEMENT.LEFT);\n    }\n    if (movementY) {\n      movement.push(movementY > 0 ? MOVEMENT.BOTTOM : MOVEMENT.TOP);\n    }\n    currentDraggedObject.movement = movement;\n\n    this.scrollIfNedeed({ x: clientX, y: clientY });\n\n    this.manageDroppables();\n\n    this.setState({ draggedObjectPosition: newPosition });\n\n    currentDraggedObject.onMove({\n      draggableContext: currentDraggedObject.context,\n      droppableContext: currentHoveredDroppable.context,\n    });\n  };\n\n  scrollIfNedeed(cursorPosition) {\n    Object.values(this.scrollables).forEach(scrollable => {\n      const {\n        scrollStep,\n        scrollPointOffset,\n        scrolledByTypes,\n        ref: { current: scrollableNode },\n      } = scrollable;\n\n      if (!scrollableNode) return;\n\n      if (!scrolledByTypes.includes(this.draggedObject.type)) return;\n\n      if (!inside(cursorPosition, scrollableNode)) return;\n\n      if (hasHorizontalScrollbar(scrollableNode)) {\n        if (cursorPosition.x <= scrollableNode.clientLeft + scrollPointOffset) {\n          scrollableNode.scrollLeft -= scrollStep;\n        } else if (\n          cursorPosition.x >=\n          scrollableNode.clientWidth - scrollPointOffset\n        ) {\n          scrollableNode.scrollLeft += scrollStep;\n        }\n      }\n      if (hasVerticalScrollbar(scrollableNode)) {\n        if (cursorPosition.y <= scrollableNode.clientTop + scrollPointOffset) {\n          scrollableNode.scrollTop -= scrollStep;\n        } else if (\n          cursorPosition.y >=\n          scrollableNode.clientHeight - scrollPointOffset\n        ) {\n          scrollableNode.scrollTop += scrollStep;\n        }\n      }\n    });\n  }\n\n  releaseDraggable = () => {\n    const currentDraggedObject = this.draggedObject;\n    const currentHoveredDroppable = this.hoveredDroppable;\n\n    document.removeEventListener('pointermove', this.moveDraggable);\n    document.removeEventListener('pointerup', this.releaseDraggable);\n\n    this.draggedObject = null;\n    this.hoveredDroppable = null;\n    this.dndContext.draggedObject = null;\n    this.setState({\n      draggedObjectPosition: null,\n    });\n\n    currentDraggedObject.onRelease({\n      draggableContext: currentDraggedObject.context,\n      droppableContext: currentHoveredDroppable.context,\n    });\n    currentHoveredDroppable.onDraggableLeave();\n  };\n\n  manageDroppables() {\n    const { position, dimensions } = this.draggedObject;\n\n    const lastDroppable = this.hoveredDroppable;\n    const currentDroppable = this.findDroppable({\n      x: position.x + dimensions.width / 2,\n      y: position.y + dimensions.height / 2,\n    });\n\n    if (!currentDroppable) return;\n\n    this.hoveredDroppable = this.droppables[currentDroppable.id];\n\n    const droppableChanged =\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\n\n    if (droppableChanged) {\n      if (lastDroppable) {\n        lastDroppable.onDraggableLeave();\n      }\n\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\n    }\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\n  }\n\n  findDroppable = position => {\n    const draggedNode = this.draggedObject.node;\n\n    hideElement(draggedNode);\n    let element = document.elementFromPoint(position.x, position.y);\n    showElement(draggedNode);\n\n    while (element) {\n      const droppable = element.closest('.droppable');\n\n      if (!droppable) return null;\n\n      if (!this.droppables[droppable.id]) {\n        console.warn('Unregistered droppable with id:', droppable.id);\n\n        element = droppable.parentNode;\n        continue;\n      }\n\n      if (\n        this.droppables[droppable.id].acceptedTypes.includes(\n          this.draggedObject.type,\n        )\n      ) {\n        return droppable;\n      }\n\n      element = droppable.parentNode;\n    }\n\n    return null;\n  };\n\n  setDraggedObjectRef = draggedObjectNode => {\n    if (this.draggedObject) {\n      this.draggedObject.node = draggedObjectNode;\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { draggedObjectPosition } = this.state;\n    const { draggedObject, dndContext } = this;\n\n    return (\n      <>\n        {draggedObject &&\n          draggedObject.renderAvatar({\n            clientPosition: draggedObjectPosition,\n            grabPoint: draggedObject.grabShift,\n            dimensions: draggedObject.dimensions,\n            ref: this.setDraggedObjectRef,\n          })}\n        <DragDropContext.Provider value={dndContext}>\n          {children}\n        </DragDropContext.Provider>\n      </>\n    );\n  }\n}\n\nDragDropManager.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default DragDropManager;\n","function hideElement(element) {\n  if (element) {\n    element.style.visibility = 'hidden';\n  }\n}\n\nfunction showElement(element) {\n  if (element) {\n    element.style.visibility = 'visible';\n  }\n}\n\nexport { hideElement, showElement };\n","function inside(point, element) {\n  const elementRect = element.getBoundingClientRect();\n  return (\n    point.x >= elementRect.left &&\n    point.x <= elementRect.right &&\n    point.y >= elementRect.top &&\n    point.y <= elementRect.bottom\n  );\n}\n\nexport { inside };\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","// It doesn't require grapPoint and dimensitions params cause it always returns the same style for a slope\n// This params were for realisticGrabAt\nfunction grabAt() {\n  return {\n    transformOrigin: '0 0',\n    transform: 'rotate(0.087rad)',\n  };\n}\n\nexport default grabAt;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { moveTo } from '../../helpers/moveTo';\nimport grabAt from '../../helpers/grabAt';\n\nfunction CardAvatar({\n  id,\n  content,\n  cardAvatarRef,\n  className,\n  grabPoint,\n  dimensions,\n  clientPosition,\n}) {\n  const [rotationStyle, setRotationStyle] = useState({});\n\n  const applyGrabAnimation = useCallback(() => {\n    const rotationStyle = grabAt(grabPoint, dimensions);\n    setRotationStyle(rotationStyle);\n  }, []);\n\n  const removeGrabAnimation = useCallback(() => {\n    setRotationStyle({});\n  }, []);\n\n  useEffect(() => {\n    setTimeout(applyGrabAnimation, 5);\n\n    return removeGrabAnimation;\n  }, []);\n\n  return (\n    <div\n      id={id}\n      ref={cardAvatarRef}\n      className={classNames('card', 'dragged', className)}\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\n    >\n      <h4 className='card-content'>{content}</h4>\n    </div>\n  );\n}\n\nCardAvatar.propTypes = {\n  id: PropTypes.string.isRequired,\n  cardAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  clientPosition: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  content: PropTypes.any.isRequired,\n  grabPoint: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  dimensions: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nCardAvatar.defaultProps = {\n  className: '',\n};\n\nexport default CardAvatar;\n","import { useContext, useEffect } from 'react';\n\nimport DragDropContext from './internal/DragDropContext';\n\nfunction useDraggable({\n  ref,\n  type,\n  context,\n  dragHandleRef,\n  renderAvatar,\n  onGrab = () => {},\n  onMove = () => {},\n  onRelease = () => {},\n}) {\n  const { registerDraggable } = useContext(DragDropContext);\n\n  useEffect(() => {\n    const unregisterDraggable = registerDraggable({\n      ref,\n      type,\n      context,\n      dragHandleRef,\n      renderAvatar,\n      onGrab,\n      onMove,\n      onRelease,\n    });\n\n    return unregisterDraggable;\n  }, [\n    ref,\n    type,\n    context,\n    dragHandleRef,\n    renderAvatar,\n    onGrab,\n    onMove,\n    onRelease,\n  ]);\n}\n\nexport { useDraggable };\n","export const FETCH_BOARD = {\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\n  ERROR: '@@board/FETCH_BOARD_ERROR',\n};\n\nexport const MOVE = {\n  CARD: '@@board/MOVE_CARD',\n  LIST: '@@board/MOVE_LIST',\n};\n\nexport const ADD_CARD = {\n  REQUEST: '@@board/ADD_CARD_REQUEST',\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\n  ERROR: '@@board/ADD_CARD_ERROR',\n};\n\nexport const ADD_LIST = {\n  REQUEST: '@@board/ADD_LIST_REQUEST',\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\n  ERROR: '@@board/ADD_LIST_ERROR',\n};\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\n\nexport const fetchBoardRequest = id => {\n  return {\n    type: FETCH_BOARD.REQUEST,\n    id,\n  };\n};\n\nexport const fetchBoardSuccess = board => {\n  return {\n    type: FETCH_BOARD.SUCCESS,\n    board,\n  };\n};\n\nexport const fetchBoardError = error => {\n  return {\n    type: FETCH_BOARD.ERROR,\n    error,\n  };\n};\n\nexport const moveCard = (cardId, destinationListId, indexInList) => {\n  return {\n    type: MOVE.CARD,\n    cardId,\n    destinationListId,\n    indexInList,\n  };\n};\n\nexport const moveList = (listId, destinationBoardId, newListIdx) => {\n  return {\n    type: MOVE.LIST,\n    listId,\n    destinationBoardId,\n    newListIdx,\n  };\n};\n\nexport const addCardRequest = (listId, content) => {\n  return {\n    type: ADD_CARD.REQUEST,\n    listId,\n    content,\n  };\n};\n\nexport const addCardSuccess = (listId, card) => {\n  return {\n    type: ADD_CARD.SUCCESS,\n    listId,\n    card,\n  };\n};\n\nexport const addCardError = error => {\n  return {\n    type: ADD_CARD.ERROR,\n    error,\n  };\n};\n\nexport const addListRequest = (boardId, content) => {\n  return {\n    type: ADD_LIST.REQUEST,\n    boardId,\n    content,\n  };\n};\n\nexport const addListSuccess = (boardId, list) => {\n  return {\n    type: ADD_LIST.SUCCESS,\n    boardId,\n    list,\n  };\n};\n\nexport const addListError = error => {\n  return {\n    type: ADD_LIST.ERROR,\n    error,\n  };\n};\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport CardAvatar from './CardAvatar';\nimport { useDraggable } from '../../drag-drop/useDraggable';\nimport { moveCard } from '../../ducks/board/actions';\nimport { DRAGGABLE_TYPE } from '../../constants';\n\nimport './Card.scss';\n\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\n  const cardRef = useRef(null);\n\n  useDraggable({\n    context: {\n      id,\n    },\n    type: DRAGGABLE_TYPE.CARD,\n    ref: cardRef,\n    dragHandleRef: cardRef,\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\n      <CardAvatar\n        id={id}\n        cardAvatarRef={ref}\n        content={content}\n        className={className}\n        grabPoint={grabPoint}\n        dimensions={dimensions}\n        clientPosition={clientPosition}\n      />\n    ),\n    onRelease: ({ draggableContext, droppableContext }) => {\n      moveCardToList(\n        draggableContext.id,\n        droppableContext.id,\n        droppableContext.placeholderIndex,\n      );\n    },\n  });\n\n  const setRefs = node => {\n    setCardRef(node);\n    cardRef.current = node;\n  };\n\n  return (\n    <div\n      id={id}\n      ref={setRefs}\n      className={classNames('card', className)}\n      tabIndex={0}\n    >\n      <h4 className='card-content'>{content}</h4>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  content: PropTypes.any.isRequired,\n  setCardRef: PropTypes.func.isRequired,\n  moveCardToList: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  className: '',\n};\n\nconst mapDispatchToProps = {\n  moveCardToList: moveCard,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Card);\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Card } from '../Card';\nimport { moveTo } from '../../helpers/moveTo';\nimport grabAt from '../../helpers/grabAt';\n\nfunction CardListAvatar({\n  id,\n  name,\n  cardListAvatarRef,\n  dragHandleRef,\n  scrollableRef,\n  listItems,\n  setItemRefAt,\n  addCardComponent,\n  isCardFormOpened,\n  grabPoint,\n  dimensions,\n  clientPosition,\n  className,\n}) {\n  const [rotationStyle, setRotationStyle] = useState({});\n  useEffect(() => {\n    const rotationStyle = grabAt(grabPoint, dimensions);\n    setTimeout(() => {\n      setRotationStyle(rotationStyle);\n    }, 2);\n  }, []);\n\n  return (\n    <div\n      id={id}\n      ref={cardListAvatarRef}\n      className={classNames('card-list', 'dragged', className)}\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\n    >\n      <header ref={dragHandleRef}>\n        <h2 className='list-title'>{name}</h2>\n      </header>\n      {(Boolean(listItems.length) || isCardFormOpened) && (\n        <ul ref={scrollableRef} className='list-cards'>\n          {listItems.map((item, idx) => (\n            <li key={item.data.id}>\n              <Card\n                {...item.data}\n                setCardRef={node => setItemRefAt(node, idx)}\n                className='list-card'\n              />\n            </li>\n          ))}\n          {isCardFormOpened && addCardComponent}\n        </ul>\n      )}\n      <footer>{!isCardFormOpened && addCardComponent}</footer>\n    </div>\n  );\n}\n\nCardListAvatar.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  cardListAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  dragHandleRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  scrollableRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n  listItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n          .isRequired,\n        content: PropTypes.string.isRequired,\n      }).isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  setItemRefAt: PropTypes.func.isRequired,\n  addCardComponent: PropTypes.element.isRequired,\n  isCardFormOpened: PropTypes.bool.isRequired,\n  clientPosition: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  grabPoint: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  dimensions: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nCardListAvatar.defaultProps = {\n  className: '',\n};\n\nexport default CardListAvatar;\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { useUniqueId } from '../../hooks/uniqueId';\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\n\nimport './AddComponent.scss';\n\nfunction AddComponent({\n  isFormOpened,\n  onFormOpenedChange,\n  openCreationFormBtnText,\n  placeholderFormText,\n  submitFormBtnText,\n  onAdd,\n  className,\n  formClassName,\n  style,\n}) {\n  const [content, setContent] = useState('');\n  const handleContentChange = useCallback(event => {\n    const content = event.target.value;\n    setContent(content);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setContent('');\n    onFormOpenedChange(false);\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    if (!content.trim()) return;\n\n    onAdd(content);\n    handleClose();\n  }, [content, handleClose, onAdd]);\n\n  const handleOpen = useCallback(() => {\n    onFormOpenedChange(true);\n  }, []);\n\n  const addComponentId = useUniqueId('add-component');\n  const handleWasClickOutside = useCallback(() => {\n    onFormOpenedChange(false);\n  }, []);\n  useOnClickOutside(addComponentId, handleWasClickOutside);\n\n  const formRef = useRef(null);\n  useEffect(() => {\n    if (isFormOpened) {\n      formRef.current.scrollIntoView(false);\n    }\n  }, [isFormOpened]);\n\n  return (\n    <div\n      id={addComponentId}\n      className={classNames('add-component-wrapper', className)}\n      style={style}\n    >\n      <button\n        className={classNames('open-form-btn', {\n          hidden: isFormOpened,\n        })}\n        onClick={handleOpen}\n      >\n        <h4>{openCreationFormBtnText}</h4>\n      </button>\n      <div\n        ref={node => (formRef.current = node)}\n        className={classNames('form', formClassName, {\n          hidden: !isFormOpened,\n        })}\n      >\n        <textarea\n          autoFocus\n          className='content'\n          value={content}\n          placeholder={placeholderFormText}\n          onChange={handleContentChange}\n        />\n        <div className='form-controls'>\n          <button className='add-btn' onClick={handleAdd}>\n            {submitFormBtnText}\n          </button>\n          <button\n            aria-label='close'\n            className='close-btn'\n            onClick={handleClose}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nAddComponent.propTypes = {\n  isFormOpened: PropTypes.bool,\n  openCreationFormBtnText: PropTypes.string.isRequired,\n  placeholderFormText: PropTypes.string.isRequired,\n  submitFormBtnText: PropTypes.string.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onFormOpenedChange: PropTypes.func.isRequired,\n  formClassName: PropTypes.string,\n  className: PropTypes.string,\n};\n\nAddComponent.defaultProps = {\n  isFormOpened: null,\n  className: '',\n  formClassName: '',\n};\n\nexport default AddComponent;\n","import { useState, useEffect } from 'react';\nimport { uniqueId } from 'lodash';\n\nexport function useUniqueId(seed) {\n  const [id, setUniqueId] = useState(null);\n  useEffect(() => {\n    setUniqueId(uniqueId(seed));\n  }, [seed]);\n  return id;\n}\n","import { useCallback, useEffect } from 'react';\n\nexport function useOnClickOutside(elementId, onClickOutside) {\n  const checkClick = useCallback(\n    event => {\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\n\n      if (wasClickOutside) {\n        onClickOutside();\n      }\n    },\n    [elementId, onClickOutside],\n  );\n\n  useEffect(() => {\n    document.addEventListener('pointerdown', checkClick);\n\n    return function cleanup() {\n      document.removeEventListener('pointerdown', checkClick);\n    };\n  }, [checkClick]);\n}\n","import { useEffect, useRef, useContext } from 'react';\nimport DragDropContext from './internal/DragDropContext';\n\nfunction useScrollable({\n  id,\n  scrollPointOffset = 0,\n  scrollStep = 10,\n  scrolledByTypes = [],\n}) {\n  const scrollableRef = useRef(null);\n\n  const { registerScrollable } = useContext(DragDropContext);\n\n  useEffect(() => {\n    const unregisterScrollable = registerScrollable({\n      id,\n      ref: scrollableRef,\n      scrolledByTypes,\n      scrollPointOffset,\n      scrollStep,\n    });\n\n    return unregisterScrollable;\n  }, [id, scrollStep, scrollPointOffset, scrolledByTypes]);\n\n  return scrollableRef;\n}\n\nexport { useScrollable };\n","import { useRef, useCallback, useState } from 'react';\n\nimport { useDroppable } from './useDroppable';\nimport { binaryLastIndexOf } from '../helpers/binaryLastIndexOf';\n\nconst ITEM_TYPE = {\n  PLACEHOLDER: 'PLACEHOLDER',\n  REGULAR_ITEM: 'REGULAR_ITEM',\n};\n\nconst LIST_TYPE = {\n  HORIZONTAL: 'HORIZONTAL',\n  VERTICAL: 'VERTICAL',\n};\n\nfunction makeListItems(items, itemToIgnoreId, placeholder) {\n  let listItems = items\n    ? items.map(item => ({\n        type: ITEM_TYPE.REGULAR_ITEM,\n        data: item,\n      }))\n    : [];\n\n  const shouldIgnoreItem = itemToIgnoreId !== null;\n  if (shouldIgnoreItem) {\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\n  }\n\n  const shouldShowPlaceholder = placeholder.placeholderIndex !== null;\n  if (shouldShowPlaceholder) {\n    listItems = enrichWithPlaceholder(listItems, placeholder);\n  }\n\n  return listItems;\n}\n\nfunction enrichWithPlaceholder(listItems, placeholder) {\n  listItems.splice(placeholder.placeholderIndex, 0, {\n    type: ITEM_TYPE.PLACEHOLDER,\n    placeholderIndex: placeholder.placeholderIndex,\n    dimensions: placeholder.dimensions,\n  });\n  return listItems;\n}\n\nfunction useDroppableList({ id, acceptedTypes, listType, items }) {\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\n  const [isHoveredByDraggable, setIsHoveredByDraggable] = useState(false);\n\n  const contextRef = useRef({ id, placeholderIndex: null });\n  const itemsRef = useRef([]);\n\n  const setItemRefAt = (item, idx) => {\n    if (!item) return;\n\n    itemsRef.current[idx] = item;\n  };\n\n  const onDraggableEnter = useCallback(draggable => {\n    setIsHoveredByDraggable(true);\n    setPlaceholderGeometry({\n      width: draggable.dimensions.width,\n      height: draggable.dimensions.height,\n    });\n  }, []);\n\n  const onDraggableHover = useCallback(\n    draggable => {\n      const draggableCenter = {\n        x: draggable.position.x + draggable.dimensions.width / 2,\n        y: draggable.position.y + draggable.dimensions.height / 2,\n      };\n\n      let placeholderIdx = binaryLastIndexOf(itemsRef.current, item => {\n        const itemRect = item.getBoundingClientRect();\n\n        switch (listType) {\n          case LIST_TYPE.HORIZONTAL: {\n            let extra = 0;\n            if (itemRect.width > draggable.dimensions.width) {\n              // to avoid swap of placeholder and bigger card back and forth\n              extra = itemRect.width - draggable.dimensions.width;\n            }\n            return itemRect.left + extra < draggableCenter.x;\n          }\n          case LIST_TYPE.VERTICAL: {\n            let extra = 0;\n            if (itemRect.height > draggable.dimensions.height) {\n              // to avoid swap of placeholder and bigger card back and forth\n              extra = itemRect.height - draggable.dimensions.height;\n            }\n            return itemRect.top + extra < draggableCenter.y;\n          }\n          default: {\n            console.error('Unknown list type:', listType);\n          }\n        }\n      });\n\n      placeholderIdx = placeholderIdx !== null ? placeholderIdx : 0;\n\n      contextRef.current.placeholderIndex = placeholderIdx;\n      setPlaceholderIndex(placeholderIdx);\n    },\n    [placeholderIndex, listType],\n  );\n\n  const onDraggableLeave = useCallback(() => {\n    setIsHoveredByDraggable(false);\n    setPlaceholderGeometry(null);\n    setPlaceholderIndex(null);\n    contextRef.current.placeholderIndex = null;\n  }, []);\n\n  const { draggableContext, droppableClassName } = useDroppable({\n    id,\n    context: contextRef.current,\n    acceptedTypes,\n    onDraggableEnter,\n    onDraggableHover,\n    onDraggableLeave,\n  });\n\n  const placeholder = {\n    placeholderIndex,\n    dimensions: placeholderGeometry,\n  };\n  const itemToIgnoreId = draggableContext && draggableContext.id;\n  const listItems = makeListItems(items, itemToIgnoreId, placeholder);\n\n\n\n  return {\n    listItems,\n    setItemRefAt,\n    droppableClassName,\n    isHoveredByDraggable,\n  };\n}\n\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\n","function binaryLastIndexOf(array, predicate) {\n  let leftIdx = 0,\n    rightIdx = array.length - 1;\n\n  while (leftIdx <= rightIdx) {\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\n\n    if (predicate(array[middleIdx])) {\n      leftIdx = middleIdx + 1;\n    } else {\n      rightIdx = middleIdx - 1;\n    }\n  }\n\n  return rightIdx !== -1 ? rightIdx : null;\n}\n\nexport { binaryLastIndexOf };\n","import { useEffect, useContext } from 'react';\n\nimport DragDropContext from './internal/DragDropContext';\n\nfunction useDroppable({\n  id,\n  context,\n  acceptedTypes,\n  onDraggableEnter,\n  onDraggableHover,\n  onDraggableLeave,\n}) {\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\n\n  useEffect(() => {\n    const unregisterDroppable = registerDroppable({\n      id,\n      context,\n      acceptedTypes,\n      onDraggableEnter,\n      onDraggableHover,\n      onDraggableLeave,\n    });\n\n    return unregisterDroppable;\n  }, [\n    id,\n    context,\n    acceptedTypes,\n    onDraggableEnter,\n    onDraggableHover,\n    onDraggableLeave,\n  ]);\n\n  return {\n    draggableContext: draggedObject && draggedObject.context,\n    droppableClassName: 'droppable',\n  };\n}\n\nexport { useDroppable };\n","import React, { useState, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport CardListAvatar from './CardListAvatar';\nimport { Card } from '../Card';\nimport { AddComponent } from '../AddComponent';\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\nimport { useScrollable } from '../../drag-drop/useScrollable';\nimport { useDraggable } from '../../drag-drop/useDraggable';\nimport { DRAGGABLE_TYPE } from '../../constants';\n\nimport {\n  ITEM_TYPE,\n  LIST_TYPE,\n  useDroppableList,\n} from '../../drag-drop/useDroppableList';\n\nimport './CardList.scss';\n\nfunction CardList({\n  id,\n  name,\n  cards,\n  addCard,\n  setListRef,\n  moveList,\n  className,\n}) {\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.CARD], []);\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\n    id,\n    listType: LIST_TYPE.VERTICAL,\n    acceptedTypes,\n    items: cards,\n  });\n\n  const scrolledByTypes = useMemo(() => [DRAGGABLE_TYPE.CARD]);\n  const scrollableRef = useScrollable({\n    id,\n    scrolledByTypes,\n    scrollPointOffset: 10,\n    scrollStep: 15,\n  });\n\n  const dragHandleRef = useRef(null);\n  const listRef = useRef(null);\n\n  const [isCardFormOpened, setIsCardFormOpened] = useState(false);\n\n  const addCardComponent = (\n    <AddComponent\n      isFormOpened={isCardFormOpened}\n      formClassName='card-form'\n      openCreationFormBtnText='Add a card'\n      placeholderFormText='Enter a title for this card...'\n      submitFormBtnText='Add card'\n      onFormOpenedChange={value => setIsCardFormOpened(value)}\n      onAdd={addCard.bind(null, id)}\n    />\n  );\n\n  useDraggable({\n    context: {\n      id,\n    },\n    type: DRAGGABLE_TYPE.LIST,\n    ref: listRef,\n    dragHandleRef,\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\n      <CardListAvatar\n        id={id}\n        name={name}\n        cardListAvatarRef={ref}\n        dragHandleRef={dragHandleRef}\n        scrollableRef={scrollableRef}\n        listItems={listItems}\n        setItemRefAt={setItemRefAt}\n        addCardComponent={addCardComponent}\n        isCardFormOpened={isCardFormOpened}\n        grabPoint={grabPoint}\n        dimensions={dimensions}\n        clientPosition={clientPosition}\n        className={className}\n      />\n    ),\n    onRelease: ({ draggableContext, droppableContext }) => {\n      moveList(\n        draggableContext.id,\n        droppableContext.id,\n        droppableContext.placeholderIndex,\n      );\n    },\n  });\n\n  const setRefs = node => {\n    setListRef(node);\n    listRef.current = node;\n  };\n\n  return (\n    <div id={id} className={classNames(droppableClassName, className)}>\n      <div id={id} ref={setRefs} className='card-list' tabIndex={0}>\n        <header ref={dragHandleRef}>\n          <h2 className='list-title'>{name}</h2>\n        </header>\n        {(Boolean(listItems.length) || isCardFormOpened) && (\n          <ul ref={scrollableRef} className='list-cards'>\n            {listItems.map(\n              (item, idx) =>\n                ({\n                  [ITEM_TYPE.REGULAR_ITEM]: (\n                    <li key={item.data && item.data.id}>\n                      <Card\n                        {...item.data}\n                        className='list-card'\n                        setCardRef={node => setItemRefAt(node, idx)}\n                      />\n                    </li>\n                  ),\n                  [ITEM_TYPE.PLACEHOLDER]: (\n                    <li key='placeholder'>\n                      <div\n                        ref={node => setItemRefAt(node, idx)}\n                        className='placeholder list-card'\n                        style={{\n                          width: item.dimensions && item.dimensions.width,\n                          height: item.dimensions && item.dimensions.height,\n                        }}\n                      />\n                    </li>\n                  ),\n                }[item.type]),\n            )}\n            {isCardFormOpened && addCardComponent}\n          </ul>\n        )}\n        <footer>{!isCardFormOpened && addCardComponent}</footer>\n      </div>\n    </div>\n  );\n}\n\nCardList.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  addCard: PropTypes.func.isRequired,\n  moveList: PropTypes.func.isRequired,\n  setListRef: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nCardList.defaultProps = {\n  className: '',\n};\n\nconst mapDispatchToProps = {\n  addCard: addCardRequest,\n  moveList,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(CardList);\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { useUncontrollableProps } from '../../hooks/uncontrollable';\r\nimport { useScrollByShift } from '../../hooks/scrollByShift';\r\nimport { useScrollable } from '../../drag-drop/useScrollable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, name, lists, addList }) {\r\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.LIST], []);\r\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedTypes,\r\n    items: lists,\r\n  });\r\n\r\n  const scrolledByTypes = useMemo(\r\n    () => [DRAGGABLE_TYPE.LIST, DRAGGABLE_TYPE.CARD],\r\n    [],\r\n  );\r\n  const scrollableRef = useScrollable({\r\n    id,\r\n    scrolledByTypes,\r\n    scrollPointOffset: 60,\r\n    scrollStep: 20,\r\n  });\r\n\r\n  const addComponentUncontrollableProps = useUncontrollableProps([\r\n    {\r\n      propName: 'isFormOpened',\r\n      changeHandlerName: 'onFormOpenedChange',\r\n      defaultValue: false,\r\n    },\r\n  ]);\r\n\r\n  const onScrollablePointerDown = useScrollByShift(scrollableRef);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      onPointerDown={onScrollablePointerDown}\r\n    >\r\n      <h1 className='board-title' style={{ color: name.color }}>\r\n        {name.text}\r\n      </h1>\r\n      <ul ref={scrollableRef} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <li key={item.data && item.data.id}>\r\n                  <CardList\r\n                    className='board-list-zone'\r\n                    setListRef={node => setItemRefAt(node, idx)}\r\n                    {...item.data}\r\n                  />\r\n                </li>\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <li key='placeholder'>\r\n                  <div\r\n                    ref={node => setItemRefAt(node, idx)}\r\n                    className='placeholder board-list-zone'\r\n                    style={{\r\n                      width: item.dimensions && item.dimensions.width,\r\n                      height: item.dimensions && item.dimensions.height,\r\n                    }}\r\n                  />\r\n                </li>\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Add a list'\r\n          placeholderFormText='Enter a list title...'\r\n          submitFormBtnText='Add list'\r\n          onAdd={addList.bind(null, id)}\r\n          {...addComponentUncontrollableProps}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useState } from 'react';\n\nfunction useUncontrollableProps(uncontrollableProps) {\n  return uncontrollableProps.reduce(\n    (props, { propName, changeHandlerName, defaultValue }) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const [value, setValue] = useState(defaultValue);\n      props[propName] = value;\n      props[changeHandlerName] = setValue;\n      return props;\n    },\n    {},\n  );\n}\n\nexport { useUncontrollableProps };\n","import { useCallback } from 'react';\n\nfunction useScrollByShift(scrollableRef) {\n  const scroll = useCallback(event => {\n    const { movementX } = event;\n\n    scrollableRef.current.scrollLeft -= movementX;\n  }, []);\n\n  const finishScroll = useCallback(() => {\n    document.removeEventListener('pointermove', scroll);\n    document.removeEventListener('pointerup', finishScroll);\n  }, []);\n\n  const prepareToScroll = useCallback(() => {\n    document.addEventListener('pointermove', scroll);\n    document.addEventListener('pointerup', finishScroll);\n  }, []);\n\n  const onScrollablePointerDown = prepareToScroll;\n\n  return onScrollablePointerDown;\n}\n\nexport { useScrollByShift };\n","import React from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  return (\n    <DragDropManager>\n      <BoardContainer id={0} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\n\nconst initialState = {\n  board: null,\n};\n\nexport const board = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_BOARD.SUCCESS: {\n      return {\n        ...state,\n        board: action.board,\n      };\n    }\n    case MOVE.CARD: {\n      const { cardId, destinationListId, indexInList } = action;\n\n      let cardToMove = null;\n      const updatedLists = state.board.lists.map(list => {\n        const found = list.cards.find(item => item.id === cardId);\n        if (found) {\n          cardToMove = found;\n          return {\n            ...list,\n            cards: list.cards.filter(item => item.id !== cardId),\n          };\n        }\n        return list;\n      });\n\n      if (cardToMove) {\n        const dstList = updatedLists.find(\n          list => list.id === destinationListId,\n        );\n        if (dstList) {\n          dstList.cards.splice(indexInList, 0, cardToMove);\n        } else {\n          console.error('List with id', destinationListId, 'not found');\n        }\n      } else {\n        console.error('List containing card with id', cardId, 'not found');\n      }\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: updatedLists,\n        },\n      };\n    }\n    case MOVE.LIST: {\n      const { listId, destinationBoardId, newListIdx } = action;\n\n      if (state.board.id !== destinationBoardId) {\n        console.error('Destination board id does not match current board id');\n      }\n\n      const lastListIdx = state.board.lists.findIndex(\n        list => list.id === listId,\n      );\n      if (newListIdx === lastListIdx) {\n        return state;\n      }\n\n      const listToMove = state.board.lists[lastListIdx];\n      const updatedLists = [...state.board.lists];\n\n      updatedLists.splice(lastListIdx, 1);\n      updatedLists.splice(newListIdx, 0, listToMove);\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: updatedLists,\n        },\n      };\n    }\n    case ADD_CARD.SUCCESS: {\n      const { listId, card } = action;\n\n      const updatedLists = state.board.lists.map(list =>\n        list.id === listId\n          ? {\n              ...list,\n              cards: list.cards.concat(card),\n            }\n          : list,\n      );\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: updatedLists,\n        },\n      };\n    }\n\n    case ADD_LIST.SUCCESS: {\n      const { boardId, list } = action;\n\n      if (state.board.id !== boardId) {\n        console.error('Board id does not match current board id');\n      }\n\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: state.board.lists.concat(list),\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n// import { createBrowserHistory } from 'history';\n// import { connectRouter } from 'connected-react-router';\n\nimport { board } from '../ducks/board/reducer';\n\n// const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  // router: connectRouter(history),\n  board,\n});\n\nexport { rootReducer };\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: {\r\n    text: 'Project \"Kanban board\"',\r\n    color: 'white',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an opportunity to edit cards / columns',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an opportunity to delete cards / columns',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an opportunity to move cards',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an opportunity to move columns',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an opportunity to create new cards',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an opportunity to create new columns',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'A flexible drag drop system',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Add an ability to have several accepted draggable types for a droppable object',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Get rid of placeholder movement back and forth',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an ability to move scrollbar for a draggable object',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Add an ability to scroll a board by clicking it and by an attempt to shift it',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Solve a text overflow problem',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Make a form of creating new card visible at the opening',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Make cards and columns accessible from a keyboard',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Forbid of creation of empty cards',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Don\\'t start dragging after a short click',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Don\\'t start dragging by a right / middle mouse click',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Highlight a placeholder for a dragging column with a color',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Add support of a drag n drop feature for mobile devices',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Add a realistic animation for a dragging card',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import { uniqueId } from 'lodash';\n\nimport { mockBoard } from './mocks';\n\n/**\n * This file is going to send requests to server and return server responses in the future\n */\nexport function fetchBoardRequest(id) {\n  return mockBoard;\n}\n\nexport function addCardRequest(listId, content) {\n  const newCard = {\n    id: uniqueId('card'),\n    content,\n  };\n  return { listId, card: newCard };\n}\n\nexport function addListRequest(boardId, content) {\n  const newList = {\n    id: uniqueId('list'),\n    name: content,\n    cards: [],\n  };\n  return { boardId, list: newList };\n}\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\n\nimport {\n  addCardError,\n  addCardSuccess,\n  addListError,\n  addListSuccess,\n  fetchBoardError,\n  fetchBoardSuccess,\n} from './actions';\n\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\n\nimport * as services from './services';\n\nfunction* fetchBoard({ id }) {\n  try {\n    const board = yield call(services.fetchBoardRequest, id);\n    yield put(fetchBoardSuccess(board));\n  } catch (error) {\n    yield put(fetchBoardError(error));\n  }\n}\n\nfunction* addCard({ listId, content }) {\n  try {\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\n  } catch (error) {\n    yield put(addCardError(error));\n  }\n}\n\nfunction* addList({ boardId, content }) {\n  try {\n    const newListInfo = yield call(services.addListRequest, boardId, content);\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\n  } catch (error) {\n    yield put(addListError(error));\n  }\n}\n\nexport function* watchBoardRequests() {\n  yield all([\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\n    takeLatest(ADD_CARD.REQUEST, addCard),\n    takeLatest(ADD_LIST.REQUEST, addList),\n  ]);\n}\n","import { all, call } from 'redux-saga/effects';\nimport { watchBoardRequests } from '../ducks/board/saga';\n\nexport default function* rootSaga() {\n  yield all([call(watchBoardRequests)]);\n}\n","import createSagaMiddleware from 'redux-saga';\n\nimport { applyMiddleware, createStore } from 'redux';\n// import { routerMiddleware } from 'connected-react-router';\n\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { rootReducer } from './rootReducer';\nimport rootSaga from './rootSaga';\n\n// const navigationMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}