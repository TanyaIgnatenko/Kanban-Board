{"version":3,"sources":["drag-drop/internal/DragDropContext.js","helpers/scrollbar.js","constants.js","drag-drop/DragDropManager.js","helpers/visibility.js","helpers/inside.js","helpers/moveTo.js","helpers/math.js","helpers/grabAt.js","components/Card/CardAvatar.js","drag-drop/useDraggable.js","ducks/board/action-types.js","ducks/board/actions.js","components/Card/Card.js","components/CardList/CardListAvatar.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","drag-drop/useScrollable.js","drag-drop/useDroppableList.js","helpers/binaryLastIndexOf.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","hooks/uncontrollable.js","hooks/scrollByShift.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","registerScrollable","hasVerticalScrollbar","element","scrollHeight","clientHeight","hasHorizontalScrollbar","scrollWidth","clientWidth","DRAGGABLE_TYPE","CARD","LIST","MOVEMENT","BOTTOM","TOP","RIGHT","LEFT","MOUSE_BUTTON","MIDDLE","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","scrollables","scrollable","_this","id","droppable","_ref","dragHandleRef","draggable","Object","objectWithoutProperties","handle","current","onPointerDown","event","which","grabPosition","x","clientX","y","clientY","draggedObjectRect","ref","getBoundingClientRect","grabShift","left","top","bindedStartDragIfMove","startDragIfMove","objectSpread","document","addEventListener","resetPreparationToDrag","stopPropagation","removeEventListener","newX","newY","Math","abs","grabDraggable","_ref2","context","type","renderAvatar","onGrab","onMove","onRelease","dimensions","width","height","position","movement","dndContext","manageDroppables","setState","moveDraggable","releaseDraggable","movementX","movementY","currentDraggedObject","currentHoveredDroppable","newPosition","push","scrollIfNedeed","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","node","style","visibility","hideElement","elementFromPoint","showElement","closest","acceptedTypes","includes","parentNode","console","warn","setDraggedObjectRef","draggedObjectNode","cursorPosition","_this2","this","values","forEach","scrollStep","scrollPointOffset","scrolledByTypes","scrollableNode","point","elementRect","right","bottom","inside","clientLeft","scrollLeft","clientTop","scrollTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","props","react_default","a","createElement","Fragment","clientPosition","grabPoint","internal_DragDropContext","Provider","value","Component","moveTo","concat","distance","point1","point2","sqrt","pow","grabAt","b","c","center","distanceToCenter","diff","angle","sign","acos","transformOrigin","transform","CardAvatar","content","cardAvatarRef","className","_useState","useState","_useState2","slicedToArray","rotationStyle","setRotationStyle","applyGrabAnimation","useCallback","removeGrabAnimation","useEffect","setTimeout","classNames","assign","defaultProps","useDraggable","_ref$onGrab","_ref$onMove","_ref$onRelease","useContext","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","Card","setCardRef","moveCardToList","cardRef","useRef","Card_CardAvatar","_ref3","placeholderIndex","tabIndex","mapDispatchToProps","cardId","destinationListId","indexInList","connect","CardListAvatar","name","cardListAvatarRef","scrollableRef","listItems","setItemRefAt","addCardComponent","isCardFormOpened","Boolean","length","map","item","idx","key","data","components_Card_Card","AddComponent","isFormOpened","onFormOpenedChange","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","setContent","handleContentChange","target","handleClose","handleAdd","trim","handleOpen","addComponentId","seed","setUniqueId","uniqueId","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","hidden","onClick","autoFocus","placeholder","onChange","aria-label","useScrollable","_ref$scrollPointOffse","_ref$scrollStep","_ref$scrolledByTypes","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","HORIZONTAL","VERTICAL","makeListItems","items","itemToIgnoreId","filter","splice","enrichWithPlaceholder","useDroppableList","listType","setPlaceholderIndex","_useState3","_useState4","placeholderGeometry","setPlaceholderGeometry","_useState5","_useState6","isHoveredByDraggable","setIsHoveredByDraggable","contextRef","itemsRef","draggableCenter","placeholderIdx","array","predicate","leftIdx","rightIdx","middleIdx","floor","binaryLastIndexOf","itemRect","extra","_useDroppable","_useContext","droppableClassName","useDroppable","CardList","cards","addCard","setListRef","moveList","useMemo","_useDroppableList","listRef","setIsCardFormOpened","components_AddComponent_AddComponent","bind","CardList_CardListAvatar","_ITEM_TYPE$REGULAR_IT","defineProperty","destinationBoardId","newListIdx","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","backgroundSize","useBoardStyle","addComponentUncontrollableProps","propName","changeHandlerName","defaultValue","reduce","setValue","onScrollablePointerDown","scroll","finishScroll","useScrollByShift","text","components_CardList_CardList","fetchBoard","rest","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","updatedLists","found","find","dstList","lastListIdx","findIndex","listToMove","toConsumableArray","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.0dc647b6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n  registerScrollable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","function hasVerticalScrollbar(element) {\r\n  return element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nfunction hasHorizontalScrollbar(element) {\r\n  return element.scrollWidth > element.clientWidth;\r\n}\r\n\r\nfunction findNearestVerticalScrollbar(position) {\r\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\r\n  while (elementFromPosition) {\r\n    if (hasVerticalScrollbar(elementFromPosition)) {\r\n      return elementFromPosition;\r\n    }\r\n    elementFromPosition = elementFromPosition.parentNode;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction findNearestHorizontalScrollbar(position) {\r\n  let elementFromPosition = document.elementFromPoint(position.x, position.y);\r\n  while (elementFromPosition) {\r\n    if (hasHorizontalScrollbar(elementFromPosition)) {\r\n      return elementFromPosition;\r\n    }\r\n    elementFromPosition = elementFromPosition.parentNode;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport {\r\n  hasVerticalScrollbar,\r\n  hasHorizontalScrollbar,\r\n  findNearestVerticalScrollbar,\r\n  findNearestHorizontalScrollbar,\r\n};\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nconst MOVEMENT = {\r\n  BOTTOM: 'BOTTOM',\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  LEFT: 'LEFT',\r\n};\r\n\r\nconst MOUSE_BUTTON = {\r\n  LEFT: 1,\r\n  MIDDLE: 2,\r\n  RIGHT: 3,\r\n};\r\n\r\nexport { DRAGGABLE_TYPE, MOVEMENT, MOUSE_BUTTON };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nimport {\r\n  hasHorizontalScrollbar,\r\n  hasVerticalScrollbar,\r\n} from '../helpers/scrollbar';\r\n\r\nimport { hideElement, showElement } from '../helpers/visibility';\r\nimport { MOUSE_BUTTON, MOVEMENT } from '../constants';\r\nimport { inside } from '../helpers/inside';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n  scrollables = {};\r\n\r\n  registerScrollable = scrollable => {\r\n    this.scrollables[scrollable.id] = scrollable;\r\n    return () => {\r\n      delete this.scrollables[scrollable.id];\r\n    };\r\n  };\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {\r\n      delete this.droppables[droppable.id];\r\n    };\r\n  };\r\n\r\n  registerDraggable = ({ dragHandleRef, ...draggable }) => {\r\n    const handle = dragHandleRef.current;\r\n\r\n    const onPointerDown = event => {\r\n      const { which: mouseButton } = event;\r\n      if (mouseButton !== MOUSE_BUTTON.LEFT) return;\r\n\r\n      const { clientX, clientY } = event;\r\n      const grabPosition = {\r\n        x: clientX,\r\n        y: clientY,\r\n      };\r\n      const draggedObjectRect = draggable.ref.current.getBoundingClientRect();\r\n      const grabShift = {\r\n        x: grabPosition.x - draggedObjectRect.left,\r\n        y: grabPosition.y - draggedObjectRect.top,\r\n      };\r\n\r\n      this.bindedStartDragIfMove = event =>\r\n        this.startDragIfMove(\r\n          { handle, ...draggable },\r\n          grabPosition,\r\n          grabShift,\r\n          event,\r\n        );\r\n\r\n      document.addEventListener('pointermove', this.bindedStartDragIfMove);\r\n      document.addEventListener('pointerup', this.resetPreparationToDrag);\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    handle.addEventListener('pointerdown', onPointerDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('pointerdown', onPointerDown);\r\n    };\r\n  };\r\n\r\n  startDragIfMove = (draggable, grabPosition, grabShift, event) => {\r\n    const { clientX: newX, clientY: newY } = event;\r\n\r\n    if (\r\n      Math.abs(newX - grabPosition.x) > 2 ||\r\n      Math.abs(newY - grabPosition.y) > 2\r\n    ) {\r\n      document.removeEventListener('pointermove', this.bindedStartDragIfMove);\r\n      document.removeEventListener('pointerup', this.resetPreparationToDrag);\r\n\r\n      this.grabDraggable({\r\n        grabShift,\r\n        ...draggable,\r\n      });\r\n    }\r\n  };\r\n\r\n  resetPreparationToDrag = () => {\r\n    document.removeEventListener('pointermove', this.bindedStartDragIfMove);\r\n    document.removeEventListener('pointerup', this.resetPreparationToDrag);\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabShift,\r\n    context,\r\n    type,\r\n    ref,\r\n    handle,\r\n    renderAvatar,\r\n    onGrab,\r\n    onMove,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = ref.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderAvatar,\r\n      handle,\r\n      onGrab,\r\n      onMove,\r\n      onRelease,\r\n      grabShift,\r\n      dimensions: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n      movement: [],\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('pointermove', this.moveDraggable);\r\n        document.addEventListener('pointerup', this.releaseDraggable);\r\n      },\r\n    );\r\n\r\n    this.draggedObject.onGrab();\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n    registerScrollable: this.registerScrollable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { movementX, movementY } = event;\r\n    const { grabShift } = this.draggedObject;\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    const newPosition = {\r\n      x: clientX - grabShift.x,\r\n      y: clientY - grabShift.y,\r\n    };\r\n    currentDraggedObject.position = newPosition;\r\n\r\n    const movement = [];\r\n    if (movementX) {\r\n      movement.push(movementX > 0 ? MOVEMENT.RIGHT : MOVEMENT.LEFT);\r\n    }\r\n    if (movementY) {\r\n      movement.push(movementY > 0 ? MOVEMENT.BOTTOM : MOVEMENT.TOP);\r\n    }\r\n    currentDraggedObject.movement = movement;\r\n\r\n    this.scrollIfNedeed({ x: clientX, y: clientY });\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n\r\n    currentDraggedObject.onMove({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n  };\r\n\r\n  scrollIfNedeed(cursorPosition) {\r\n    Object.values(this.scrollables).forEach(scrollable => {\r\n      const {\r\n        scrollStep,\r\n        scrollPointOffset,\r\n        scrolledByTypes,\r\n        ref: { current: scrollableNode },\r\n      } = scrollable;\r\n\r\n      if (!scrollableNode) return;\r\n\r\n      if (!scrolledByTypes.includes(this.draggedObject.type)) return;\r\n\r\n      if (!inside(cursorPosition, scrollableNode)) return;\r\n\r\n      if (hasHorizontalScrollbar(scrollableNode)) {\r\n        if (cursorPosition.x <= scrollableNode.clientLeft + scrollPointOffset) {\r\n          scrollableNode.scrollLeft -= scrollStep;\r\n        } else if (\r\n          cursorPosition.x >=\r\n          scrollableNode.clientWidth - scrollPointOffset\r\n        ) {\r\n          scrollableNode.scrollLeft += scrollStep;\r\n        }\r\n      }\r\n      if (hasVerticalScrollbar(scrollableNode)) {\r\n        if (cursorPosition.y <= scrollableNode.clientTop + scrollPointOffset) {\r\n          scrollableNode.scrollTop -= scrollStep;\r\n        } else if (\r\n          cursorPosition.y >=\r\n          scrollableNode.clientWidth - scrollPointOffset\r\n        ) {\r\n          scrollableNode.scrollTop += scrollStep;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('pointermove', this.moveDraggable);\r\n    document.removeEventListener('pointerup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, dimensions } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + dimensions.width / 2,\r\n      y: position.y + dimensions.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    hideElement(draggedNode);\r\n    let element = document.elementFromPoint(position.x, position.y);\r\n    showElement(draggedNode);\r\n\r\n    while (element) {\r\n      const droppable = element.closest('.droppable');\r\n\r\n      if (!droppable) return null;\r\n\r\n      if (!this.droppables[droppable.id]) {\r\n        console.warn('Unregistered droppable with id:', droppable.id);\r\n\r\n        element = droppable.parentNode;\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        this.droppables[droppable.id].acceptedTypes.includes(\r\n          this.draggedObject.type,\r\n        )\r\n      ) {\r\n        return droppable;\r\n      }\r\n\r\n      element = droppable.parentNode;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderAvatar({\r\n            clientPosition: draggedObjectPosition,\r\n            grabPoint: draggedObject.grabShift,\r\n            dimensions: draggedObject.dimensions,\r\n            ref: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDragDropManager.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default DragDropManager;\r\n","function hideElement(element) {\r\n  if (element) {\r\n    element.style.visibility = 'hidden';\r\n  }\r\n}\r\n\r\nfunction showElement(element) {\r\n  if (element) {\r\n    element.style.visibility = 'visible';\r\n  }\r\n}\r\n\r\nexport { hideElement, showElement };\r\n","function inside(point, element) {\r\n  const elementRect = element.getBoundingClientRect();\r\n  return (\r\n    point.x >= elementRect.left &&\r\n    point.x <= elementRect.right &&\r\n    point.y >= elementRect.top &&\r\n    point.y <= elementRect.bottom\r\n  );\r\n}\r\n\r\nexport { inside };\r\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","function distance(point1, point2) {\r\n  return Math.sqrt((point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2);\r\n}\r\n\r\n/**\r\n * return angle which is opposite to c\r\n */\r\nfunction findTriangleAngle(a, b, c) {\r\n  return Math.acos((a * a + b * b - c * c) / (2 * a * b));\r\n}\r\n\r\nexport { distance, findTriangleAngle };\r\n","import { distance, findTriangleAngle } from './math';\r\n\r\nfunction grabAt(grabPoint, dimensions) {\r\n  const center = { x: dimensions.width / 2, y: dimensions.height / 2 };\r\n\r\n  const distanceToCenter = distance(grabPoint, center);\r\n  const desiredCenterPosition = {\r\n    x: grabPoint.x,\r\n    y: grabPoint.y + distanceToCenter,\r\n  };\r\n  const diff = distance(center, desiredCenterPosition);\r\n\r\n  const sign = Math.sign(center.x - grabPoint.x);\r\n\r\n  const angle =\r\n    sign * findTriangleAngle(distanceToCenter, distanceToCenter, diff);\r\n\r\n  return {\r\n    transformOrigin: `${(grabPoint.x / dimensions.width) *\r\n      100}% ${(grabPoint.y / dimensions.height) * 100}%`,\r\n    transform: `rotate(${angle}rad)`,\r\n  };\r\n}\r\n\r\nexport { grabAt };\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { moveTo } from '../../helpers/moveTo';\r\nimport { grabAt } from '../../helpers/grabAt';\r\n\r\nfunction CardAvatar({\r\n  id,\r\n  content,\r\n  cardAvatarRef,\r\n  className,\r\n  grabPoint,\r\n  dimensions,\r\n  clientPosition,\r\n}) {\r\n  const [rotationStyle, setRotationStyle] = useState({});\r\n\r\n  const applyGrabAnimation = useCallback(() => {\r\n    const rotationStyle = grabAt(grabPoint, dimensions);\r\n    setRotationStyle(rotationStyle);\r\n  }, []);\r\n\r\n  const removeGrabAnimation = useCallback(() => {\r\n    setRotationStyle({});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(applyGrabAnimation, 5);\r\n\r\n    return removeGrabAnimation;\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={cardAvatarRef}\r\n      className={classNames('card', 'dragged', className)}\r\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\r\n    >\r\n      <h4 className='card-content'>{content}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nCardAvatar.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  cardAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  clientPosition: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  grabPoint: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  dimensions: PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCardAvatar.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default CardAvatar;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable({\r\n  ref,\r\n  type,\r\n  context,\r\n  dragHandleRef,\r\n  renderAvatar,\r\n  onGrab = () => {},\r\n  onMove = () => {},\r\n  onRelease = () => {},\r\n}) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable({\r\n      ref,\r\n      type,\r\n      context,\r\n      dragHandleRef,\r\n      renderAvatar,\r\n      onGrab,\r\n      onMove,\r\n      onRelease,\r\n    });\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    ref,\r\n    type,\r\n    context,\r\n    dragHandleRef,\r\n    renderAvatar,\r\n    onGrab,\r\n    onMove,\r\n    onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, newListIdx) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    newListIdx,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport CardAvatar from './CardAvatar';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    ref: cardRef,\r\n    dragHandleRef: cardRef,\r\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\r\n      <CardAvatar\r\n        id={id}\r\n        cardAvatarRef={ref}\r\n        content={content}\r\n        className={className}\r\n        grabPoint={grabPoint}\r\n        dimensions={dimensions}\r\n        clientPosition={clientPosition}\r\n      />\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.placeholderIndex,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card', className)}\r\n      tabIndex={0}\r\n    >\r\n      <h4 className='card-content'>{content}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card } from '../Card';\r\nimport { moveTo } from '../../helpers/moveTo';\r\nimport { grabAt } from '../../helpers/grabAt';\r\n\r\nfunction CardListAvatar({\r\n  id,\r\n  name,\r\n  cardListAvatarRef,\r\n  dragHandleRef,\r\n  scrollableRef,\r\n  listItems,\r\n  setItemRefAt,\r\n  addCardComponent,\r\n  isCardFormOpened,\r\n  grabPoint,\r\n  dimensions,\r\n  clientPosition,\r\n  className,\r\n}) {\r\n  const [rotationStyle, setRotationStyle] = useState({});\r\n  useEffect(() => {\r\n    const rotationStyle = grabAt(grabPoint, dimensions);\r\n    setTimeout(() => {\r\n      setRotationStyle(rotationStyle);\r\n    }, 2);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={cardListAvatarRef}\r\n      className={classNames('card-list', 'dragged', className)}\r\n      style={Object.assign(moveTo(clientPosition), rotationStyle)}\r\n    >\r\n      <header ref={dragHandleRef}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {(Boolean(listItems.length) || isCardFormOpened) && (\r\n        <ul ref={scrollableRef} className='list-cards'>\r\n          {listItems.map((item, idx) => (\r\n            <li key={item.data.id}>\r\n              <Card\r\n                {...item.data}\r\n                setCardRef={node => setItemRefAt(node, idx)}\r\n                className='list-card'\r\n              />\r\n            </li>\r\n          ))}\r\n          {isCardFormOpened && addCardComponent}\r\n        </ul>\r\n      )}\r\n      <footer>{!isCardFormOpened && addCardComponent}</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nCardListAvatar.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  cardListAvatarRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  dragHandleRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  scrollableRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  listItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      data: PropTypes.shape({\r\n        id: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n          .isRequired,\r\n        content: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n      type: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  setItemRefAt: PropTypes.func.isRequired,\r\n  addCardComponent: PropTypes.element.isRequired,\r\n  isCardFormOpened: PropTypes.bool.isRequired,\r\n  clientPosition: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  grabPoint: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  dimensions: PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCardListAvatar.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default CardListAvatar;\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  isFormOpened,\r\n  onFormOpenedChange,\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n  style,\r\n}) {\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    onFormOpenedChange(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    if (!content.trim()) return;\r\n\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    onFormOpenedChange(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    onFormOpenedChange(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    if (isFormOpened) {\r\n      formRef.current.scrollIntoView(false);\r\n    }\r\n  }, [isFormOpened]);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n      style={style}\r\n    >\r\n      <button\r\n        className={classNames('open-form-btn', {\r\n          hidden: isFormOpened,\r\n        })}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        ref={node => (formRef.current = node)}\r\n        className={classNames('form', formClassName, {\r\n          hidden: !isFormOpened,\r\n        })}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='form-controls'>\r\n          <button className='add-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button\r\n            aria-label='close'\r\n            className='close-btn'\r\n            onClick={handleClose}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  isFormOpened: PropTypes.bool,\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  onFormOpenedChange: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  isFormOpened: null,\r\n  className: '',\r\n  formClassName: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useState, useEffect } from 'react';\r\nimport { uniqueId } from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const [id, setUniqueId] = useState(null);\r\n  useEffect(() => {\r\n    setUniqueId(uniqueId(seed));\r\n  }, [seed]);\r\n  return id;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('pointerdown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('pointerdown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","import { useEffect, useRef, useContext } from 'react';\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useScrollable({\r\n  id,\r\n  scrollPointOffset = 0,\r\n  scrollStep = 10,\r\n  scrolledByTypes = [],\r\n}) {\r\n  const scrollableRef = useRef(null);\r\n\r\n  const { registerScrollable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterScrollable = registerScrollable({\r\n      id,\r\n      ref: scrollableRef,\r\n      scrolledByTypes,\r\n      scrollPointOffset,\r\n      scrollStep,\r\n    });\r\n\r\n    return unregisterScrollable;\r\n  }, [id, scrollStep, scrollPointOffset, scrolledByTypes]);\r\n\r\n  return scrollableRef;\r\n}\r\n\r\nexport { useScrollable };\r\n","import { useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { binaryLastIndexOf } from '../helpers/binaryLastIndexOf';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction makeListItems(items, itemToIgnoreId, placeholder) {\r\n  let listItems = items\r\n    ? items.map(item => ({\r\n        type: ITEM_TYPE.REGULAR_ITEM,\r\n        data: item,\r\n      }))\r\n    : [];\r\n\r\n  const shouldIgnoreItem = itemToIgnoreId !== null;\r\n  if (shouldIgnoreItem) {\r\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\r\n  }\r\n\r\n  const shouldShowPlaceholder = placeholder.placeholderIndex !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems = enrichWithPlaceholder(listItems, placeholder);\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction enrichWithPlaceholder(listItems, placeholder) {\r\n  listItems.splice(placeholder.placeholderIndex, 0, {\r\n    type: ITEM_TYPE.PLACEHOLDER,\r\n    placeholderIndex: placeholder.placeholderIndex,\r\n    dimensions: placeholder.dimensions,\r\n  });\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({ id, acceptedTypes, listType, items }) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n  const [isHoveredByDraggable, setIsHoveredByDraggable] = useState(false);\r\n\r\n  const contextRef = useRef({ id, placeholderIndex: null });\r\n  const itemsRef = useRef([]);\r\n\r\n  const setItemRefAt = (item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemsRef.current[idx] = item;\r\n  };\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setIsHoveredByDraggable(true);\r\n    setPlaceholderGeometry({\r\n      width: draggable.dimensions.width,\r\n      height: draggable.dimensions.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.dimensions.width / 2,\r\n        y: draggable.position.y + draggable.dimensions.height / 2,\r\n      };\r\n\r\n      let placeholderIdx = binaryLastIndexOf(itemsRef.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n\r\n        switch (listType) {\r\n          case LIST_TYPE.HORIZONTAL: {\r\n            let extra = 0;\r\n            if (itemRect.width > draggable.dimensions.width) {\r\n              // to avoid swap of placeholder and bigger card back and forth\r\n              extra = itemRect.width - draggable.dimensions.width;\r\n            }\r\n            return itemRect.left + extra < draggableCenter.x;\r\n          }\r\n          case LIST_TYPE.VERTICAL: {\r\n            let extra = 0;\r\n            if (itemRect.height > draggable.dimensions.height) {\r\n              // to avoid swap of placeholder and bigger card back and forth\r\n              extra = itemRect.height - draggable.dimensions.height;\r\n            }\r\n            return itemRect.top + extra < draggableCenter.y;\r\n          }\r\n          default: {\r\n            console.error('Unknown list type:', listType);\r\n          }\r\n        }\r\n      });\r\n\r\n      placeholderIdx = placeholderIdx !== null ? placeholderIdx : 0;\r\n\r\n      contextRef.current.placeholderIndex = placeholderIdx;\r\n      setPlaceholderIndex(placeholderIdx);\r\n    },\r\n    [placeholderIndex, listType],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setIsHoveredByDraggable(false);\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    contextRef.current.placeholderIndex = null;\r\n  }, []);\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: contextRef.current,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  const placeholder = {\r\n    placeholderIndex,\r\n    dimensions: placeholderGeometry,\r\n  };\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  const listItems = makeListItems(items, itemToIgnoreId, placeholder);\r\n\r\n\r\n\r\n  return {\r\n    listItems,\r\n    setItemRefAt,\r\n    droppableClassName,\r\n    isHoveredByDraggable,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","function binaryLastIndexOf(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      leftIdx = middleIdx + 1;\r\n    } else {\r\n      rightIdx = middleIdx - 1;\r\n    }\r\n  }\r\n\r\n  return rightIdx !== -1 ? rightIdx : null;\r\n}\r\n\r\nexport { binaryLastIndexOf };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable({\r\n  id,\r\n  context,\r\n  acceptedTypes,\r\n  onDraggableEnter,\r\n  onDraggableHover,\r\n  onDraggableLeave,\r\n}) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable({\r\n      id,\r\n      context,\r\n      acceptedTypes,\r\n      onDraggableEnter,\r\n      onDraggableHover,\r\n      onDraggableLeave,\r\n    });\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    id,\r\n    context,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: 'droppable',\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useState, useRef, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport CardListAvatar from './CardListAvatar';\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useScrollable } from '../../drag-drop/useScrollable';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.CARD], []);\r\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedTypes,\r\n    items: cards,\r\n  });\r\n\r\n  const scrolledByTypes = useMemo(() => [DRAGGABLE_TYPE.CARD]);\r\n  const scrollableRef = useScrollable({\r\n    id,\r\n    scrolledByTypes,\r\n    scrollPointOffset: 60,\r\n    scrollStep: 20,\r\n  });\r\n\r\n  const dragHandleRef = useRef(null);\r\n  const listRef = useRef(null);\r\n\r\n  const [isCardFormOpened, setIsCardFormOpened] = useState(false);\r\n\r\n  const addCardComponent = (\r\n    <AddComponent\r\n      isFormOpened={isCardFormOpened}\r\n      formClassName='card-form'\r\n      openCreationFormBtnText='Добавить ещё одну карточку'\r\n      placeholderFormText='Введите название карточки'\r\n      submitFormBtnText='Добавить карточку'\r\n      onFormOpenedChange={value => setIsCardFormOpened(value)}\r\n      onAdd={addCard.bind(null, id)}\r\n    />\r\n  );\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    ref: listRef,\r\n    dragHandleRef,\r\n    renderAvatar: ({ clientPosition, grabPoint, dimensions, ref }) => (\r\n      <CardListAvatar\r\n        id={id}\r\n        name={name}\r\n        cardListAvatarRef={ref}\r\n        dragHandleRef={dragHandleRef}\r\n        scrollableRef={scrollableRef}\r\n        listItems={listItems}\r\n        setItemRefAt={setItemRefAt}\r\n        addCardComponent={addCardComponent}\r\n        isCardFormOpened={isCardFormOpened}\r\n        grabPoint={grabPoint}\r\n        dimensions={dimensions}\r\n        clientPosition={clientPosition}\r\n        className={className}\r\n      />\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.placeholderIndex,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div id={id} className={classNames(droppableClassName, className)}>\r\n      <div id={id} ref={setRefs} className='card-list' tabIndex={0}>\r\n        <header ref={dragHandleRef}>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {(Boolean(listItems.length) || isCardFormOpened) && (\r\n          <ul ref={scrollableRef} className='list-cards'>\r\n            {listItems.map(\r\n              (item, idx) =>\r\n                ({\r\n                  [ITEM_TYPE.REGULAR_ITEM]: (\r\n                    <li key={item.data && item.data.id}>\r\n                      <Card\r\n                        {...item.data}\r\n                        className='list-card'\r\n                        setCardRef={node => setItemRefAt(node, idx)}\r\n                      />\r\n                    </li>\r\n                  ),\r\n                  [ITEM_TYPE.PLACEHOLDER]: (\r\n                    <li key='placeholder'>\r\n                      <div\r\n                        ref={node => setItemRefAt(node, idx)}\r\n                        className='placeholder list-card'\r\n                        style={{\r\n                          width: item.dimensions && item.dimensions.width,\r\n                          height: item.dimensions && item.dimensions.height,\r\n                        }}\r\n                      />\r\n                    </li>\r\n                  ),\r\n                }[item.type]),\r\n            )}\r\n            {isCardFormOpened && addCardComponent}\r\n          </ul>\r\n        )}\r\n        <footer>{!isCardFormOpened && addCardComponent}</footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { useUncontrollableProps } from '../../hooks/uncontrollable';\r\nimport { useScrollByShift } from '../../hooks/scrollByShift';\r\nimport { useScrollable } from '../../drag-drop/useScrollable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, name, lists, addList }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const acceptedTypes = useMemo(() => [DRAGGABLE_TYPE.LIST], []);\r\n  const { setItemRefAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedTypes,\r\n    items: lists,\r\n  });\r\n\r\n  const scrolledByTypes = useMemo(\r\n    () => [DRAGGABLE_TYPE.LIST, DRAGGABLE_TYPE.CARD],\r\n    [],\r\n  );\r\n  const scrollableRef = useScrollable({\r\n    id,\r\n    scrolledByTypes,\r\n    scrollPointOffset: 60,\r\n    scrollStep: 20,\r\n  });\r\n\r\n  const addComponentUncontrollableProps = useUncontrollableProps([\r\n    {\r\n      propName: 'isFormOpened',\r\n      changeHandlerName: 'onFormOpenedChange',\r\n      defaultValue: false,\r\n    },\r\n  ]);\r\n\r\n  const onScrollablePointerDown = useScrollByShift(scrollableRef);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n      onPointerDown={onScrollablePointerDown}\r\n    >\r\n      <h1 className='board-title' style={{ color: name.color }}>\r\n        {name.text}\r\n      </h1>\r\n      <ul ref={scrollableRef} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <li key={item.data && item.data.id}>\r\n                  <CardList\r\n                    className='board-list-zone'\r\n                    setListRef={node => setItemRefAt(node, idx)}\r\n                    {...item.data}\r\n                  />\r\n                </li>\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <li key='placeholder'>\r\n                  <div\r\n                    ref={node => setItemRefAt(node, idx)}\r\n                    className='placeholder board-list-zone'\r\n                    style={{\r\n                      width: item.dimensions && item.dimensions.width,\r\n                      height: item.dimensions && item.dimensions.height,\r\n                    }}\r\n                  />\r\n                </li>\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n          {...addComponentUncontrollableProps}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import { useState } from 'react';\r\n\r\nfunction useUncontrollableProps(uncontrollableProps) {\r\n  return uncontrollableProps.reduce(\r\n    (props, { propName, changeHandlerName, defaultValue }) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const [value, setValue] = useState(defaultValue);\r\n      props[propName] = value;\r\n      props[changeHandlerName] = setValue;\r\n      return props;\r\n    },\r\n    {},\r\n  );\r\n}\r\n\r\nexport { useUncontrollableProps };\r\n","import { useCallback } from 'react';\r\n\r\nfunction useScrollByShift(scrollableRef) {\r\n  const scroll = useCallback(event => {\r\n    const { movementX } = event;\r\n\r\n    scrollableRef.current.scrollLeft -= movementX;\r\n  }, []);\r\n\r\n  const finishScroll = useCallback(() => {\r\n    document.removeEventListener('pointermove', scroll);\r\n    document.removeEventListener('pointerup', finishScroll);\r\n  }, []);\r\n\r\n  const prepareToScroll = useCallback(() => {\r\n    document.addEventListener('pointermove', scroll);\r\n    document.addEventListener('pointerup', finishScroll);\r\n  }, []);\r\n\r\n  const onScrollablePointerDown = prepareToScroll;\r\n\r\n  return onScrollablePointerDown;\r\n}\r\n\r\nexport { useScrollByShift };\r\n","import React from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  return (\n    <DragDropManager>\n      <BoardContainer id={0} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: action.board,\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const updatedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = updatedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, newListIdx } = action;\r\n\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Destination board id does not match current board id');\r\n      }\r\n\r\n      const lastListIdx = state.board.lists.findIndex(\r\n        list => list.id === listId,\r\n      );\r\n      if (newListIdx === lastListIdx) {\r\n        return state;\r\n      }\r\n\r\n      const listToMove = state.board.lists[lastListIdx];\r\n      const updatedLists = [...state.board.lists];\r\n\r\n      updatedLists.splice(lastListIdx, 1);\r\n      updatedLists.splice(newListIdx, 0, listToMove);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const { listId, card } = action;\r\n\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === listId\r\n          ? {\r\n              ...list,\r\n              cards: list.cards.concat(card),\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      const { boardId, list } = action;\r\n\r\n      if (state.board.id !== boardId) {\r\n        console.error('Board id does not match current board id');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: state.board.lists.concat(list),\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: {\r\n    text: 'Проект «Канбан Доска»',\r\n    color: 'white',\r\n  },\r\n  background: {\r\n    type: 'img',\r\n    url:\r\n      'https://cdn.dribbble.com/users/81061/screenshots/1845123/untitled-1.png',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность редактировать карточки / колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность удалять карточки / колонки',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Гибкая drag drop system',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Позволить droppable объекту иметь несколько accepted draggable types',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Устранить мельтешение карточки с мешьшим по размеру плейсхолдером',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Позволить перетаскиваемому объекту сдвигать скроллбар',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'При нажатии на доску и попытки сдвига её, скроллить доску',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Устранить text overflow проблему',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'При открытии формы создания новой карточки передвигать её в зону видимости',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать карточки и листы доступными для клавиатуры',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Запретить создание пустых или наполненных только пробелами и переносами строк карточек/колонок',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'После проста клика не инцииировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'По правому и среднему клику мыши не инициировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выделять плейсхолдер для перетаскиваемой колонки цветом',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать функцию перемещения доступной и на мобильных устройствах',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать реалистичную анимацию захвата карточки\\n( в зависимости от места захвата поворачивать карточку на разный угол :))\\n',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import { uniqueId } from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const newCard = {\r\n    id: uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card: newCard };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const newList = {\r\n    id: uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list: newList };\r\n}\r\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}