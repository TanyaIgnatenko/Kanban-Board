{"version":3,"sources":["drag-drop/internal/DragDropContext.js","constants.js","drag-drop/DragDropManager.js","drag-drop/useDraggable.js","ducks/board/action-types.js","ducks/board/actions.js","helpers/moveTo.js","components/Card/Card.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","helpers/scrollbar.js","drag-drop/useDroppableList.js","helpers/binaryLastIndexOf.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","DRAGGABLE_TYPE","CARD","LIST","MOVEMENT","BOTTOM","TOP","RIGHT","LEFT","MOUSE_BUTTON","MIDDLE","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","droppable","_this","id","_ref","dragHandle","draggable","Object","objectWithoutProperties","handle","current","onPointerDown","event","which","grabPosition","x","clientX","y","clientY","draggedObjectRect","node","getBoundingClientRect","grabShift","left","top","bindedStartDragIfMove","startDragIfMove","objectSpread","document","addEventListener","resetPreparationToDrag","stopPropagation","removeEventListener","newX","newY","Math","abs","grabDraggable","_ref2","context","type","renderElement","onRelease","geometry","width","height","position","movement","dndContext","manageDroppables","setState","moveDraggable","releaseDraggable","movementX","movementY","newPosition","push","scrollIfOutOfClient","currentDraggedObject","currentHoveredDroppable","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","style","visibility","element","elementFromPoint","closest","acceptedTypes","includes","parentNode","console","warn","setDraggedObjectRef","draggedObjectNode","scrollbarContainer","this","props","mainScrollbarContainer","clientWidth","scrollBy","innerHeight","clientLeft","clientTop","_this$draggedObject","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","react_default","a","createElement","Fragment","clientPosition","draggedObjectRef","internal_DragDropContext","Provider","value","Component","useDraggable","useContext","useEffect","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","moveTo","concat","Card","content","setCardRef","moveCardToList","className","cardRef","useRef","ref","classNames","_ref3","index","tabIndex","defaultProps","mapDispatchToProps","cardId","destinationListId","indexInList","connect","AddComponent","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","_useState","useState","_useState2","slicedToArray","isCreationMode","setCreationMode","_useState3","_useState4","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","handleOpen","addComponentId","seed","uniqueId","_","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","formRef","scrollIntoView","onClick","autoFocus","placeholder","onChange","aria-label","SCROLLBAR_DIRECTION","HORIZONTAL","VERTICAL","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","formListItems","items","itemToIgnoreId","listItems","map","item","data","filter","splice","enrichWithPlaceholder","useDroppableList","listType","scrollStep","scrollOffset","placeholderIndex","setPlaceholderIndex","placeholderGeometry","setPlaceholderGeometry","_useState5","_useState6","isHoveredByDraggable","setIsHoveredByDraggable","itemsRefs","listBodyRef","scrollToStartPosition","scrollToEndPosition","scrollbarDirection","listHasScrollbar","scrollWidth","scrollHeight","clientHeight","hasScrollbar","isHorizontal","listBodyRect","right","bottom","draggableCenter","placeholderIdx","array","predicate","leftIdx","rightIdx","length","middleIdx","floor","binaryLastIndexOf","itemRect","extra","scrollListIfNeeded","scrollLeft","scrollTop","_useDroppable","_useContext","droppableClassName","useDroppable","setItemRefAt","idx","CardList","name","cards","addCard","setListRef","moveList","_useDroppableList","dragHandleNode","listNode","Boolean","components_Card_Card","assign","key","components_AddComponent_AddComponent","bind","_ITEM_TYPE$REGULAR_IT","defineProperty","destinationBoardId","newListIdx","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","useMemo","backgroundSize","useBoardStyle","text","components_CardList_CardList","fetchBoard","rest","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","modifiedLists","found","find","dstList","lastListIdx","findIndex","movedList","toConsumableArray","updatedLists","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.d57f568e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nconst MOVEMENT = {\r\n  BOTTOM: 'BOTTOM',\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  LEFT: 'LEFT',\r\n};\r\n\r\nconst MOUSE_BUTTON = {\r\n  LEFT: 1,\r\n  MIDDLE: 2,\r\n  RIGHT: 3,\r\n};\r\n\r\nexport { DRAGGABLE_TYPE, MOVEMENT, MOUSE_BUTTON };\r\n","import React from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\nimport { MOUSE_BUTTON, MOVEMENT } from '../constants';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {};\r\n  };\r\n\r\n  registerDraggable = ({ dragHandle, ...draggable }) => {\r\n    const handle = dragHandle.current;\r\n\r\n    const onPointerDown = event => {\r\n      const { which: mouseButton } = event;\r\n      if (mouseButton !== MOUSE_BUTTON.LEFT) return;\r\n\r\n      const { clientX, clientY } = event;\r\n      const grabPosition = {\r\n        x: clientX,\r\n        y: clientY,\r\n      };\r\n      const draggedObjectRect = draggable.node.current.getBoundingClientRect();\r\n      const grabShift = {\r\n        x: draggedObjectRect.left - grabPosition.x,\r\n        y: draggedObjectRect.top - grabPosition.y,\r\n      };\r\n\r\n      this.bindedStartDragIfMove = event =>\r\n        this.startDragIfMove(\r\n          { handle, ...draggable },\r\n          grabPosition,\r\n          grabShift,\r\n          event,\r\n        );\r\n\r\n      document.addEventListener('mousemove', this.bindedStartDragIfMove);\r\n      document.addEventListener('mouseup', this.resetPreparationToDrag);\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    handle.addEventListener('mousedown', onPointerDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('mousedown', onPointerDown);\r\n    };\r\n  };\r\n\r\n  startDragIfMove = (draggable, grabPosition, grabShift, event) => {\r\n    const { clientX: newX, clientY: newY } = event;\r\n\r\n    if (\r\n      Math.abs(newX - grabPosition.x) > 2 ||\r\n      Math.abs(newY - grabPosition.y) > 2\r\n    ) {\r\n      document.removeEventListener('mousemove', this.bindedStartDragIfMove);\r\n      document.removeEventListener('mouseup', this.resetPreparationToDrag);\r\n\r\n      this.grabDraggable({\r\n        grabShift,\r\n        ...draggable,\r\n      });\r\n    }\r\n  };\r\n\r\n  resetPreparationToDrag = () => {\r\n    document.removeEventListener('mousemove', this.bindedStartDragIfMove);\r\n    document.removeEventListener('mouseup', this.resetPreparationToDrag);\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabShift,\r\n    context,\r\n    type,\r\n    node,\r\n    handle,\r\n    renderElement,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = node.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderElement,\r\n      handle,\r\n      onRelease,\r\n      geometry: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n        grabShift,\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n      movement: [],\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('mousemove', this.moveDraggable);\r\n        document.addEventListener('mouseup', this.releaseDraggable);\r\n      },\r\n    );\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { movementX, movementY } = event;\r\n    const { geometry } = this.draggedObject;\r\n\r\n    const newPosition = {\r\n      x: clientX + geometry.grabShift.x,\r\n      y: clientY + geometry.grabShift.y,\r\n    };\r\n    this.draggedObject.position = newPosition;\r\n\r\n    const movement = [];\r\n    if (movementX) {\r\n      movement.push(movementX > 0 ? MOVEMENT.RIGHT : MOVEMENT.LEFT);\r\n    }\r\n    if (movementY) {\r\n      movement.push(movementY > 0 ? MOVEMENT.BOTTOM : MOVEMENT.TOP);\r\n    }\r\n    this.draggedObject.movement = movement;\r\n\r\n    this.scrollIfOutOfClient({ x: clientX, y: clientY });\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n  };\r\n\r\n  scrollIfOutOfClient(position) {\r\n    const {\r\n      mainScrollbarContainer: { current: scrollbarContainer },\r\n    } = this.props;\r\n\r\n    if (position.x >= scrollbarContainer.clientWidth - 50) {\r\n      scrollbarContainer.scrollBy(10, 0);\r\n    }\r\n\r\n    if (position.y >= scrollbarContainer.innerHeight - 50) {\r\n      scrollbarContainer.scrollBy(0, 20);\r\n    }\r\n\r\n    if (position.x <= scrollbarContainer.clientLeft - 50) {\r\n      scrollbarContainer.scrollBy(-20, 0);\r\n    }\r\n\r\n    if (position.y <= scrollbarContainer.clientTop - 50) {\r\n      scrollbarContainer.scrollBy(0, -20);\r\n    }\r\n  }\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('mousemove', this.moveDraggable);\r\n    document.removeEventListener('mouseup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, geometry } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + geometry.width / 2,\r\n      y: position.y + geometry.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'hidden';\r\n    }\r\n    let element = document.elementFromPoint(position.x, position.y);\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'visible';\r\n    }\r\n\r\n    while (element) {\r\n      const droppable = element.closest('.droppable');\r\n\r\n      if (!droppable) return null;\r\n\r\n      if (!this.droppables[droppable.id]) {\r\n        console.warn('Unregistered droppable with id:', droppable.id);\r\n\r\n        element = droppable.parentNode;\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        this.droppables[droppable.id].acceptedTypes.includes(\r\n          this.draggedObject.type,\r\n        )\r\n      ) {\r\n        return this.droppables[droppable.id];\r\n      }\r\n\r\n      element = droppable.parentNode;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderElement({\r\n            clientPosition: draggedObjectPosition,\r\n            draggedObjectRef: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropManager;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable(draggable) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable(draggable);\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    draggable.context,\r\n    draggable.type,\r\n    draggable.node,\r\n    draggable.dragHandle,\r\n    draggable.renderElement,\r\n    draggable.onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, newListIdx) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    newListIdx,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n\nexport { moveTo };\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    node: cardRef,\r\n    dragHandle: cardRef,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        ref={draggedObjectRef}\r\n        className={classNames('card', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <h4 className='card-content'>{content}</h4>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card', className)}\r\n      tabIndex={0}\r\n    >\r\n      <h4 className='card-content'>{content}</h4>\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n}) {\r\n  const [isCreationMode, setCreationMode] = useState(false);\r\n\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    setCreationMode(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    if (!content) return;\r\n\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const textarea = useRef(null);\r\n  const handleOpen = useCallback(() => {\r\n    setCreationMode(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    setCreationMode(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    if (isCreationMode) {\r\n      formRef.current.scrollIntoView();\r\n    }\r\n  }, [isCreationMode]);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n    >\r\n      <button\r\n        className={classNames('open-form-btn', isCreationMode && 'hidden')}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        ref={node => (formRef.current = node)}\r\n        className={classNames(\r\n          'form',\r\n          formClassName,\r\n          !isCreationMode && 'hidden',\r\n        )}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='form-controls'>\r\n          <button className='add-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button\r\n            aria-label='close'\r\n            className='close-btn'\r\n            onClick={handleClose}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  formClassName: '',\r\n  className: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const uniqueId = useRef(null);\r\n  useEffect(() => {\r\n    uniqueId.current = _.uniqueId(seed);\r\n  }, [seed]);\r\n  return uniqueId.current;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('pointerdown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('pointerdown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","const SCROLLBAR_DIRECTION = {\r\n  HORIZONTAL: 0,\r\n  VERTICAL: 1,\r\n};\r\n\r\nfunction hasScrollbar(element, scrollbarDirection) {\r\n  return scrollbarDirection === SCROLLBAR_DIRECTION.HORIZONTAL\r\n    ? element.scrollWidth > element.clientWidth\r\n    : element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nexport { hasScrollbar, SCROLLBAR_DIRECTION };\r\n","import { useEffect, useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { binaryLastIndexOf } from '../helpers/binaryLastIndexOf';\r\nimport { hasScrollbar, SCROLLBAR_DIRECTION } from '../helpers/scrollbar';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction formListItems(items, itemToIgnoreId, placeholder) {\r\n  let listItems = items\r\n    ? items.map(item => ({\r\n        type: ITEM_TYPE.REGULAR_ITEM,\r\n        data: item,\r\n      }))\r\n    : [];\r\n\r\n  const shouldIgnoreItem = itemToIgnoreId !== null;\r\n  if (shouldIgnoreItem) {\r\n    listItems = listItems.filter(item => item.data.id !== itemToIgnoreId);\r\n  }\r\n\r\n  const shouldShowPlaceholder = placeholder.index !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems = enrichWithPlaceholder(listItems, placeholder);\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction enrichWithPlaceholder(listItems, placeholder) {\r\n  listItems.splice(placeholder.index, 0, {\r\n    type: ITEM_TYPE.PLACEHOLDER,\r\n    index: placeholder.index,\r\n    geometry: placeholder.geometry,\r\n  });\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({\r\n  id,\r\n  acceptedTypes,\r\n  listType,\r\n  items,\r\n  scrollStep,\r\n  scrollOffset,\r\n}) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n  const [isHoveredByDraggable, setIsHoveredByDraggable] = useState(false);\r\n\r\n  const context = useRef({ id, index: null });\r\n  const itemsRefs = useRef([]);\r\n  const listBodyRef = useRef(null);\r\n\r\n  const scrollToStartPosition = useRef(null);\r\n  const scrollToEndPosition = useRef(null);\r\n\r\n  const scrollbarDirection =\r\n    listType === LIST_TYPE.HORIZONTAL\r\n      ? SCROLLBAR_DIRECTION.HORIZONTAL\r\n      : SCROLLBAR_DIRECTION.VERTICAL;\r\n\r\n  const listHasScrollbar = useRef(false);\r\n\r\n  useEffect(() => {\r\n    listHasScrollbar.current =\r\n      listBodyRef.current &&\r\n      hasScrollbar(listBodyRef.current, scrollbarDirection);\r\n\r\n    if (!listHasScrollbar.current) return;\r\n\r\n    const isHorizontal = listType === LIST_TYPE.HORIZONTAL;\r\n    const listBodyRect =\r\n      listBodyRef.current && listBodyRef.current.getBoundingClientRect();\r\n\r\n    scrollToStartPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.left + scrollOffset\r\n      : listBodyRect && listBodyRect.top + scrollOffset;\r\n    scrollToEndPosition.current = isHorizontal\r\n      ? listBodyRect && listBodyRect.right - scrollOffset\r\n      : listBodyRect && listBodyRect.bottom - scrollOffset;\r\n  }, [listHasScrollbar]);\r\n\r\n  const setItemRefAt = (item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemsRefs.current[idx] = item;\r\n  };\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setIsHoveredByDraggable(true);\r\n    setPlaceholderGeometry({\r\n      width: draggable.geometry.width,\r\n      height: draggable.geometry.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.geometry.width / 2,\r\n        y: draggable.position.y + draggable.geometry.height / 2,\r\n      };\r\n\r\n      let placeholderIdx = binaryLastIndexOf(itemsRefs.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n        switch (listType) {\r\n          case LIST_TYPE.HORIZONTAL: {\r\n            let extra = 0;\r\n            if (itemRect.width > draggable.geometry.width) {\r\n              extra = itemRect.width - draggable.geometry.width;\r\n            }\r\n            return itemRect.left + extra < draggableCenter.x;\r\n          }\r\n          case LIST_TYPE.VERTICAL: {\r\n            let extra = 0;\r\n            if (itemRect.height > draggable.geometry.height) {\r\n              extra = itemRect.height - draggable.geometry.height;\r\n            }\r\n            return itemRect.top + extra < draggableCenter.y;\r\n          }\r\n          default: {\r\n            console.error('Uknown list type:', listType);\r\n          }\r\n        }\r\n      });\r\n\r\n      if (listHasScrollbar.current) {\r\n        scrollListIfNeeded(draggableCenter);\r\n      }\r\n\r\n      placeholderIdx = placeholderIdx !== null ? placeholderIdx : 0;\r\n\r\n      context.current.index = placeholderIdx;\r\n      setPlaceholderIndex(placeholderIdx);\r\n    },\r\n    [placeholderIndex, placeholderGeometry, listType, listHasScrollbar],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setIsHoveredByDraggable(false);\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    context.current.index = null;\r\n  }, []);\r\n\r\n  const scrollListIfNeeded = useCallback(\r\n    draggableCenter => {\r\n      switch (listType) {\r\n        case LIST_TYPE.HORIZONTAL: {\r\n          if (draggableCenter.x <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollLeft -= scrollStep;\r\n          } else if (draggableCenter.x >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollLeft += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n        case LIST_TYPE.VERTICAL: {\r\n          if (draggableCenter.y <= scrollToStartPosition.current) {\r\n            listBodyRef.current.scrollTop -= scrollStep;\r\n          } else if (draggableCenter.y >= scrollToEndPosition.current) {\r\n            listBodyRef.current.scrollTop += scrollStep;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    [\r\n      listType,\r\n      listBodyRef,\r\n      scrollStep,\r\n      scrollToStartPosition,\r\n      scrollToEndPosition,\r\n    ],\r\n  );\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: context.current,\r\n    acceptedTypes,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  const placeholder = {\r\n    index: placeholderIndex,\r\n    geometry: placeholderGeometry,\r\n  };\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  const listItems = formListItems(items, itemToIgnoreId, placeholder);\r\n\r\n  return {\r\n    listItems,\r\n    setItemRefAt,\r\n    listBodyRef,\r\n    droppableClassName,\r\n    isHoveredByDraggable,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","function binaryLastIndexOf(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      leftIdx = middleIdx + 1;\r\n    } else {\r\n      rightIdx = middleIdx - 1;\r\n    }\r\n  }\r\n\r\n  return rightIdx !== -1 ? rightIdx : null;\r\n}\r\n\r\nexport { binaryLastIndexOf };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable(droppable) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable(droppable);\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    droppable.id,\r\n    droppable.context,\r\n    droppable.node,\r\n    droppable.acceptedTypes,\r\n    droppable.onDraggableEnter,\r\n    droppable.onDraggableHover,\r\n    droppable.onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: 'droppable',\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const {\r\n    listBodyRef,\r\n    setItemRefAt,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedTypes: [DRAGGABLE_TYPE.CARD],\r\n    items: cards,\r\n    scrollStep: 20,\r\n    scrollOffset: 30,\r\n  });\r\n\r\n  const dragHandleNode = useRef(null);\r\n  const listNode = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    node: listNode,\r\n    dragHandle: dragHandleNode,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        id={id}\r\n        ref={draggedObjectRef}\r\n        className={classNames('card-list', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <header>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {Boolean(listItems.length) && (\r\n          <ul className='list-cards'>\r\n            {listItems.map((item, idx) => (\r\n              <Card\r\n                key={item.data.id}\r\n                {...item.data}\r\n                className='list-card'\r\n                setCardRef={node => setItemRefAt(node, idx)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <footer>\r\n          <AddComponent\r\n            className='add-card-btn'\r\n            openCreationFormBtnText='Добавить ещё одну карточку'\r\n            placeholderFormText='Введите название карточки'\r\n            submitFormBtnText='Добавить карточку'\r\n            onAdd={addCard.bind(null, id)}\r\n          />\r\n        </footer>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listNode.current = node;\r\n  };\r\n\r\n  return (\r\n    <li id={id} className={classNames(droppableClassName, className)}>\r\n      <div ref={setRefs} className='card-list' tabIndex={0}>\r\n        <header ref={dragHandleNode}>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {Boolean(listItems.length) && (\r\n          <ul className='list-cards' ref={listBodyRef}>\r\n            {listItems.map(\r\n              (item, idx) =>\r\n                ({\r\n                  [ITEM_TYPE.REGULAR_ITEM]: (\r\n                    <Card\r\n                      key={item.data && item.data.id}\r\n                      {...item.data}\r\n                      className='list-card'\r\n                      setCardRef={node => setItemRefAt(node, idx)}\r\n                    />\r\n                  ),\r\n                  [ITEM_TYPE.PLACEHOLDER]: (\r\n                    <li\r\n                      key='placeholder'\r\n                      ref={node => setItemRefAt(node, idx)}\r\n                      className='placeholder list-card'\r\n                      style={{\r\n                        width: item.geometry && item.geometry.width,\r\n                        height: item.geometry && item.geometry.height,\r\n                      }}\r\n                    />\r\n                  ),\r\n                }[item.type]),\r\n            )}\r\n          </ul>\r\n        )}\r\n        <footer>\r\n          <AddComponent\r\n            className='add-card-btn'\r\n            openCreationFormBtnText='Добавить ещё одну карточку'\r\n            placeholderFormText='Введите название карточки'\r\n            submitFormBtnText='Добавить карточку'\r\n            onAdd={addCard.bind(null, id)}\r\n          />\r\n        </footer>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, name, lists, addList, scrollbarContainer }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const {\r\n    setItemRefAt,\r\n    listBodyRef,\r\n    listItems,\r\n    droppableClassName,\r\n  } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedTypes: [DRAGGABLE_TYPE.LIST],\r\n    items: lists,\r\n    scrollOffset: 100,\r\n    scrollStep: 50,\r\n  });\r\n\r\n  const setRefs = node => {\r\n    scrollbarContainer.current = node;\r\n    listBodyRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n    >\r\n      <h1 className='board-title' style={{ color: name.color }}>\r\n        {name.text}\r\n      </h1>\r\n      <ul ref={setRefs} className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <CardList\r\n                  key={item.data && item.data.id}\r\n                  className='board-list'\r\n                  setListRef={node => setItemRefAt(node, idx)}\r\n                  {...item.data}\r\n                />\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <div\r\n                  key='placeholder'\r\n                  ref={node => setItemRefAt(node, idx)}\r\n                  className='placeholder board-list'\r\n                  style={{\r\n                    width: item.geometry && item.geometry.width,\r\n                    height: item.geometry && item.geometry.height,\r\n                  }}\r\n                />\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList, ...rest }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} {...rest} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import React, { useRef } from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  const mainScrollbarContainer = useRef(null);\n  return (\n    <DragDropManager mainScrollbarContainer={mainScrollbarContainer}>\n      <BoardContainer id={0} scrollbarContainer={mainScrollbarContainer} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          id: action.board.id,\r\n          name: action.board.name,\r\n          lists: action.board.lists,\r\n          background: action.board.background,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const modifiedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = modifiedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, newListIdx } = action;\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Board destination id does not match current board id');\r\n      }\r\n\r\n      const lastListIdx = state.board.lists.findIndex(\r\n        list => list.id === listId,\r\n      );\r\n      if (newListIdx === lastListIdx) {\r\n        return state;\r\n      }\r\n\r\n      const movedList = state.board.lists[lastListIdx];\r\n      const modifiedLists = [...state.board.lists];\r\n\r\n      modifiedLists.splice(lastListIdx, 1);\r\n      modifiedLists.splice(newListIdx, 0, movedList);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === action.listId\r\n          ? {\r\n              ...list,\r\n              cards: [...list.cards, action.card],\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, action.list],\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: {\r\n    text: 'Проект «Канбан Доска»',\r\n    color: 'white',\r\n  },\r\n  background: {\r\n    type: 'img',\r\n    color: 'rgba(252,223,161,0.91)',\r\n    url:\r\n      'https://cdn.dribbble.com/users/58661/screenshots/1818073/csc_pattern.png',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'TO DO',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать реалистичную анимацию захвата карточки\\n' +\r\n            '( в зависимости от места захвата поворачивать карточку на разный угол, ' +\r\n            'при падении карточки плавно анимировать её разворот в исходное положение :))\\n',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность редактировать карточки / колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность удалять карточки / колонки',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'IN PROGRESS',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Сделать функцию перемещения доступной и на мобильных устройствах',\r\n        },\r\n\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'После проста клика не инцииировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'По правому и среднему клику мыши не инициировать перемещение',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выделять плейсхолдер для перетаскиваемой колонки цветом',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'DONE',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность перетаскивать колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые карточки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Добавить возможность создавать новые колонки',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Гибкая drag drop system',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Позволить droppable объекту иметь несколько accepted draggable types',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Устранить мельтешение карточки с мешьшим по размеру плейсхолдером',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Позволить перетаскиваемому объекту сдвигать скроллбар',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Устранить text overflow проблему',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'При открытии формы создания новой карточки передвигать её в зону видимости',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать карточки и листы доступными для клавиатуры',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'RETROSPECTIVE',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import _ from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const card = {\r\n    id: _.uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const list = {\r\n    id: _.uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list };\r\n}","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}