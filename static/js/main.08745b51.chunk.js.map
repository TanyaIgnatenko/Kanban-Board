{"version":3,"sources":["drag-drop/internal/DragDropContext.js","drag-drop/DragDropManager.js","drag-drop/useDraggable.js","constants.js","ducks/board/action-types.js","ducks/board/actions.js","helpers/moveTo.js","components/Card/Card.js","components/AddComponent/AddComponent.js","hooks/uniqueId.js","hooks/onClickOutside.js","drag-drop/useDroppableList.js","helpers/lowerBound.js","drag-drop/useDroppable.js","components/CardList/CardList.js","ducks/board/selectors.js","components/Board/Board.js","components/Board/hooks/useBoardStyle.js","App.js","ducks/board/reducer.js","store/rootReducer.js","ducks/board/mocks.js","ducks/board/services.js","ducks/board/saga.js","store/rootSaga.js","store/store.js","index.js"],"names":["DragDropContext","React","createContext","draggedObject","registerDraggable","registerDroppable","DragDropManager","state","draggedObjectPosition","hoveredDroppable","droppables","droppable","_this","id","_ref","dragHandle","draggable","Object","objectWithoutProperties","onMouseDown","event","clientX","clientY","grabDraggable","objectSpread","grabPosition","x","y","stopPropagation","handle","current","addEventListener","removeEventListener","_ref2","context","type","node","renderElement","onRelease","draggedObjectRect","getBoundingClientRect","geometry","width","height","grabShift","left","top","position","dndContext","manageDroppables","setState","document","moveDraggable","releaseDraggable","newPosition","currentDraggedObject","currentHoveredDroppable","draggableContext","droppableContext","onDraggableLeave","findDroppable","draggedNode","style","visibility","element","elementFromPoint","closest","concat","setDraggedObjectRef","draggedObjectNode","_this$draggedObject","this","lastDroppable","currentDroppable","onDraggableEnter","onDraggableHover","children","props","react_default","a","createElement","Fragment","clientPosition","draggedObjectRef","internal_DragDropContext","Provider","value","Component","useDraggable","useContext","useEffect","DRAGGABLE_TYPE","CARD","LIST","FETCH_BOARD","REQUEST","SUCCESS","ERROR","MOVE","ADD_CARD","ADD_LIST","fetchBoardSuccess","board","fetchBoardError","error","addCardSuccess","listId","card","addCardError","addListSuccess","boardId","list","addListError","moveTo","Card","content","setCardRef","moveCardToList","className","cardRef","useRef","ref","classNames","_ref3","index","defaultProps","mapDispatchToProps","cardId","destinationListId","indexInList","connect","AddComponent","openCreationFormBtnText","placeholderFormText","submitFormBtnText","onAdd","formClassName","_useState","useState","_useState2","slicedToArray","creationMode","setCreationMode","_useState3","_useState4","setContent","handleContentChange","useCallback","target","handleClose","handleAdd","handleOpen","addComponentId","seed","uniqueId","_","useUniqueId","elementId","onClickOutside","checkClick","useOnClickOutside","onClick","autoFocus","placeholder","onChange","ITEM_TYPE","PLACEHOLDER","REGULAR_ITEM","LIST_TYPE","HORIZONTAL","VERTICAL","useDroppableList","acceptedType","listType","items","placeholderIndex","setPlaceholderIndex","placeholderGeometry","setPlaceholderGeometry","itemNodes","setItemAt","item","idx","draggableCenter","array","predicate","leftIdx","rightIdx","length","middleIdx","Math","floor","lowerBound","itemRect","itemCenter","_useDroppable","_useContext","droppableClassName","useDroppable","listItems","map","data","splice","enrichWithPlaceholder","itemToIgnoreId","filter","CardList","name","cards","addCard","setListRef","moveList","_useDroppableList","dragHandleNode","listNode","Boolean","components_Card_Card","assign","key","components_AddComponent_AddComponent","bind","_ITEM_TYPE$REGULAR_IT","defineProperty","destinationBoardId","indexInBoard","selectBoard","Board","background","lists","addList","boardStyle","backgroundStyle","url","color","useMemo","backgroundSize","useBoardStyle","components_CardList_CardList","fetchBoard","Board_Board","App","drag_drop_DragDropManager","components_Board_Board","initialState","rootReducer","combineReducers","arguments","undefined","action","cardToMove","modifiedLists","found","find","dstList","console","lastIdx","findIndex","movedList","idxToRemoveAt","toConsumableArray","updatedLists","mockBoard","toString","fetchBoardRequest","addCardRequest","addListRequest","watchBoardRequests","regenerator_default","wrap","_context","prev","next","call","services","sent","put","t0","stop","_marked","newCardInfo","_context2","_marked2","newListInfo","_context3","_marked3","_context4","all","takeLatest","_marked4","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.08745b51.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DragDropContext = React.createContext({\r\n  draggedObject: null,\r\n  registerDraggable: () => {},\r\n  registerDroppable: () => {},\r\n});\r\n\r\nexport default DragDropContext;\r\n","import React from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nclass DragDropManager extends React.Component {\r\n  state = {\r\n    draggedObjectPosition: null,\r\n  };\r\n\r\n  draggedObject = null;\r\n  hoveredDroppable = null;\r\n  droppables = {};\r\n\r\n  registerDroppable = droppable => {\r\n    this.droppables[droppable.id] = droppable;\r\n    return () => {};\r\n  };\r\n\r\n  registerDraggable = ({ dragHandle, ...draggable }) => {\r\n    const onMouseDown = event => {\r\n      const { clientX, clientY } = event;\r\n      this.grabDraggable({\r\n        grabPosition: {\r\n          x: clientX,\r\n          y: clientY,\r\n        },\r\n        ...draggable,\r\n      });\r\n\r\n      event.stopPropagation();\r\n    };\r\n\r\n    const handle = dragHandle.current;\r\n    handle.addEventListener('mousedown', onMouseDown);\r\n\r\n    return function unregisterDraggable() {\r\n      handle.removeEventListener('mousedown', onMouseDown);\r\n    };\r\n  };\r\n\r\n  grabDraggable = ({\r\n    grabPosition,\r\n    context,\r\n    type,\r\n    node,\r\n    renderElement,\r\n    onRelease,\r\n  }) => {\r\n    const draggedObjectRect = node.current.getBoundingClientRect();\r\n\r\n    this.draggedObject = {\r\n      context,\r\n      type,\r\n      renderElement,\r\n      onRelease,\r\n      geometry: {\r\n        width: draggedObjectRect.width,\r\n        height: draggedObjectRect.height,\r\n        grabShift: {\r\n          x: draggedObjectRect.left - grabPosition.x,\r\n          y: draggedObjectRect.top - grabPosition.y,\r\n        },\r\n      },\r\n      position: {\r\n        x: draggedObjectRect.left,\r\n        y: draggedObjectRect.top,\r\n      },\r\n    };\r\n\r\n    this.dndContext.draggedObject = this.draggedObject;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState(\r\n      {\r\n        draggedObjectPosition: this.draggedObject.position,\r\n      },\r\n      () => {\r\n        document.addEventListener('mousemove', this.moveDraggable);\r\n        document.addEventListener('mouseup', this.releaseDraggable);\r\n      },\r\n    );\r\n  };\r\n\r\n  dndContext = {\r\n    draggedObject: null,\r\n    registerDraggable: this.registerDraggable,\r\n    registerDroppable: this.registerDroppable,\r\n  };\r\n\r\n  moveDraggable = event => {\r\n    const { clientX, clientY } = event;\r\n    const { geometry } = this.draggedObject;\r\n\r\n    const newPosition = {\r\n      x: clientX + geometry.grabShift.x,\r\n      y: clientY + geometry.grabShift.y,\r\n    };\r\n    this.draggedObject.position = newPosition;\r\n\r\n    this.manageDroppables();\r\n\r\n    this.setState({ draggedObjectPosition: newPosition });\r\n  };\r\n\r\n  releaseDraggable = () => {\r\n    const currentDraggedObject = this.draggedObject;\r\n    const currentHoveredDroppable = this.hoveredDroppable;\r\n\r\n    document.removeEventListener('mousemove', this.moveDraggable);\r\n    document.removeEventListener('mouseup', this.releaseDraggable);\r\n\r\n    this.draggedObject = null;\r\n    this.hoveredDroppable = null;\r\n    this.dndContext.draggedObject = null;\r\n    this.setState({\r\n      draggedObjectPosition: null,\r\n    });\r\n\r\n    currentDraggedObject.onRelease({\r\n      draggableContext: currentDraggedObject.context,\r\n      droppableContext: currentHoveredDroppable.context,\r\n    });\r\n    currentHoveredDroppable.onDraggableLeave();\r\n  };\r\n\r\n  manageDroppables() {\r\n    const { position, geometry } = this.draggedObject;\r\n\r\n    const lastDroppable = this.hoveredDroppable;\r\n    const currentDroppable = this.findDroppable({\r\n      x: position.x + geometry.width / 2,\r\n      y: position.y + geometry.height / 2,\r\n    });\r\n\r\n    if (!currentDroppable) return;\r\n\r\n    const droppableChanged =\r\n      !lastDroppable || currentDroppable.id !== lastDroppable.id;\r\n\r\n    if (droppableChanged) {\r\n      if (lastDroppable) {\r\n        lastDroppable.onDraggableLeave();\r\n      }\r\n\r\n      this.hoveredDroppable = this.droppables[currentDroppable.id];\r\n\r\n      this.hoveredDroppable.onDraggableEnter(this.draggedObject);\r\n    }\r\n    this.hoveredDroppable.onDraggableHover(this.draggedObject);\r\n  }\r\n\r\n  findDroppable = position => {\r\n    const draggedNode = this.draggedObject.node;\r\n\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'hidden';\r\n    }\r\n    const element = document.elementFromPoint(position.x, position.y);\r\n    if (draggedNode) {\r\n      draggedNode.style.visibility = 'visible';\r\n    }\r\n\r\n    if (element == null) {\r\n      return null;\r\n    }\r\n\r\n    return element.closest(`.droppable-${this.draggedObject.type}`);\r\n  };\r\n\r\n  setDraggedObjectRef = draggedObjectNode => {\r\n    if (this.draggedObject) {\r\n      this.draggedObject.node = draggedObjectNode;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { draggedObjectPosition } = this.state;\r\n    const { draggedObject, dndContext } = this;\r\n\r\n    return (\r\n      <>\r\n        {draggedObject &&\r\n          draggedObject.renderElement({\r\n            clientPosition: draggedObjectPosition,\r\n            draggedObjectRef: this.setDraggedObjectRef,\r\n          })}\r\n        <DragDropContext.Provider value={dndContext}>\r\n          {children}\r\n        </DragDropContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropManager;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDraggable(draggable) {\r\n  const { registerDraggable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDraggable = registerDraggable(draggable);\r\n\r\n    return unregisterDraggable;\r\n  }, [\r\n    draggable.context,\r\n    draggable.type,\r\n    draggable.node,\r\n    draggable.dragHandle,\r\n    draggable.renderElement,\r\n    draggable.onRelease,\r\n  ]);\r\n}\r\n\r\nexport { useDraggable };\r\n","const DRAGGABLE_TYPE = {\r\n  CARD: 'CARD',\r\n  LIST: 'LIST',\r\n};\r\n\r\nexport { DRAGGABLE_TYPE };\r\n","export const FETCH_BOARD = {\r\n  REQUEST: '@@board/FETCH_BOARD_REQUEST',\r\n  SUCCESS: '@@board/FETCH_BOARD_SUCCESS',\r\n  ERROR: '@@board/FETCH_BOARD_ERROR',\r\n};\r\n\r\nexport const MOVE = {\r\n  CARD: '@@board/MOVE_CARD',\r\n  LIST: '@@board/MOVE_LIST',\r\n};\r\n\r\nexport const ADD_CARD = {\r\n  REQUEST: '@@board/ADD_CARD_REQUEST',\r\n  SUCCESS: '@@board/ADD_CARD_SUCCESS',\r\n  ERROR: '@@board/ADD_CARD_ERROR',\r\n};\r\n\r\nexport const ADD_LIST = {\r\n  REQUEST: '@@board/ADD_LIST_REQUEST',\r\n  SUCCESS: '@@board/ADD_LIST_SUCCESS',\r\n  ERROR: '@@board/ADD_LIST_ERROR',\r\n};\r\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nexport const fetchBoardRequest = id => {\r\n  return {\r\n    type: FETCH_BOARD.REQUEST,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const fetchBoardSuccess = board => {\r\n  return {\r\n    type: FETCH_BOARD.SUCCESS,\r\n    board,\r\n  };\r\n};\r\n\r\nexport const fetchBoardError = error => {\r\n  return {\r\n    type: FETCH_BOARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const moveCard = (cardId, destinationListId, indexInList) => {\r\n  return {\r\n    type: MOVE.CARD,\r\n    cardId,\r\n    destinationListId,\r\n    indexInList,\r\n  };\r\n};\r\n\r\nexport const moveList = (listId, destinationBoardId, indexInBoard) => {\r\n  return {\r\n    type: MOVE.LIST,\r\n    listId,\r\n    destinationBoardId,\r\n    indexInBoard,\r\n  };\r\n};\r\n\r\nexport const addCardRequest = (listId, content) => {\r\n  return {\r\n    type: ADD_CARD.REQUEST,\r\n    listId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addCardSuccess = (listId, card) => {\r\n  return {\r\n    type: ADD_CARD.SUCCESS,\r\n    listId,\r\n    card,\r\n  };\r\n};\r\n\r\nexport const addCardError = error => {\r\n  return {\r\n    type: ADD_CARD.ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addListRequest = (boardId, content) => {\r\n  return {\r\n    type: ADD_LIST.REQUEST,\r\n    boardId,\r\n    content,\r\n  };\r\n};\r\n\r\nexport const addListSuccess = (boardId, list) => {\r\n  return {\r\n    type: ADD_LIST.SUCCESS,\r\n    boardId,\r\n    list,\r\n  };\r\n};\r\n\r\nexport const addListError = error => {\r\n  return {\r\n    type: ADD_LIST.ERROR,\r\n    error,\r\n  };\r\n};\r\n","export function moveTo({ x, y }) {\n  return {\n    position: 'fixed',\n    left: `${x}px`,\n    top: `${y}px`,\n  };\n}\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport { moveCard } from '../../ducks/board/actions';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport './Card.scss';\r\n\r\nfunction Card({ id, content, setCardRef, moveCardToList, className }) {\r\n  const cardRef = useRef(null);\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.CARD,\r\n    node: cardRef,\r\n    dragHandle: cardRef,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        ref={draggedObjectRef}\r\n        className={classNames('card', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <h4 className='card-content'>{content}</h4>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveCardToList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setCardRef(node);\r\n    cardRef.current = node;\r\n  };\r\n\r\n  return (\r\n    <li id={id} ref={setRefs} className={classNames('card', className)}>\r\n      <h4 className='card-content'>{content}</h4>\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  setCardRef: PropTypes.func.isRequired,\r\n  moveCardToList: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCard.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  moveCardToList: moveCard,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Card);\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { useUniqueId } from '../../hooks/uniqueId';\r\nimport { useOnClickOutside } from '../../hooks/onClickOutside';\r\n\r\nimport './AddComponent.scss';\r\n\r\nfunction AddComponent({\r\n  openCreationFormBtnText,\r\n  placeholderFormText,\r\n  submitFormBtnText,\r\n  onAdd,\r\n  className,\r\n  formClassName,\r\n}) {\r\n  const [creationMode, setCreationMode] = useState(false);\r\n\r\n  const [content, setContent] = useState('');\r\n  const handleContentChange = useCallback(event => {\r\n    const content = event.target.value;\r\n    setContent(content);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setContent('');\r\n    setCreationMode(false);\r\n  }, []);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    onAdd(content);\r\n    handleClose();\r\n  }, [content, handleClose, onAdd]);\r\n\r\n  const textarea = useRef(null);\r\n  const handleOpen = useCallback(() => {\r\n    setCreationMode(true);\r\n  }, []);\r\n\r\n  const addComponentId = useUniqueId('add-component');\r\n  const handleWasClickOutside = useCallback(() => {\r\n    setCreationMode(false);\r\n  }, []);\r\n  useOnClickOutside(addComponentId, handleWasClickOutside);\r\n\r\n  return (\r\n    <div\r\n      id={addComponentId}\r\n      className={classNames('add-component-wrapper', className)}\r\n    >\r\n      <button\r\n        className={classNames(\r\n          'open-component-composer-btn',\r\n          creationMode && 'hidden',\r\n        )}\r\n        onClick={handleOpen}\r\n      >\r\n        <h4>{openCreationFormBtnText}</h4>\r\n      </button>\r\n      <div\r\n        className={classNames(\r\n          'component-composer',\r\n          formClassName,\r\n          !creationMode && 'hidden',\r\n        )}\r\n      >\r\n        <textarea\r\n          autoFocus\r\n          className='component-content'\r\n          value={content}\r\n          placeholder={placeholderFormText}\r\n          onChange={handleContentChange}\r\n        />\r\n        <div className='component-composer-controls'>\r\n          <button className='add-component-btn' onClick={handleAdd}>\r\n            {submitFormBtnText}\r\n          </button>\r\n          <button className='close-btn' onClick={handleClose} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  openCreationFormBtnText: PropTypes.string.isRequired,\r\n  placeholderFormText: PropTypes.string.isRequired,\r\n  submitFormBtnText: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  formClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nAddComponent.defaultProps = {\r\n  formClassName: '',\r\n  className: '',\r\n};\r\n\r\nexport default AddComponent;\r\n","import { useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function useUniqueId(seed) {\r\n  const uniqueId = useRef(null);\r\n  useEffect(() => {\r\n    uniqueId.current = _.uniqueId(seed);\r\n  }, [seed]);\r\n  return uniqueId.current;\r\n}\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nexport function useOnClickOutside(elementId, onClickOutside) {\r\n  const checkClick = useCallback(\r\n    event => {\r\n      const wasClickOutside = !event.target.closest(`#${elementId}`);\r\n\r\n      if (wasClickOutside) {\r\n        onClickOutside();\r\n      }\r\n    },\r\n    [elementId, onClickOutside],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', checkClick);\r\n\r\n    return function cleanup() {\r\n      document.removeEventListener('mousedown', checkClick);\r\n    };\r\n  }, [checkClick]);\r\n}\r\n","import { useRef, useCallback, useState } from 'react';\r\n\r\nimport { useDroppable } from './useDroppable';\r\nimport { lowerBound } from '../helpers/lowerBound';\r\n\r\nconst ITEM_TYPE = {\r\n  PLACEHOLDER: 'PLACEHOLDER',\r\n  REGULAR_ITEM: 'REGULAR_ITEM',\r\n};\r\n\r\nconst LIST_TYPE = {\r\n  HORIZONTAL: 'HORIZONTAL',\r\n  VERTICAL: 'VERTICAL',\r\n};\r\n\r\nfunction enrichWithPlaceholder(items, placeholderIndex, placeholderGeometry) {\r\n  const listItems = items.map(item => ({\r\n    type: ITEM_TYPE.REGULAR_ITEM,\r\n    data: item,\r\n  }));\r\n\r\n  const shouldShowPlaceholder = placeholderIndex !== null;\r\n  if (shouldShowPlaceholder) {\r\n    listItems.splice(placeholderIndex, 0, {\r\n      type: ITEM_TYPE.PLACEHOLDER,\r\n      index: placeholderIndex,\r\n      geometry: placeholderGeometry,\r\n    });\r\n  }\r\n\r\n  return listItems;\r\n}\r\n\r\nfunction useDroppableList({ id, acceptedType, listType, items }) {\r\n  const [placeholderIndex, setPlaceholderIndex] = useState(null);\r\n  const [placeholderGeometry, setPlaceholderGeometry] = useState(null);\r\n\r\n  const context = useRef({ id, index: null });\r\n  const itemNodes = useRef([]);\r\n\r\n  const setItemAt = useCallback((item, idx) => {\r\n    if (!item) return;\r\n\r\n    itemNodes.current[idx] = item;\r\n  }, []);\r\n\r\n  const onDraggableEnter = useCallback(draggable => {\r\n    setPlaceholderGeometry({\r\n      width: draggable.geometry.width,\r\n      height: draggable.geometry.height,\r\n    });\r\n  }, []);\r\n\r\n  const onDraggableHover = useCallback(\r\n    draggable => {\r\n      const draggableCenter = {\r\n        x: draggable.position.x + draggable.geometry.width / 2,\r\n        y: draggable.position.y + draggable.geometry.height / 2,\r\n      };\r\n\r\n      let placeholderIndex = lowerBound(itemNodes.current, item => {\r\n        const itemRect = item.getBoundingClientRect();\r\n\r\n        const itemCenter = {\r\n          x: itemRect.left + itemRect.width / 2,\r\n          y: itemRect.top + itemRect.height / 2,\r\n        };\r\n        return listType === LIST_TYPE.HORIZONTAL\r\n          ? draggableCenter.x <= itemCenter.x\r\n          : draggableCenter.y <= itemCenter.y;\r\n      });\r\n\r\n      placeholderIndex =\r\n        placeholderIndex !== null ? placeholderIndex : itemNodes.current.length;\r\n\r\n      context.current.index = placeholderIndex;\r\n      setPlaceholderIndex(placeholderIndex);\r\n    },\r\n    [listType],\r\n  );\r\n\r\n  const onDraggableLeave = useCallback(() => {\r\n    setPlaceholderGeometry(null);\r\n    setPlaceholderIndex(null);\r\n    context.current.index = null;\r\n  }, []);\r\n\r\n  const { draggableContext, droppableClassName } = useDroppable({\r\n    id,\r\n    context: context.current,\r\n    acceptedType,\r\n    onDraggableEnter,\r\n    onDraggableHover,\r\n    onDraggableLeave,\r\n  });\r\n\r\n  let listItems = enrichWithPlaceholder(\r\n    items,\r\n    placeholderIndex,\r\n    placeholderGeometry,\r\n  );\r\n\r\n  const itemToIgnoreId = draggableContext && draggableContext.id;\r\n  if (itemToIgnoreId) {\r\n    listItems = listItems.filter(\r\n      item =>\r\n        item.type === ITEM_TYPE.PLACEHOLDER || item.data.id !== itemToIgnoreId,\r\n    );\r\n  }\r\n  return {\r\n    listItems,\r\n    setItemAt,\r\n    droppableClassName,\r\n  };\r\n}\r\n\r\nexport { useDroppableList, ITEM_TYPE, LIST_TYPE };\r\n","/**\r\n * Return index of first element of array, for which predicate returns false\r\n */\r\nfunction lowerBound(array, predicate) {\r\n  let leftIdx = 0,\r\n    rightIdx = array.length - 1;\r\n\r\n  while (leftIdx <= rightIdx) {\r\n    const middleIdx = Math.floor((leftIdx + rightIdx) / 2);\r\n\r\n    if (predicate(array[middleIdx])) {\r\n      rightIdx = middleIdx - 1;\r\n    } else {\r\n      leftIdx = middleIdx + 1;\r\n    }\r\n  }\r\n\r\n  return leftIdx < array.length ? leftIdx : null;\r\n}\r\n\r\nexport { lowerBound };\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport DragDropContext from './internal/DragDropContext';\r\n\r\nfunction useDroppable(droppable) {\r\n  const { draggedObject, registerDroppable } = useContext(DragDropContext);\r\n\r\n  useEffect(() => {\r\n    const unregisterDroppable = registerDroppable(droppable);\r\n\r\n    return unregisterDroppable;\r\n  }, [\r\n    droppable.id,\r\n    droppable.context,\r\n    droppable.node,\r\n    droppable.acceptedType,\r\n    droppable.onDraggableEnter,\r\n    droppable.onDraggableHover,\r\n    droppable.onDraggableLeave,\r\n  ]);\r\n\r\n  return {\r\n    draggableContext: draggedObject && draggedObject.context,\r\n    droppableClassName: `droppable-${droppable.acceptedType}`,\r\n  };\r\n}\r\n\r\nexport { useDroppable };\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { Card } from '../Card';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { addCardRequest, moveList } from '../../ducks/board/actions';\r\nimport { useDraggable } from '../../drag-drop/useDraggable';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\nimport { moveTo } from '../../helpers/moveTo';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './CardList.scss';\r\n\r\nfunction CardList({\r\n  id,\r\n  name,\r\n  cards,\r\n  addCard,\r\n  setListRef,\r\n  moveList,\r\n  className,\r\n}) {\r\n  const { setItemAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.VERTICAL,\r\n    acceptedType: DRAGGABLE_TYPE.CARD,\r\n    items: cards,\r\n  });\r\n\r\n  const dragHandleNode = useRef(null);\r\n  const listNode = useRef(null);\r\n\r\n  useDraggable({\r\n    context: {\r\n      id,\r\n    },\r\n    type: DRAGGABLE_TYPE.LIST,\r\n    node: listNode,\r\n    dragHandle: dragHandleNode,\r\n    renderElement: ({ clientPosition, draggedObjectRef }) => (\r\n      <div\r\n        id={id}\r\n        ref={draggedObjectRef}\r\n        className={classNames('card-list', 'dragged', className)}\r\n        style={moveTo(clientPosition)}\r\n      >\r\n        <header>\r\n          <h2 className='list-title'>{name}</h2>\r\n        </header>\r\n        {Boolean(listItems.length) && (\r\n          <ul className='list-cards'>\r\n            {listItems.map((item, idx) => (\r\n              <Card\r\n                key={item.data.id}\r\n                {...item.data}\r\n                className='list-card'\r\n                setCardRef={node => setItemAt(node, idx)}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <footer>\r\n          <AddComponent\r\n            className='add-card-btn'\r\n            openCreationFormBtnText='Добавить ещё одну карточку'\r\n            placeholderFormText='Введите название карточки'\r\n            submitFormBtnText='Добавить карточку'\r\n            onAdd={addCard.bind(null, id)}\r\n          />\r\n        </footer>\r\n      </div>\r\n    ),\r\n    onRelease: ({ draggableContext, droppableContext }) => {\r\n      moveList(\r\n        draggableContext.id,\r\n        droppableContext.id,\r\n        droppableContext.index,\r\n      );\r\n    },\r\n  });\r\n\r\n  const setRefs = node => {\r\n    setListRef(node);\r\n    listNode.current = node;\r\n  };\r\n\r\n  return (\r\n    <li\r\n      id={id}\r\n      ref={setRefs}\r\n      className={classNames('card-list', droppableClassName, className)}\r\n    >\r\n      <header ref={dragHandleNode}>\r\n        <h2 className='list-title'>{name}</h2>\r\n      </header>\r\n      {Boolean(listItems.length) && (\r\n        <ul className='list-cards'>\r\n          {listItems.map(\r\n            (item, idx) =>\r\n              ({\r\n                [ITEM_TYPE.REGULAR_ITEM]: (\r\n                  <Card\r\n                    key={item.data && item.data.id}\r\n                    {...item.data}\r\n                    className='list-card'\r\n                    setCardRef={node => setItemAt(node, idx)}\r\n                  />\r\n                ),\r\n                [ITEM_TYPE.PLACEHOLDER]: (\r\n                  <li\r\n                    key='placeholder'\r\n                    ref={node => setItemAt(node, idx)}\r\n                    className='placeholder list-card'\r\n                    style={{\r\n                      width: item.geometry && item.geometry.width,\r\n                      height: item.geometry && item.geometry.height,\r\n                    }}\r\n                  />\r\n                ),\r\n              }[item.type]),\r\n          )}\r\n        </ul>\r\n      )}\r\n      <footer>\r\n        <AddComponent\r\n          className='add-card-btn'\r\n          openCreationFormBtnText='Добавить ещё одну карточку'\r\n          placeholderFormText='Введите название карточки'\r\n          submitFormBtnText='Добавить карточку'\r\n          onAdd={addCard.bind(null, id)}\r\n        />\r\n      </footer>\r\n    </li>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  addCard: PropTypes.func.isRequired,\r\n  moveList: PropTypes.func.isRequired,\r\n  setListRef: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nCardList.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addCard: addCardRequest,\r\n  moveList,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(CardList);\r\n","export const selectBoard = state => state.board.board;\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { CardList } from '../CardList';\r\nimport { AddComponent } from '../AddComponent';\r\nimport { useBoardStyle } from './hooks/useBoardStyle';\r\nimport { selectBoard } from '../../ducks/board/selectors';\r\nimport { addListRequest, fetchBoardRequest } from '../../ducks/board/actions';\r\nimport { DRAGGABLE_TYPE } from '../../constants';\r\n\r\nimport {\r\n  ITEM_TYPE,\r\n  LIST_TYPE,\r\n  useDroppableList,\r\n} from '../../drag-drop/useDroppableList';\r\n\r\nimport './Board.scss';\r\n\r\nfunction Board({ id, background, lists, addList }) {\r\n  const boardStyle = useBoardStyle(background);\r\n\r\n  const { setItemAt, listItems, droppableClassName } = useDroppableList({\r\n    id,\r\n    listType: LIST_TYPE.HORIZONTAL,\r\n    acceptedType: DRAGGABLE_TYPE.LIST,\r\n    items: lists,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={classNames('board', droppableClassName)}\r\n      style={boardStyle}\r\n    >\r\n      <ul className='board-lists'>\r\n        {listItems.map(\r\n          (item, idx) =>\r\n            ({\r\n              [ITEM_TYPE.REGULAR_ITEM]: (\r\n                <CardList\r\n                  key={item.data && item.data.id}\r\n                  className='board-list'\r\n                  setListRef={node => setItemAt(node, idx)}\r\n                  {...item.data}\r\n                />\r\n              ),\r\n              [ITEM_TYPE.PLACEHOLDER]: (\r\n                <div\r\n                  key='placeholder'\r\n                  ref={node => setItemAt(node, idx)}\r\n                  className='placeholder board-list'\r\n                  style={{\r\n                    width: item.geometry && item.geometry.width,\r\n                    height: item.geometry && item.geometry.height,\r\n                  }}\r\n                />\r\n              ),\r\n            }[item.type]),\r\n        )}\r\n        <AddComponent\r\n          className='add-list-wrapper'\r\n          formClassName='add-list-form'\r\n          openCreationFormBtnText='Добавить ещё одну колонку'\r\n          placeholderFormText='Введите название колонки'\r\n          submitFormBtnText='Добавить колонку'\r\n          onAdd={addList.bind(null, id)}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BoardContainer({ id, board, fetchBoard, addList }) {\r\n  useEffect(() => {\r\n    fetchBoard(id);\r\n  }, [fetchBoard, id]);\r\n\r\n  return board && <Board addList={addList} {...board} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: selectBoard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchBoard: fetchBoardRequest,\r\n  addList: addListRequest,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BoardContainer);\r\n","import { useMemo } from 'react';\r\n\r\nfunction useBoardStyle(background) {\r\n  const backgroundStyle =\r\n    background.type === 'img'\r\n      ? `url(${background.url}) no-repeat`\r\n      : background.color;\r\n\r\n  const boardStyle = useMemo(\r\n    () => ({\r\n      background: backgroundStyle,\r\n      backgroundSize: 'cover',\r\n    }),\r\n    [backgroundStyle],\r\n  );\r\n  return boardStyle;\r\n}\r\n\r\nexport { useBoardStyle };\r\n","import React from 'react';\n\nimport DragDropManager from './drag-drop/DragDropManager';\nimport { BoardContainer } from './components/Board';\n\nfunction App() {\n  return (\n    <DragDropManager>\n      <BoardContainer id={0} />\n    </DragDropManager>\n  );\n}\n\nexport default App;\n","import { ADD_CARD, ADD_LIST, FETCH_BOARD, MOVE } from './action-types';\r\n\r\nconst initialState = {\r\n  board: null,\r\n};\r\n\r\nexport const board = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          id: action.board.id,\r\n          name: action.board.name,\r\n          lists: action.board.lists,\r\n          background: action.board.background,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.CARD: {\r\n      const { cardId, destinationListId, indexInList } = action;\r\n\r\n      let cardToMove = null;\r\n      const modifiedLists = state.board.lists.map(list => {\r\n        const found = list.cards.find(item => item.id === cardId);\r\n        if (found) {\r\n          cardToMove = found;\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(item => item.id !== cardId),\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n\r\n      if (cardToMove) {\r\n        const dstList = modifiedLists.find(\r\n          list => list.id === destinationListId,\r\n        );\r\n        if (dstList) {\r\n          dstList.cards.splice(indexInList, 0, cardToMove);\r\n        } else {\r\n          console.error('List with id', destinationListId, 'not found');\r\n        }\r\n      } else {\r\n        console.error('List containing card with id', cardId, 'not found');\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case MOVE.LIST: {\r\n      const { listId, destinationBoardId, indexInBoard } = action;\r\n      if (state.board.id !== destinationBoardId) {\r\n        console.error('Board destination id does not match current board id');\r\n      }\r\n\r\n      const lastIdx = state.board.lists.findIndex(list => list.id === listId);\r\n      if (indexInBoard === lastIdx) {\r\n        return state;\r\n      }\r\n\r\n      const movedList = state.board.lists[lastIdx];\r\n      const idxToRemoveAt = lastIdx + (indexInBoard < lastIdx ? 1 : 0);\r\n\r\n      const modifiedLists = [...state.board.lists];\r\n\r\n      modifiedLists.splice(indexInBoard, 0, movedList);\r\n      modifiedLists.splice(idxToRemoveAt, 1);\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: modifiedLists,\r\n        },\r\n      };\r\n    }\r\n    case ADD_CARD.SUCCESS: {\r\n      const updatedLists = state.board.lists.map(list =>\r\n        list.id === action.listId\r\n          ? {\r\n              ...list,\r\n              cards: [...list.cards, action.card],\r\n            }\r\n          : list,\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: updatedLists,\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_LIST.SUCCESS: {\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, action.list],\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import { createBrowserHistory } from 'history';\r\n// import { connectRouter } from 'connected-react-router';\r\n\r\nimport { board } from '../ducks/board/reducer';\r\n\r\n// const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  // router: connectRouter(history),\r\n  board,\r\n});\r\n\r\nexport { rootReducer };\r\n","let id = 0;\r\n\r\nexport const mockBoard = {\r\n  id: (id++).toString(),\r\n  name: 'Моя доска',\r\n  background: {\r\n    type: 'img',\r\n    url:\r\n      'https://images.unsplash.com/photo-1508625935447-e0ebc2cdf6bf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=100',\r\n  },\r\n  lists: [\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'План на месяц',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Пройти курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отметить день рождения',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться на курсы английского, чтобы уехать жить в Лондон',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать бэкенд своего сайта на node.js',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Собрать портфолио',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать первую статью в блог',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content:\r\n            'Записаться в мотошколу. Хотя немного страшновато, конечно. Друзья и родители против, но очень хочется. Но кого я обманываю, уже 2 года решаюсь на этот шаг 😢 Еще и друзья будут хрустиком называть. В общем, хотя бы подумать над этим.',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нет, я серьезный человек, иду в мотошколу. Записываюсь!',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Выспаться',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Посмотреть игру престолов',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Научиться рисовать',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Сделать уборку',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться в тренажерный зал',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Купить обогреватель',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'План на неделю',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Написать To-Do app',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Отложить 2000 рублей',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Нарисовать мотивационный плакат «Магии нет»',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'План на день',\r\n      cards: [\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Записаться на курс по React',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Забронировать тир на субботу',\r\n        },\r\n        {\r\n          id: (id++).toString(),\r\n          content: 'Накидать тем для статей в блог',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: (id++).toString(),\r\n      name: 'Итоги',\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n","import _ from 'lodash';\r\n\r\nimport { mockBoard } from './mocks';\r\n\r\n/**\r\n * This file is going to send requests to server and return server responses in the future\r\n */\r\nexport function fetchBoardRequest(id) {\r\n  return mockBoard;\r\n}\r\n\r\nexport function addCardRequest(listId, content) {\r\n  const card = {\r\n    id: _.uniqueId('card'),\r\n    content,\r\n  };\r\n  return { listId, card };\r\n}\r\n\r\nexport function addListRequest(boardId, content) {\r\n  const list = {\r\n    id: _.uniqueId('list'),\r\n    name: content,\r\n    cards: [],\r\n  };\r\n  return { boardId, list };\r\n}","import { all, call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  addCardError,\r\n  addCardSuccess,\r\n  addListError,\r\n  addListSuccess,\r\n  fetchBoardError,\r\n  fetchBoardSuccess,\r\n} from './actions';\r\n\r\nimport { ADD_CARD, ADD_LIST, FETCH_BOARD } from './action-types';\r\n\r\nimport * as services from './services';\r\n\r\nfunction* fetchBoard({ id }) {\r\n  try {\r\n    const board = yield call(services.fetchBoardRequest, id);\r\n    yield put(fetchBoardSuccess(board));\r\n  } catch (error) {\r\n    yield put(fetchBoardError(error));\r\n  }\r\n}\r\n\r\nfunction* addCard({ listId, content }) {\r\n  try {\r\n    const newCardInfo = yield call(services.addCardRequest, listId, content);\r\n    yield put(addCardSuccess(newCardInfo.listId, newCardInfo.card));\r\n  } catch (error) {\r\n    yield put(addCardError(error));\r\n  }\r\n}\r\n\r\nfunction* addList({ boardId, content }) {\r\n  try {\r\n    const newListInfo = yield call(services.addListRequest, boardId, content);\r\n    yield put(addListSuccess(newListInfo.boardId, newListInfo.list));\r\n  } catch (error) {\r\n    yield put(addListError(error));\r\n  }\r\n}\r\n\r\nexport function* watchBoardRequests() {\r\n  yield all([\r\n    takeLatest(FETCH_BOARD.REQUEST, fetchBoard),\r\n    takeLatest(ADD_CARD.REQUEST, addCard),\r\n    takeLatest(ADD_LIST.REQUEST, addList),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { watchBoardRequests } from '../ducks/board/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(watchBoardRequests)]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\n// import { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\n// const navigationMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\n\nimport './assets/scss/reset.scss';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}